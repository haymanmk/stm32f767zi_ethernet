ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"ethernetif.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.ETH_PHY_IO_DeInit,"ax",%progbits
  17              		.align	1
  18              		.global	ETH_PHY_IO_DeInit
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-d16
  25              	ETH_PHY_IO_DeInit:
  26              	.LFB177:
  27              		.file 1 "LWIP/Target/ethernetif.c"
   1:LWIP/Target/ethernetif.c **** /* USER CODE BEGIN Header */
   2:LWIP/Target/ethernetif.c **** /**
   3:LWIP/Target/ethernetif.c ****  ******************************************************************************
   4:LWIP/Target/ethernetif.c ****  * File Name          : ethernetif.c
   5:LWIP/Target/ethernetif.c ****  * Description        : This file provides code for the configuration
   6:LWIP/Target/ethernetif.c ****  *                      of the ethernetif.c MiddleWare.
   7:LWIP/Target/ethernetif.c ****  ******************************************************************************
   8:LWIP/Target/ethernetif.c ****  * @attention
   9:LWIP/Target/ethernetif.c ****  *
  10:LWIP/Target/ethernetif.c ****  * Copyright (c) 2024 STMicroelectronics.
  11:LWIP/Target/ethernetif.c ****  * All rights reserved.
  12:LWIP/Target/ethernetif.c ****  *
  13:LWIP/Target/ethernetif.c ****  * This software is licensed under terms that can be found in the LICENSE file
  14:LWIP/Target/ethernetif.c ****  * in the root directory of this software component.
  15:LWIP/Target/ethernetif.c ****  * If no LICENSE file comes with this software, it is provided AS-IS.
  16:LWIP/Target/ethernetif.c ****  *
  17:LWIP/Target/ethernetif.c ****  ******************************************************************************
  18:LWIP/Target/ethernetif.c ****  */
  19:LWIP/Target/ethernetif.c **** /* USER CODE END Header */
  20:LWIP/Target/ethernetif.c **** 
  21:LWIP/Target/ethernetif.c **** /* Includes ------------------------------------------------------------------*/
  22:LWIP/Target/ethernetif.c **** #include "main.h"
  23:LWIP/Target/ethernetif.c **** #include "lwip/opt.h"
  24:LWIP/Target/ethernetif.c **** #include "lwip/mem.h"
  25:LWIP/Target/ethernetif.c **** #include "lwip/memp.h"
  26:LWIP/Target/ethernetif.c **** #include "lwip/timeouts.h"
  27:LWIP/Target/ethernetif.c **** #include "netif/ethernet.h"
  28:LWIP/Target/ethernetif.c **** #include "netif/etharp.h"
  29:LWIP/Target/ethernetif.c **** #include "lwip/ethip6.h"
  30:LWIP/Target/ethernetif.c **** #include "ethernetif.h"
  31:LWIP/Target/ethernetif.c **** #include "lan8742.h"
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 2


  32:LWIP/Target/ethernetif.c **** #include <string.h>
  33:LWIP/Target/ethernetif.c **** 
  34:LWIP/Target/ethernetif.c **** /* Within 'USER CODE' section, code will be kept by default at each generation */
  35:LWIP/Target/ethernetif.c **** /* USER CODE BEGIN 0 */
  36:LWIP/Target/ethernetif.c **** 
  37:LWIP/Target/ethernetif.c **** /* USER CODE END 0 */
  38:LWIP/Target/ethernetif.c **** 
  39:LWIP/Target/ethernetif.c **** /* Private define ------------------------------------------------------------*/
  40:LWIP/Target/ethernetif.c **** 
  41:LWIP/Target/ethernetif.c **** /* Network interface name */
  42:LWIP/Target/ethernetif.c **** #define IFNAME0 's'
  43:LWIP/Target/ethernetif.c **** #define IFNAME1 't'
  44:LWIP/Target/ethernetif.c **** 
  45:LWIP/Target/ethernetif.c **** /* ETH Setting  */
  46:LWIP/Target/ethernetif.c **** #define ETH_DMA_TRANSMIT_TIMEOUT (20U)
  47:LWIP/Target/ethernetif.c **** #define ETH_TX_BUFFER_MAX ((ETH_TX_DESC_CNT) * 2U)
  48:LWIP/Target/ethernetif.c **** 
  49:LWIP/Target/ethernetif.c **** /* USER CODE BEGIN 1 */
  50:LWIP/Target/ethernetif.c **** 
  51:LWIP/Target/ethernetif.c **** /* USER CODE END 1 */
  52:LWIP/Target/ethernetif.c **** 
  53:LWIP/Target/ethernetif.c **** /* Private variables ---------------------------------------------------------*/
  54:LWIP/Target/ethernetif.c **** /*
  55:LWIP/Target/ethernetif.c **** @Note: This interface is implemented to operate in zero-copy mode only:
  56:LWIP/Target/ethernetif.c ****         - Rx buffers will be allocated from LwIP stack memory heap,
  57:LWIP/Target/ethernetif.c ****           then passed to ETH HAL driver.
  58:LWIP/Target/ethernetif.c ****         - Tx buffers will be allocated from LwIP stack memory heap,
  59:LWIP/Target/ethernetif.c ****           then passed to ETH HAL driver.
  60:LWIP/Target/ethernetif.c **** 
  61:LWIP/Target/ethernetif.c **** @Notes:
  62:LWIP/Target/ethernetif.c ****   1.a. ETH DMA Rx descriptors must be contiguous, the default count is 4,
  63:LWIP/Target/ethernetif.c ****        to customize it please redefine ETH_RX_DESC_CNT in ETH GUI (Rx Descriptor Length)
  64:LWIP/Target/ethernetif.c ****        so that updated value will be generated in stm32xxxx_hal_conf.h
  65:LWIP/Target/ethernetif.c ****   1.b. ETH DMA Tx descriptors must be contiguous, the default count is 4,
  66:LWIP/Target/ethernetif.c ****        to customize it please redefine ETH_TX_DESC_CNT in ETH GUI (Tx Descriptor Length)
  67:LWIP/Target/ethernetif.c ****        so that updated value will be generated in stm32xxxx_hal_conf.h
  68:LWIP/Target/ethernetif.c **** 
  69:LWIP/Target/ethernetif.c ****   2.a. Rx Buffers number must be between ETH_RX_DESC_CNT and 2*ETH_RX_DESC_CNT
  70:LWIP/Target/ethernetif.c ****   2.b. Rx Buffers must have the same size: ETH_RX_BUF_SIZE, this value must
  71:LWIP/Target/ethernetif.c ****        passed to ETH DMA in the init field (heth.Init.RxBuffLen)
  72:LWIP/Target/ethernetif.c ****   2.c  The RX Ruffers addresses and sizes must be properly defined to be aligned
  73:LWIP/Target/ethernetif.c ****        to L1-CACHE line size (32 bytes).
  74:LWIP/Target/ethernetif.c **** */
  75:LWIP/Target/ethernetif.c **** 
  76:LWIP/Target/ethernetif.c **** /* Data Type Definitions */
  77:LWIP/Target/ethernetif.c **** typedef enum
  78:LWIP/Target/ethernetif.c **** {
  79:LWIP/Target/ethernetif.c ****   RX_ALLOC_OK = 0x00,
  80:LWIP/Target/ethernetif.c ****   RX_ALLOC_ERROR = 0x01
  81:LWIP/Target/ethernetif.c **** } RxAllocStatusTypeDef;
  82:LWIP/Target/ethernetif.c **** 
  83:LWIP/Target/ethernetif.c **** typedef struct
  84:LWIP/Target/ethernetif.c **** {
  85:LWIP/Target/ethernetif.c ****   struct pbuf_custom pbuf_custom;
  86:LWIP/Target/ethernetif.c ****   uint8_t buff[(ETH_RX_BUF_SIZE + 31) & ~31] __ALIGNED(32);
  87:LWIP/Target/ethernetif.c **** } RxBuff_t;
  88:LWIP/Target/ethernetif.c **** 
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 3


  89:LWIP/Target/ethernetif.c **** /* Memory Pool Declaration */
  90:LWIP/Target/ethernetif.c **** #define ETH_RX_BUFFER_CNT 12U
  91:LWIP/Target/ethernetif.c **** LWIP_MEMPOOL_DECLARE(RX_POOL, ETH_RX_BUFFER_CNT, sizeof(RxBuff_t), "Zero-copy RX PBUF pool");
  92:LWIP/Target/ethernetif.c **** 
  93:LWIP/Target/ethernetif.c **** /* Variable Definitions */
  94:LWIP/Target/ethernetif.c **** static uint8_t RxAllocStatus;
  95:LWIP/Target/ethernetif.c **** 
  96:LWIP/Target/ethernetif.c **** #if defined(__ICCARM__) /*!< IAR Compiler */
  97:LWIP/Target/ethernetif.c **** 
  98:LWIP/Target/ethernetif.c **** #pragma location = 0x2007c000
  99:LWIP/Target/ethernetif.c **** ETH_DMADescTypeDef DMARxDscrTab[ETH_RX_DESC_CNT]; /* Ethernet Rx DMA Descriptors */
 100:LWIP/Target/ethernetif.c **** #pragma location = 0x2007c0a0
 101:LWIP/Target/ethernetif.c **** ETH_DMADescTypeDef DMATxDscrTab[ETH_TX_DESC_CNT]; /* Ethernet Tx DMA Descriptors */
 102:LWIP/Target/ethernetif.c **** 
 103:LWIP/Target/ethernetif.c **** #elif defined(__CC_ARM) /* MDK ARM Compiler */
 104:LWIP/Target/ethernetif.c **** 
 105:LWIP/Target/ethernetif.c **** __attribute__((at(0x2007c000))) ETH_DMADescTypeDef DMARxDscrTab[ETH_RX_DESC_CNT]; /* Ethernet Rx DM
 106:LWIP/Target/ethernetif.c **** __attribute__((at(0x2007c0a0))) ETH_DMADescTypeDef DMATxDscrTab[ETH_TX_DESC_CNT]; /* Ethernet Tx DM
 107:LWIP/Target/ethernetif.c **** 
 108:LWIP/Target/ethernetif.c **** #elif defined(__GNUC__) /* GNU Compiler */
 109:LWIP/Target/ethernetif.c **** 
 110:LWIP/Target/ethernetif.c **** ETH_DMADescTypeDef DMARxDscrTab[ETH_RX_DESC_CNT] __attribute__((section(".RxDecripSection"))); /* E
 111:LWIP/Target/ethernetif.c **** ETH_DMADescTypeDef DMATxDscrTab[ETH_TX_DESC_CNT] __attribute__((section(".TxDecripSection"))); /* E
 112:LWIP/Target/ethernetif.c **** 
 113:LWIP/Target/ethernetif.c **** #endif
 114:LWIP/Target/ethernetif.c **** 
 115:LWIP/Target/ethernetif.c **** /* USER CODE BEGIN 2 */
 116:LWIP/Target/ethernetif.c **** 
 117:LWIP/Target/ethernetif.c **** /* USER CODE END 2 */
 118:LWIP/Target/ethernetif.c **** 
 119:LWIP/Target/ethernetif.c **** /* Global Ethernet handle */
 120:LWIP/Target/ethernetif.c **** ETH_HandleTypeDef heth;
 121:LWIP/Target/ethernetif.c **** ETH_TxPacketConfig TxConfig;
 122:LWIP/Target/ethernetif.c **** 
 123:LWIP/Target/ethernetif.c **** /* Private function prototypes -----------------------------------------------*/
 124:LWIP/Target/ethernetif.c **** int32_t ETH_PHY_IO_Init(void);
 125:LWIP/Target/ethernetif.c **** int32_t ETH_PHY_IO_DeInit(void);
 126:LWIP/Target/ethernetif.c **** int32_t ETH_PHY_IO_ReadReg(uint32_t DevAddr, uint32_t RegAddr, uint32_t *pRegVal);
 127:LWIP/Target/ethernetif.c **** int32_t ETH_PHY_IO_WriteReg(uint32_t DevAddr, uint32_t RegAddr, uint32_t RegVal);
 128:LWIP/Target/ethernetif.c **** int32_t ETH_PHY_IO_GetTick(void);
 129:LWIP/Target/ethernetif.c **** 
 130:LWIP/Target/ethernetif.c **** lan8742_Object_t LAN8742;
 131:LWIP/Target/ethernetif.c **** lan8742_IOCtx_t LAN8742_IOCtx = {ETH_PHY_IO_Init,
 132:LWIP/Target/ethernetif.c ****                                  ETH_PHY_IO_DeInit,
 133:LWIP/Target/ethernetif.c ****                                  ETH_PHY_IO_WriteReg,
 134:LWIP/Target/ethernetif.c ****                                  ETH_PHY_IO_ReadReg,
 135:LWIP/Target/ethernetif.c ****                                  ETH_PHY_IO_GetTick};
 136:LWIP/Target/ethernetif.c **** 
 137:LWIP/Target/ethernetif.c **** /* USER CODE BEGIN 3 */
 138:LWIP/Target/ethernetif.c **** 
 139:LWIP/Target/ethernetif.c **** /* USER CODE END 3 */
 140:LWIP/Target/ethernetif.c **** 
 141:LWIP/Target/ethernetif.c **** /* Private functions ---------------------------------------------------------*/
 142:LWIP/Target/ethernetif.c **** void pbuf_free_custom(struct pbuf *p);
 143:LWIP/Target/ethernetif.c **** 
 144:LWIP/Target/ethernetif.c **** /* USER CODE BEGIN 4 */
 145:LWIP/Target/ethernetif.c **** 
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 4


 146:LWIP/Target/ethernetif.c **** /* USER CODE END 4 */
 147:LWIP/Target/ethernetif.c **** 
 148:LWIP/Target/ethernetif.c **** /*******************************************************************************
 149:LWIP/Target/ethernetif.c ****                        LL Driver Interface ( LwIP stack --> ETH)
 150:LWIP/Target/ethernetif.c **** *******************************************************************************/
 151:LWIP/Target/ethernetif.c **** /**
 152:LWIP/Target/ethernetif.c ****  * @brief In this function, the hardware should be initialized.
 153:LWIP/Target/ethernetif.c ****  * Called from ethernetif_init().
 154:LWIP/Target/ethernetif.c ****  *
 155:LWIP/Target/ethernetif.c ****  * @param netif the already initialized lwip network interface structure
 156:LWIP/Target/ethernetif.c ****  *        for this ethernetif
 157:LWIP/Target/ethernetif.c ****  */
 158:LWIP/Target/ethernetif.c **** static void low_level_init(struct netif *netif)
 159:LWIP/Target/ethernetif.c **** {
 160:LWIP/Target/ethernetif.c ****   HAL_StatusTypeDef hal_eth_init_status = HAL_OK;
 161:LWIP/Target/ethernetif.c ****   /* Start ETH HAL Init */
 162:LWIP/Target/ethernetif.c **** 
 163:LWIP/Target/ethernetif.c ****   uint8_t MACAddr[6];
 164:LWIP/Target/ethernetif.c ****   heth.Instance = ETH;
 165:LWIP/Target/ethernetif.c ****   MACAddr[0] = 0x00;
 166:LWIP/Target/ethernetif.c ****   MACAddr[1] = 0x80;
 167:LWIP/Target/ethernetif.c ****   MACAddr[2] = 0xE1;
 168:LWIP/Target/ethernetif.c ****   MACAddr[3] = 0x00;
 169:LWIP/Target/ethernetif.c ****   MACAddr[4] = 0x00;
 170:LWIP/Target/ethernetif.c ****   MACAddr[5] = 0x00;
 171:LWIP/Target/ethernetif.c ****   heth.Init.MACAddr = &MACAddr[0];
 172:LWIP/Target/ethernetif.c ****   heth.Init.MediaInterface = HAL_ETH_RMII_MODE;
 173:LWIP/Target/ethernetif.c ****   heth.Init.TxDesc = DMATxDscrTab;
 174:LWIP/Target/ethernetif.c ****   heth.Init.RxDesc = DMARxDscrTab;
 175:LWIP/Target/ethernetif.c ****   heth.Init.RxBuffLen = 1536;
 176:LWIP/Target/ethernetif.c **** 
 177:LWIP/Target/ethernetif.c ****   /* USER CODE BEGIN MACADDRESS */
 178:LWIP/Target/ethernetif.c **** 
 179:LWIP/Target/ethernetif.c ****   /* USER CODE END MACADDRESS */
 180:LWIP/Target/ethernetif.c **** 
 181:LWIP/Target/ethernetif.c ****   hal_eth_init_status = HAL_ETH_Init(&heth);
 182:LWIP/Target/ethernetif.c **** 
 183:LWIP/Target/ethernetif.c ****   memset(&TxConfig, 0, sizeof(ETH_TxPacketConfig));
 184:LWIP/Target/ethernetif.c ****   TxConfig.Attributes = ETH_TX_PACKETS_FEATURES_CSUM | ETH_TX_PACKETS_FEATURES_CRCPAD;
 185:LWIP/Target/ethernetif.c ****   TxConfig.ChecksumCtrl = ETH_CHECKSUM_IPHDR_PAYLOAD_INSERT_PHDR_CALC;
 186:LWIP/Target/ethernetif.c ****   TxConfig.CRCPadCtrl = ETH_CRC_PAD_INSERT;
 187:LWIP/Target/ethernetif.c **** 
 188:LWIP/Target/ethernetif.c ****   /* End ETH HAL Init */
 189:LWIP/Target/ethernetif.c **** 
 190:LWIP/Target/ethernetif.c ****   /* Initialize the RX POOL */
 191:LWIP/Target/ethernetif.c ****   LWIP_MEMPOOL_INIT(RX_POOL);
 192:LWIP/Target/ethernetif.c **** 
 193:LWIP/Target/ethernetif.c **** #if LWIP_ARP || LWIP_ETHERNET
 194:LWIP/Target/ethernetif.c **** 
 195:LWIP/Target/ethernetif.c ****   /* set MAC hardware address length */
 196:LWIP/Target/ethernetif.c ****   netif->hwaddr_len = ETH_HWADDR_LEN;
 197:LWIP/Target/ethernetif.c **** 
 198:LWIP/Target/ethernetif.c ****   /* set MAC hardware address */
 199:LWIP/Target/ethernetif.c ****   netif->hwaddr[0] = heth.Init.MACAddr[0];
 200:LWIP/Target/ethernetif.c ****   netif->hwaddr[1] = heth.Init.MACAddr[1];
 201:LWIP/Target/ethernetif.c ****   netif->hwaddr[2] = heth.Init.MACAddr[2];
 202:LWIP/Target/ethernetif.c ****   netif->hwaddr[3] = heth.Init.MACAddr[3];
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 5


 203:LWIP/Target/ethernetif.c ****   netif->hwaddr[4] = heth.Init.MACAddr[4];
 204:LWIP/Target/ethernetif.c ****   netif->hwaddr[5] = heth.Init.MACAddr[5];
 205:LWIP/Target/ethernetif.c **** 
 206:LWIP/Target/ethernetif.c ****   /* maximum transfer unit */
 207:LWIP/Target/ethernetif.c ****   netif->mtu = ETH_MAX_PAYLOAD;
 208:LWIP/Target/ethernetif.c **** 
 209:LWIP/Target/ethernetif.c **** /* Accept broadcast address and ARP traffic */
 210:LWIP/Target/ethernetif.c **** /* don't set NETIF_FLAG_ETHARP if this device is not an ethernet one */
 211:LWIP/Target/ethernetif.c **** #if LWIP_ARP
 212:LWIP/Target/ethernetif.c ****   netif->flags |= NETIF_FLAG_BROADCAST | NETIF_FLAG_ETHARP;
 213:LWIP/Target/ethernetif.c **** #else
 214:LWIP/Target/ethernetif.c ****   netif->flags |= NETIF_FLAG_BROADCAST;
 215:LWIP/Target/ethernetif.c **** #endif /* LWIP_ARP */
 216:LWIP/Target/ethernetif.c **** 
 217:LWIP/Target/ethernetif.c ****   /* USER CODE BEGIN PHY_PRE_CONFIG */
 218:LWIP/Target/ethernetif.c **** 
 219:LWIP/Target/ethernetif.c ****   /* USER CODE END PHY_PRE_CONFIG */
 220:LWIP/Target/ethernetif.c ****   /* Set PHY IO functions */
 221:LWIP/Target/ethernetif.c ****   LAN8742_RegisterBusIO(&LAN8742, &LAN8742_IOCtx);
 222:LWIP/Target/ethernetif.c **** 
 223:LWIP/Target/ethernetif.c ****   /* Initialize the LAN8742 ETH PHY */
 224:LWIP/Target/ethernetif.c ****   LAN8742_Init(&LAN8742);
 225:LWIP/Target/ethernetif.c **** 
 226:LWIP/Target/ethernetif.c ****   if (hal_eth_init_status == HAL_OK)
 227:LWIP/Target/ethernetif.c ****   {
 228:LWIP/Target/ethernetif.c ****     /* Get link state */
 229:LWIP/Target/ethernetif.c ****     ethernet_link_check_state(netif);
 230:LWIP/Target/ethernetif.c ****   }
 231:LWIP/Target/ethernetif.c ****   else
 232:LWIP/Target/ethernetif.c ****   {
 233:LWIP/Target/ethernetif.c ****     Error_Handler();
 234:LWIP/Target/ethernetif.c ****   }
 235:LWIP/Target/ethernetif.c **** #endif /* LWIP_ARP || LWIP_ETHERNET */
 236:LWIP/Target/ethernetif.c **** 
 237:LWIP/Target/ethernetif.c ****   /* USER CODE BEGIN LOW_LEVEL_INIT */
 238:LWIP/Target/ethernetif.c **** 
 239:LWIP/Target/ethernetif.c ****   /* USER CODE END LOW_LEVEL_INIT */
 240:LWIP/Target/ethernetif.c **** }
 241:LWIP/Target/ethernetif.c **** 
 242:LWIP/Target/ethernetif.c **** /**
 243:LWIP/Target/ethernetif.c ****  * @brief This function should do the actual transmission of the packet. The packet is
 244:LWIP/Target/ethernetif.c ****  * contained in the pbuf that is passed to the function. This pbuf
 245:LWIP/Target/ethernetif.c ****  * might be chained.
 246:LWIP/Target/ethernetif.c ****  *
 247:LWIP/Target/ethernetif.c ****  * @param netif the lwip network interface structure for this ethernetif
 248:LWIP/Target/ethernetif.c ****  * @param p the MAC packet to send (e.g. IP packet including MAC addresses and type)
 249:LWIP/Target/ethernetif.c ****  * @return ERR_OK if the packet could be sent
 250:LWIP/Target/ethernetif.c ****  *         an err_t value if the packet couldn't be sent
 251:LWIP/Target/ethernetif.c ****  *
 252:LWIP/Target/ethernetif.c ****  * @note Returning ERR_MEM here if a DMA queue of your MAC is full can lead to
 253:LWIP/Target/ethernetif.c ****  *       strange results. You might consider waiting for space in the DMA queue
 254:LWIP/Target/ethernetif.c ****  *       to become available since the stack doesn't retry to send a packet
 255:LWIP/Target/ethernetif.c ****  *       dropped because of memory failure (except for the TCP timers).
 256:LWIP/Target/ethernetif.c ****  */
 257:LWIP/Target/ethernetif.c **** 
 258:LWIP/Target/ethernetif.c **** static err_t low_level_output(struct netif *netif, struct pbuf *p)
 259:LWIP/Target/ethernetif.c **** {
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 6


 260:LWIP/Target/ethernetif.c ****   uint32_t i = 0U;
 261:LWIP/Target/ethernetif.c ****   struct pbuf *q = NULL;
 262:LWIP/Target/ethernetif.c ****   err_t errval = ERR_OK;
 263:LWIP/Target/ethernetif.c ****   ETH_BufferTypeDef Txbuffer[ETH_TX_DESC_CNT] = {0};
 264:LWIP/Target/ethernetif.c **** 
 265:LWIP/Target/ethernetif.c ****   memset(Txbuffer, 0, ETH_TX_DESC_CNT * sizeof(ETH_BufferTypeDef));
 266:LWIP/Target/ethernetif.c **** 
 267:LWIP/Target/ethernetif.c ****   for (q = p; q != NULL; q = q->next)
 268:LWIP/Target/ethernetif.c ****   {
 269:LWIP/Target/ethernetif.c ****     if (i >= ETH_TX_DESC_CNT)
 270:LWIP/Target/ethernetif.c ****       return ERR_IF;
 271:LWIP/Target/ethernetif.c **** 
 272:LWIP/Target/ethernetif.c ****     Txbuffer[i].buffer = q->payload;
 273:LWIP/Target/ethernetif.c ****     Txbuffer[i].len = q->len;
 274:LWIP/Target/ethernetif.c **** 
 275:LWIP/Target/ethernetif.c ****     if (i > 0)
 276:LWIP/Target/ethernetif.c ****     {
 277:LWIP/Target/ethernetif.c ****       Txbuffer[i - 1].next = &Txbuffer[i];
 278:LWIP/Target/ethernetif.c ****     }
 279:LWIP/Target/ethernetif.c **** 
 280:LWIP/Target/ethernetif.c ****     if (q->next == NULL)
 281:LWIP/Target/ethernetif.c ****     {
 282:LWIP/Target/ethernetif.c ****       Txbuffer[i].next = NULL;
 283:LWIP/Target/ethernetif.c ****     }
 284:LWIP/Target/ethernetif.c **** 
 285:LWIP/Target/ethernetif.c ****     i++;
 286:LWIP/Target/ethernetif.c ****   }
 287:LWIP/Target/ethernetif.c **** 
 288:LWIP/Target/ethernetif.c ****   TxConfig.Length = p->tot_len;
 289:LWIP/Target/ethernetif.c ****   TxConfig.TxBuffer = Txbuffer;
 290:LWIP/Target/ethernetif.c ****   TxConfig.pData = p;
 291:LWIP/Target/ethernetif.c **** 
 292:LWIP/Target/ethernetif.c ****   HAL_ETH_Transmit(&heth, &TxConfig, ETH_DMA_TRANSMIT_TIMEOUT);
 293:LWIP/Target/ethernetif.c **** 
 294:LWIP/Target/ethernetif.c ****   return errval;
 295:LWIP/Target/ethernetif.c **** }
 296:LWIP/Target/ethernetif.c **** 
 297:LWIP/Target/ethernetif.c **** /**
 298:LWIP/Target/ethernetif.c ****  * @brief Should allocate a pbuf and transfer the bytes of the incoming
 299:LWIP/Target/ethernetif.c ****  * packet from the interface into the pbuf.
 300:LWIP/Target/ethernetif.c ****  *
 301:LWIP/Target/ethernetif.c ****  * @param netif the lwip network interface structure for this ethernetif
 302:LWIP/Target/ethernetif.c ****  * @return a pbuf filled with the received packet (including MAC header)
 303:LWIP/Target/ethernetif.c ****  *         NULL on memory error
 304:LWIP/Target/ethernetif.c ****  */
 305:LWIP/Target/ethernetif.c **** static struct pbuf *low_level_input(struct netif *netif)
 306:LWIP/Target/ethernetif.c **** {
 307:LWIP/Target/ethernetif.c ****   struct pbuf *p = NULL;
 308:LWIP/Target/ethernetif.c **** 
 309:LWIP/Target/ethernetif.c ****   if (RxAllocStatus == RX_ALLOC_OK)
 310:LWIP/Target/ethernetif.c ****   {
 311:LWIP/Target/ethernetif.c ****     HAL_ETH_ReadData(&heth, (void **)&p);
 312:LWIP/Target/ethernetif.c ****   }
 313:LWIP/Target/ethernetif.c **** 
 314:LWIP/Target/ethernetif.c ****   return p;
 315:LWIP/Target/ethernetif.c **** }
 316:LWIP/Target/ethernetif.c **** 
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 7


 317:LWIP/Target/ethernetif.c **** /**
 318:LWIP/Target/ethernetif.c ****  * @brief This function should be called when a packet is ready to be read
 319:LWIP/Target/ethernetif.c ****  * from the interface. It uses the function low_level_input() that
 320:LWIP/Target/ethernetif.c ****  * should handle the actual reception of bytes from the network
 321:LWIP/Target/ethernetif.c ****  * interface. Then the type of the received packet is determined and
 322:LWIP/Target/ethernetif.c ****  * the appropriate input function is called.
 323:LWIP/Target/ethernetif.c ****  *
 324:LWIP/Target/ethernetif.c ****  * @param netif the lwip network interface structure for this ethernetif
 325:LWIP/Target/ethernetif.c ****  */
 326:LWIP/Target/ethernetif.c **** void ethernetif_input(struct netif *netif)
 327:LWIP/Target/ethernetif.c **** {
 328:LWIP/Target/ethernetif.c ****   struct pbuf *p = NULL;
 329:LWIP/Target/ethernetif.c **** 
 330:LWIP/Target/ethernetif.c ****   do
 331:LWIP/Target/ethernetif.c ****   {
 332:LWIP/Target/ethernetif.c ****     p = low_level_input(netif);
 333:LWIP/Target/ethernetif.c ****     if (p != NULL)
 334:LWIP/Target/ethernetif.c ****     {
 335:LWIP/Target/ethernetif.c ****       if (netif->input(p, netif) != ERR_OK)
 336:LWIP/Target/ethernetif.c ****       {
 337:LWIP/Target/ethernetif.c ****         pbuf_free(p);
 338:LWIP/Target/ethernetif.c ****       }
 339:LWIP/Target/ethernetif.c ****     }
 340:LWIP/Target/ethernetif.c ****   } while (p != NULL);
 341:LWIP/Target/ethernetif.c **** }
 342:LWIP/Target/ethernetif.c **** 
 343:LWIP/Target/ethernetif.c **** #if !LWIP_ARP
 344:LWIP/Target/ethernetif.c **** /**
 345:LWIP/Target/ethernetif.c ****  * This function has to be completed by user in case of ARP OFF.
 346:LWIP/Target/ethernetif.c ****  *
 347:LWIP/Target/ethernetif.c ****  * @param netif the lwip network interface structure for this ethernetif
 348:LWIP/Target/ethernetif.c ****  * @return ERR_OK if ...
 349:LWIP/Target/ethernetif.c ****  */
 350:LWIP/Target/ethernetif.c **** static err_t low_level_output_arp_off(struct netif *netif, struct pbuf *q, const ip4_addr_t *ipaddr
 351:LWIP/Target/ethernetif.c **** {
 352:LWIP/Target/ethernetif.c ****   err_t errval;
 353:LWIP/Target/ethernetif.c ****   errval = ERR_OK;
 354:LWIP/Target/ethernetif.c **** 
 355:LWIP/Target/ethernetif.c ****   /* USER CODE BEGIN 5 */
 356:LWIP/Target/ethernetif.c **** 
 357:LWIP/Target/ethernetif.c ****   /* USER CODE END 5 */
 358:LWIP/Target/ethernetif.c **** 
 359:LWIP/Target/ethernetif.c ****   return errval;
 360:LWIP/Target/ethernetif.c **** }
 361:LWIP/Target/ethernetif.c **** #endif /* LWIP_ARP */
 362:LWIP/Target/ethernetif.c **** 
 363:LWIP/Target/ethernetif.c **** /**
 364:LWIP/Target/ethernetif.c ****  * @brief Should be called at the beginning of the program to set up the
 365:LWIP/Target/ethernetif.c ****  * network interface. It calls the function low_level_init() to do the
 366:LWIP/Target/ethernetif.c ****  * actual setup of the hardware.
 367:LWIP/Target/ethernetif.c ****  *
 368:LWIP/Target/ethernetif.c ****  * This function should be passed as a parameter to netif_add().
 369:LWIP/Target/ethernetif.c ****  *
 370:LWIP/Target/ethernetif.c ****  * @param netif the lwip network interface structure for this ethernetif
 371:LWIP/Target/ethernetif.c ****  * @return ERR_OK if the loopif is initialized
 372:LWIP/Target/ethernetif.c ****  *         ERR_MEM if private data couldn't be allocated
 373:LWIP/Target/ethernetif.c ****  *         any other err_t on error
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 8


 374:LWIP/Target/ethernetif.c ****  */
 375:LWIP/Target/ethernetif.c **** err_t ethernetif_init(struct netif *netif)
 376:LWIP/Target/ethernetif.c **** {
 377:LWIP/Target/ethernetif.c ****   LWIP_ASSERT("netif != NULL", (netif != NULL));
 378:LWIP/Target/ethernetif.c **** 
 379:LWIP/Target/ethernetif.c **** #if LWIP_NETIF_HOSTNAME
 380:LWIP/Target/ethernetif.c ****   /* Initialize interface hostname */
 381:LWIP/Target/ethernetif.c ****   netif->hostname = "lwip";
 382:LWIP/Target/ethernetif.c **** #endif /* LWIP_NETIF_HOSTNAME */
 383:LWIP/Target/ethernetif.c **** 
 384:LWIP/Target/ethernetif.c ****   /*
 385:LWIP/Target/ethernetif.c ****    * Initialize the snmp variables and counters inside the struct netif.
 386:LWIP/Target/ethernetif.c ****    * The last argument should be replaced with your link speed, in units
 387:LWIP/Target/ethernetif.c ****    * of bits per second.
 388:LWIP/Target/ethernetif.c ****    */
 389:LWIP/Target/ethernetif.c ****   // MIB2_INIT_NETIF(netif, snmp_ifType_ethernet_csmacd, LINK_SPEED_OF_YOUR_NETIF_IN_BPS);
 390:LWIP/Target/ethernetif.c **** 
 391:LWIP/Target/ethernetif.c ****   netif->name[0] = IFNAME0;
 392:LWIP/Target/ethernetif.c ****   netif->name[1] = IFNAME1;
 393:LWIP/Target/ethernetif.c ****   /* We directly use etharp_output() here to save a function call.
 394:LWIP/Target/ethernetif.c ****    * You can instead declare your own function an call etharp_output()
 395:LWIP/Target/ethernetif.c ****    * from it if you have to do some checks before sending (e.g. if link
 396:LWIP/Target/ethernetif.c ****    * is available...) */
 397:LWIP/Target/ethernetif.c **** 
 398:LWIP/Target/ethernetif.c **** #if LWIP_IPV4
 399:LWIP/Target/ethernetif.c **** #if LWIP_ARP || LWIP_ETHERNET
 400:LWIP/Target/ethernetif.c **** #if LWIP_ARP
 401:LWIP/Target/ethernetif.c ****   netif->output = etharp_output;
 402:LWIP/Target/ethernetif.c **** #else
 403:LWIP/Target/ethernetif.c ****   /* The user should write its own code in low_level_output_arp_off function */
 404:LWIP/Target/ethernetif.c ****   netif->output = low_level_output_arp_off;
 405:LWIP/Target/ethernetif.c **** #endif /* LWIP_ARP */
 406:LWIP/Target/ethernetif.c **** #endif /* LWIP_ARP || LWIP_ETHERNET */
 407:LWIP/Target/ethernetif.c **** #endif /* LWIP_IPV4 */
 408:LWIP/Target/ethernetif.c **** 
 409:LWIP/Target/ethernetif.c **** #if LWIP_IPV6
 410:LWIP/Target/ethernetif.c ****   netif->output_ip6 = ethip6_output;
 411:LWIP/Target/ethernetif.c **** #endif /* LWIP_IPV6 */
 412:LWIP/Target/ethernetif.c **** 
 413:LWIP/Target/ethernetif.c ****   netif->linkoutput = low_level_output;
 414:LWIP/Target/ethernetif.c **** 
 415:LWIP/Target/ethernetif.c ****   /* initialize the hardware */
 416:LWIP/Target/ethernetif.c ****   low_level_init(netif);
 417:LWIP/Target/ethernetif.c **** 
 418:LWIP/Target/ethernetif.c ****   return ERR_OK;
 419:LWIP/Target/ethernetif.c **** }
 420:LWIP/Target/ethernetif.c **** 
 421:LWIP/Target/ethernetif.c **** /**
 422:LWIP/Target/ethernetif.c ****  * @brief  Custom Rx pbuf free callback
 423:LWIP/Target/ethernetif.c ****  * @param  pbuf: pbuf to be freed
 424:LWIP/Target/ethernetif.c ****  * @retval None
 425:LWIP/Target/ethernetif.c ****  */
 426:LWIP/Target/ethernetif.c **** void pbuf_free_custom(struct pbuf *p)
 427:LWIP/Target/ethernetif.c **** {
 428:LWIP/Target/ethernetif.c ****   struct pbuf_custom *custom_pbuf = (struct pbuf_custom *)p;
 429:LWIP/Target/ethernetif.c ****   LWIP_MEMPOOL_FREE(RX_POOL, custom_pbuf);
 430:LWIP/Target/ethernetif.c **** 
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 9


 431:LWIP/Target/ethernetif.c ****   /* If the Rx Buffer Pool was exhausted, signal the ethernetif_input task to
 432:LWIP/Target/ethernetif.c ****    * call HAL_ETH_GetRxDataBuffer to rebuild the Rx descriptors. */
 433:LWIP/Target/ethernetif.c **** 
 434:LWIP/Target/ethernetif.c ****   if (RxAllocStatus == RX_ALLOC_ERROR)
 435:LWIP/Target/ethernetif.c ****   {
 436:LWIP/Target/ethernetif.c ****     RxAllocStatus = RX_ALLOC_OK;
 437:LWIP/Target/ethernetif.c ****   }
 438:LWIP/Target/ethernetif.c **** }
 439:LWIP/Target/ethernetif.c **** 
 440:LWIP/Target/ethernetif.c **** /* USER CODE BEGIN 6 */
 441:LWIP/Target/ethernetif.c **** 
 442:LWIP/Target/ethernetif.c **** /**
 443:LWIP/Target/ethernetif.c ****  * @brief  Returns the current time in milliseconds
 444:LWIP/Target/ethernetif.c ****  *         when LWIP_TIMERS == 1 and NO_SYS == 1
 445:LWIP/Target/ethernetif.c ****  * @param  None
 446:LWIP/Target/ethernetif.c ****  * @retval Current Time value
 447:LWIP/Target/ethernetif.c ****  */
 448:LWIP/Target/ethernetif.c **** u32_t sys_now(void)
 449:LWIP/Target/ethernetif.c **** {
 450:LWIP/Target/ethernetif.c ****   return HAL_GetTick();
 451:LWIP/Target/ethernetif.c **** }
 452:LWIP/Target/ethernetif.c **** 
 453:LWIP/Target/ethernetif.c **** /* USER CODE END 6 */
 454:LWIP/Target/ethernetif.c **** 
 455:LWIP/Target/ethernetif.c **** /**
 456:LWIP/Target/ethernetif.c ****  * @brief  Initializes the ETH MSP.
 457:LWIP/Target/ethernetif.c ****  * @param  ethHandle: ETH handle
 458:LWIP/Target/ethernetif.c ****  * @retval None
 459:LWIP/Target/ethernetif.c ****  */
 460:LWIP/Target/ethernetif.c **** 
 461:LWIP/Target/ethernetif.c **** void HAL_ETH_MspInit(ETH_HandleTypeDef *ethHandle)
 462:LWIP/Target/ethernetif.c **** {
 463:LWIP/Target/ethernetif.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 464:LWIP/Target/ethernetif.c ****   if (ethHandle->Instance == ETH)
 465:LWIP/Target/ethernetif.c ****   {
 466:LWIP/Target/ethernetif.c ****     /* USER CODE BEGIN ETH_MspInit 0 */
 467:LWIP/Target/ethernetif.c **** 
 468:LWIP/Target/ethernetif.c ****     /* USER CODE END ETH_MspInit 0 */
 469:LWIP/Target/ethernetif.c ****     /* Enable Peripheral clock */
 470:LWIP/Target/ethernetif.c ****     __HAL_RCC_ETH_CLK_ENABLE();
 471:LWIP/Target/ethernetif.c **** 
 472:LWIP/Target/ethernetif.c ****     __HAL_RCC_GPIOC_CLK_ENABLE();
 473:LWIP/Target/ethernetif.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 474:LWIP/Target/ethernetif.c ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 475:LWIP/Target/ethernetif.c ****     __HAL_RCC_GPIOG_CLK_ENABLE();
 476:LWIP/Target/ethernetif.c ****     /**ETH GPIO Configuration
 477:LWIP/Target/ethernetif.c ****     PC1     ------> ETH_MDC
 478:LWIP/Target/ethernetif.c ****     PA1     ------> ETH_REF_CLK
 479:LWIP/Target/ethernetif.c ****     PA2     ------> ETH_MDIO
 480:LWIP/Target/ethernetif.c ****     PA7     ------> ETH_CRS_DV
 481:LWIP/Target/ethernetif.c ****     PC4     ------> ETH_RXD0
 482:LWIP/Target/ethernetif.c ****     PC5     ------> ETH_RXD1
 483:LWIP/Target/ethernetif.c ****     PB13     ------> ETH_TXD1
 484:LWIP/Target/ethernetif.c ****     PG11     ------> ETH_TX_EN
 485:LWIP/Target/ethernetif.c ****     PG13     ------> ETH_TXD0
 486:LWIP/Target/ethernetif.c ****     */
 487:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Pin = RMII_MDC_Pin | RMII_RXD0_Pin | RMII_RXD1_Pin;
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 10


 488:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 489:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 490:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 491:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Alternate = GPIO_AF11_ETH;
 492:LWIP/Target/ethernetif.c ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 493:LWIP/Target/ethernetif.c **** 
 494:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Pin = RMII_REF_CLK_Pin | RMII_MDIO_Pin | RMII_CRS_DV_Pin;
 495:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 496:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 497:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 498:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Alternate = GPIO_AF11_ETH;
 499:LWIP/Target/ethernetif.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 500:LWIP/Target/ethernetif.c **** 
 501:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Pin = RMII_TXD1_Pin;
 502:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 503:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 504:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 505:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Alternate = GPIO_AF11_ETH;
 506:LWIP/Target/ethernetif.c ****     HAL_GPIO_Init(RMII_TXD1_GPIO_Port, &GPIO_InitStruct);
 507:LWIP/Target/ethernetif.c **** 
 508:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Pin = RMII_TX_EN_Pin | RMII_TXD0_Pin;
 509:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 510:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 511:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 512:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Alternate = GPIO_AF11_ETH;
 513:LWIP/Target/ethernetif.c ****     HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 514:LWIP/Target/ethernetif.c **** 
 515:LWIP/Target/ethernetif.c ****     /* USER CODE BEGIN ETH_MspInit 1 */
 516:LWIP/Target/ethernetif.c **** 
 517:LWIP/Target/ethernetif.c ****     /* USER CODE END ETH_MspInit 1 */
 518:LWIP/Target/ethernetif.c ****   }
 519:LWIP/Target/ethernetif.c **** }
 520:LWIP/Target/ethernetif.c **** 
 521:LWIP/Target/ethernetif.c **** void HAL_ETH_MspDeInit(ETH_HandleTypeDef *ethHandle)
 522:LWIP/Target/ethernetif.c **** {
 523:LWIP/Target/ethernetif.c ****   if (ethHandle->Instance == ETH)
 524:LWIP/Target/ethernetif.c ****   {
 525:LWIP/Target/ethernetif.c ****     /* USER CODE BEGIN ETH_MspDeInit 0 */
 526:LWIP/Target/ethernetif.c **** 
 527:LWIP/Target/ethernetif.c ****     /* USER CODE END ETH_MspDeInit 0 */
 528:LWIP/Target/ethernetif.c ****     /* Peripheral clock disable */
 529:LWIP/Target/ethernetif.c ****     __HAL_RCC_ETH_CLK_DISABLE();
 530:LWIP/Target/ethernetif.c **** 
 531:LWIP/Target/ethernetif.c ****     /**ETH GPIO Configuration
 532:LWIP/Target/ethernetif.c ****     PC1     ------> ETH_MDC
 533:LWIP/Target/ethernetif.c ****     PA1     ------> ETH_REF_CLK
 534:LWIP/Target/ethernetif.c ****     PA2     ------> ETH_MDIO
 535:LWIP/Target/ethernetif.c ****     PA7     ------> ETH_CRS_DV
 536:LWIP/Target/ethernetif.c ****     PC4     ------> ETH_RXD0
 537:LWIP/Target/ethernetif.c ****     PC5     ------> ETH_RXD1
 538:LWIP/Target/ethernetif.c ****     PB13     ------> ETH_TXD1
 539:LWIP/Target/ethernetif.c ****     PG11     ------> ETH_TX_EN
 540:LWIP/Target/ethernetif.c ****     PG13     ------> ETH_TXD0
 541:LWIP/Target/ethernetif.c ****     */
 542:LWIP/Target/ethernetif.c ****     HAL_GPIO_DeInit(GPIOC, RMII_MDC_Pin | RMII_RXD0_Pin | RMII_RXD1_Pin);
 543:LWIP/Target/ethernetif.c **** 
 544:LWIP/Target/ethernetif.c ****     HAL_GPIO_DeInit(GPIOA, RMII_REF_CLK_Pin | RMII_MDIO_Pin | RMII_CRS_DV_Pin);
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 11


 545:LWIP/Target/ethernetif.c **** 
 546:LWIP/Target/ethernetif.c ****     HAL_GPIO_DeInit(RMII_TXD1_GPIO_Port, RMII_TXD1_Pin);
 547:LWIP/Target/ethernetif.c **** 
 548:LWIP/Target/ethernetif.c ****     HAL_GPIO_DeInit(GPIOG, RMII_TX_EN_Pin | RMII_TXD0_Pin);
 549:LWIP/Target/ethernetif.c **** 
 550:LWIP/Target/ethernetif.c ****     /* USER CODE BEGIN ETH_MspDeInit 1 */
 551:LWIP/Target/ethernetif.c **** 
 552:LWIP/Target/ethernetif.c ****     /* USER CODE END ETH_MspDeInit 1 */
 553:LWIP/Target/ethernetif.c ****   }
 554:LWIP/Target/ethernetif.c **** }
 555:LWIP/Target/ethernetif.c **** 
 556:LWIP/Target/ethernetif.c **** /*******************************************************************************
 557:LWIP/Target/ethernetif.c ****                        PHI IO Functions
 558:LWIP/Target/ethernetif.c **** *******************************************************************************/
 559:LWIP/Target/ethernetif.c **** /**
 560:LWIP/Target/ethernetif.c ****  * @brief  Initializes the MDIO interface GPIO and clocks.
 561:LWIP/Target/ethernetif.c ****  * @param  None
 562:LWIP/Target/ethernetif.c ****  * @retval 0 if OK, -1 if ERROR
 563:LWIP/Target/ethernetif.c ****  */
 564:LWIP/Target/ethernetif.c **** int32_t ETH_PHY_IO_Init(void)
 565:LWIP/Target/ethernetif.c **** {
 566:LWIP/Target/ethernetif.c ****   /* We assume that MDIO GPIO configuration is already done
 567:LWIP/Target/ethernetif.c ****      in the ETH_MspInit() else it should be done here
 568:LWIP/Target/ethernetif.c ****   */
 569:LWIP/Target/ethernetif.c **** 
 570:LWIP/Target/ethernetif.c ****   /* Configure the MDIO Clock */
 571:LWIP/Target/ethernetif.c ****   HAL_ETH_SetMDIOClockRange(&heth);
 572:LWIP/Target/ethernetif.c **** 
 573:LWIP/Target/ethernetif.c ****   return 0;
 574:LWIP/Target/ethernetif.c **** }
 575:LWIP/Target/ethernetif.c **** 
 576:LWIP/Target/ethernetif.c **** /**
 577:LWIP/Target/ethernetif.c ****  * @brief  De-Initializes the MDIO interface .
 578:LWIP/Target/ethernetif.c ****  * @param  None
 579:LWIP/Target/ethernetif.c ****  * @retval 0 if OK, -1 if ERROR
 580:LWIP/Target/ethernetif.c ****  */
 581:LWIP/Target/ethernetif.c **** int32_t ETH_PHY_IO_DeInit(void)
 582:LWIP/Target/ethernetif.c **** {
  28              		.loc 1 582 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 583:LWIP/Target/ethernetif.c ****   return 0;
  33              		.loc 1 583 3 view .LVU1
 584:LWIP/Target/ethernetif.c **** }
  34              		.loc 1 584 1 is_stmt 0 view .LVU2
  35 0000 0020     		movs	r0, #0
  36 0002 7047     		bx	lr
  37              		.cfi_endproc
  38              	.LFE177:
  40              		.section	.text.low_level_input,"ax",%progbits
  41              		.align	1
  42              		.syntax unified
  43              		.thumb
  44              		.thumb_func
  45              		.fpu fpv5-d16
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 12


  47              	low_level_input:
  48              	.LVL0:
  49              	.LFB169:
 306:LWIP/Target/ethernetif.c ****   struct pbuf *p = NULL;
  50              		.loc 1 306 1 is_stmt 1 view -0
  51              		.cfi_startproc
  52              		@ args = 0, pretend = 0, frame = 8
  53              		@ frame_needed = 0, uses_anonymous_args = 0
 306:LWIP/Target/ethernetif.c ****   struct pbuf *p = NULL;
  54              		.loc 1 306 1 is_stmt 0 view .LVU4
  55 0000 00B5     		push	{lr}
  56              	.LCFI0:
  57              		.cfi_def_cfa_offset 4
  58              		.cfi_offset 14, -4
  59 0002 83B0     		sub	sp, sp, #12
  60              	.LCFI1:
  61              		.cfi_def_cfa_offset 16
 307:LWIP/Target/ethernetif.c **** 
  62              		.loc 1 307 3 is_stmt 1 view .LVU5
 307:LWIP/Target/ethernetif.c **** 
  63              		.loc 1 307 16 is_stmt 0 view .LVU6
  64 0004 0023     		movs	r3, #0
  65 0006 0193     		str	r3, [sp, #4]
 309:LWIP/Target/ethernetif.c ****   {
  66              		.loc 1 309 3 is_stmt 1 view .LVU7
 309:LWIP/Target/ethernetif.c ****   {
  67              		.loc 1 309 21 is_stmt 0 view .LVU8
  68 0008 054B     		ldr	r3, .L6
  69 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 309:LWIP/Target/ethernetif.c ****   {
  70              		.loc 1 309 6 view .LVU9
  71 000c 1BB1     		cbz	r3, .L5
  72              	.LVL1:
  73              	.L3:
 314:LWIP/Target/ethernetif.c **** }
  74              		.loc 1 314 3 is_stmt 1 view .LVU10
 315:LWIP/Target/ethernetif.c **** 
  75              		.loc 1 315 1 is_stmt 0 view .LVU11
  76 000e 0198     		ldr	r0, [sp, #4]
  77 0010 03B0     		add	sp, sp, #12
  78              	.LCFI2:
  79              		.cfi_remember_state
  80              		.cfi_def_cfa_offset 4
  81              		@ sp needed
  82 0012 5DF804FB 		ldr	pc, [sp], #4
  83              	.LVL2:
  84              	.L5:
  85              	.LCFI3:
  86              		.cfi_restore_state
 311:LWIP/Target/ethernetif.c ****   }
  87              		.loc 1 311 5 is_stmt 1 view .LVU12
  88 0016 01A9     		add	r1, sp, #4
  89 0018 0248     		ldr	r0, .L6+4
  90              	.LVL3:
 311:LWIP/Target/ethernetif.c ****   }
  91              		.loc 1 311 5 is_stmt 0 view .LVU13
  92 001a FFF7FEFF 		bl	HAL_ETH_ReadData
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 13


  93              	.LVL4:
  94 001e F6E7     		b	.L3
  95              	.L7:
  96              		.align	2
  97              	.L6:
  98 0020 00000000 		.word	.LANCHOR0
  99 0024 00000000 		.word	.LANCHOR1
 100              		.cfi_endproc
 101              	.LFE169:
 103              		.section	.text.low_level_output,"ax",%progbits
 104              		.align	1
 105              		.syntax unified
 106              		.thumb
 107              		.thumb_func
 108              		.fpu fpv5-d16
 110              	low_level_output:
 111              	.LVL5:
 112              	.LFB168:
 259:LWIP/Target/ethernetif.c ****   uint32_t i = 0U;
 113              		.loc 1 259 1 is_stmt 1 view -0
 114              		.cfi_startproc
 115              		@ args = 0, pretend = 0, frame = 48
 116              		@ frame_needed = 0, uses_anonymous_args = 0
 259:LWIP/Target/ethernetif.c ****   uint32_t i = 0U;
 117              		.loc 1 259 1 is_stmt 0 view .LVU15
 118 0000 30B5     		push	{r4, r5, lr}
 119              	.LCFI4:
 120              		.cfi_def_cfa_offset 12
 121              		.cfi_offset 4, -12
 122              		.cfi_offset 5, -8
 123              		.cfi_offset 14, -4
 124 0002 8DB0     		sub	sp, sp, #52
 125              	.LCFI5:
 126              		.cfi_def_cfa_offset 64
 127 0004 0C46     		mov	r4, r1
 260:LWIP/Target/ethernetif.c ****   struct pbuf *q = NULL;
 128              		.loc 1 260 3 is_stmt 1 view .LVU16
 129              	.LVL6:
 261:LWIP/Target/ethernetif.c ****   err_t errval = ERR_OK;
 130              		.loc 1 261 3 view .LVU17
 262:LWIP/Target/ethernetif.c ****   ETH_BufferTypeDef Txbuffer[ETH_TX_DESC_CNT] = {0};
 131              		.loc 1 262 3 view .LVU18
 263:LWIP/Target/ethernetif.c **** 
 132              		.loc 1 263 3 view .LVU19
 263:LWIP/Target/ethernetif.c **** 
 133              		.loc 1 263 21 is_stmt 0 view .LVU20
 134 0006 3025     		movs	r5, #48
 135 0008 2A46     		mov	r2, r5
 136 000a 0021     		movs	r1, #0
 137              	.LVL7:
 263:LWIP/Target/ethernetif.c **** 
 138              		.loc 1 263 21 view .LVU21
 139 000c 6846     		mov	r0, sp
 140              	.LVL8:
 263:LWIP/Target/ethernetif.c **** 
 141              		.loc 1 263 21 view .LVU22
 142 000e FFF7FEFF 		bl	memset
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 14


 143              	.LVL9:
 265:LWIP/Target/ethernetif.c **** 
 144              		.loc 1 265 3 is_stmt 1 view .LVU23
 145 0012 2A46     		mov	r2, r5
 146 0014 0021     		movs	r1, #0
 147 0016 6846     		mov	r0, sp
 148 0018 FFF7FEFF 		bl	memset
 149              	.LVL10:
 267:LWIP/Target/ethernetif.c ****   {
 150              		.loc 1 267 3 view .LVU24
 267:LWIP/Target/ethernetif.c ****   {
 151              		.loc 1 267 10 is_stmt 0 view .LVU25
 152 001c 2246     		mov	r2, r4
 260:LWIP/Target/ethernetif.c ****   struct pbuf *q = NULL;
 153              		.loc 1 260 12 view .LVU26
 154 001e 0023     		movs	r3, #0
 267:LWIP/Target/ethernetif.c ****   {
 155              		.loc 1 267 3 view .LVU27
 156 0020 03E0     		b	.L9
 157              	.LVL11:
 158              	.L11:
 280:LWIP/Target/ethernetif.c ****     {
 159              		.loc 1 280 5 is_stmt 1 view .LVU28
 280:LWIP/Target/ethernetif.c ****     {
 160              		.loc 1 280 10 is_stmt 0 view .LVU29
 161 0022 1168     		ldr	r1, [r2]
 280:LWIP/Target/ethernetif.c ****     {
 162              		.loc 1 280 8 view .LVU30
 163 0024 E9B1     		cbz	r1, .L16
 164              	.L12:
 285:LWIP/Target/ethernetif.c ****   }
 165              		.loc 1 285 5 is_stmt 1 discriminator 2 view .LVU31
 285:LWIP/Target/ethernetif.c ****   }
 166              		.loc 1 285 6 is_stmt 0 discriminator 2 view .LVU32
 167 0026 0133     		adds	r3, r3, #1
 168              	.LVL12:
 267:LWIP/Target/ethernetif.c ****   {
 169              		.loc 1 267 26 is_stmt 1 discriminator 2 view .LVU33
 267:LWIP/Target/ethernetif.c ****   {
 170              		.loc 1 267 28 is_stmt 0 discriminator 2 view .LVU34
 171 0028 1268     		ldr	r2, [r2]
 172              	.LVL13:
 173              	.L9:
 267:LWIP/Target/ethernetif.c ****   {
 174              		.loc 1 267 15 is_stmt 1 discriminator 1 view .LVU35
 267:LWIP/Target/ethernetif.c ****   {
 175              		.loc 1 267 3 is_stmt 0 discriminator 1 view .LVU36
 176 002a 1AB3     		cbz	r2, .L17
 269:LWIP/Target/ethernetif.c ****       return ERR_IF;
 177              		.loc 1 269 5 is_stmt 1 view .LVU37
 269:LWIP/Target/ethernetif.c ****       return ERR_IF;
 178              		.loc 1 269 8 is_stmt 0 view .LVU38
 179 002c 032B     		cmp	r3, #3
 180 002e 2DD8     		bhi	.L14
 272:LWIP/Target/ethernetif.c ****     Txbuffer[i].len = q->len;
 181              		.loc 1 272 5 is_stmt 1 view .LVU39
 272:LWIP/Target/ethernetif.c ****     Txbuffer[i].len = q->len;
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 15


 182              		.loc 1 272 27 is_stmt 0 view .LVU40
 183 0030 5168     		ldr	r1, [r2, #4]
 272:LWIP/Target/ethernetif.c ****     Txbuffer[i].len = q->len;
 184              		.loc 1 272 24 view .LVU41
 185 0032 03EB4300 		add	r0, r3, r3, lsl #1
 186 0036 0CAD     		add	r5, sp, #48
 187 0038 05EB8000 		add	r0, r5, r0, lsl #2
 188 003c 40F8301C 		str	r1, [r0, #-48]
 273:LWIP/Target/ethernetif.c **** 
 189              		.loc 1 273 5 is_stmt 1 view .LVU42
 273:LWIP/Target/ethernetif.c **** 
 190              		.loc 1 273 24 is_stmt 0 view .LVU43
 191 0040 5189     		ldrh	r1, [r2, #10]
 273:LWIP/Target/ethernetif.c **** 
 192              		.loc 1 273 21 view .LVU44
 193 0042 40F82C1C 		str	r1, [r0, #-44]
 275:LWIP/Target/ethernetif.c ****     {
 194              		.loc 1 275 5 is_stmt 1 view .LVU45
 275:LWIP/Target/ethernetif.c ****     {
 195              		.loc 1 275 8 is_stmt 0 view .LVU46
 196 0046 002B     		cmp	r3, #0
 197 0048 EBD0     		beq	.L11
 277:LWIP/Target/ethernetif.c ****     }
 198              		.loc 1 277 7 is_stmt 1 view .LVU47
 277:LWIP/Target/ethernetif.c ****     }
 199              		.loc 1 277 18 is_stmt 0 view .LVU48
 200 004a 581E     		subs	r0, r3, #1
 277:LWIP/Target/ethernetif.c ****     }
 201              		.loc 1 277 30 view .LVU49
 202 004c 03EB4301 		add	r1, r3, r3, lsl #1
 203 0050 0DEB8101 		add	r1, sp, r1, lsl #2
 277:LWIP/Target/ethernetif.c ****     }
 204              		.loc 1 277 28 view .LVU50
 205 0054 00EB4000 		add	r0, r0, r0, lsl #1
 206 0058 05EB8000 		add	r0, r5, r0, lsl #2
 207 005c 40F8281C 		str	r1, [r0, #-40]
 208 0060 DFE7     		b	.L11
 209              	.L16:
 282:LWIP/Target/ethernetif.c ****     }
 210              		.loc 1 282 7 is_stmt 1 view .LVU51
 282:LWIP/Target/ethernetif.c ****     }
 211              		.loc 1 282 24 is_stmt 0 view .LVU52
 212 0062 03EB4301 		add	r1, r3, r3, lsl #1
 213 0066 0CA8     		add	r0, sp, #48
 214 0068 00EB8101 		add	r1, r0, r1, lsl #2
 215 006c 0020     		movs	r0, #0
 216 006e 41F8280C 		str	r0, [r1, #-40]
 217 0072 D8E7     		b	.L12
 218              	.L17:
 288:LWIP/Target/ethernetif.c ****   TxConfig.TxBuffer = Txbuffer;
 219              		.loc 1 288 3 is_stmt 1 view .LVU53
 288:LWIP/Target/ethernetif.c ****   TxConfig.TxBuffer = Txbuffer;
 220              		.loc 1 288 22 is_stmt 0 view .LVU54
 221 0074 2389     		ldrh	r3, [r4, #8]
 222              	.LVL14:
 288:LWIP/Target/ethernetif.c ****   TxConfig.TxBuffer = Txbuffer;
 223              		.loc 1 288 19 view .LVU55
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 16


 224 0076 0749     		ldr	r1, .L18
 225 0078 4B60     		str	r3, [r1, #4]
 289:LWIP/Target/ethernetif.c ****   TxConfig.pData = p;
 226              		.loc 1 289 3 is_stmt 1 view .LVU56
 289:LWIP/Target/ethernetif.c ****   TxConfig.pData = p;
 227              		.loc 1 289 21 is_stmt 0 view .LVU57
 228 007a C1F808D0 		str	sp, [r1, #8]
 290:LWIP/Target/ethernetif.c **** 
 229              		.loc 1 290 3 is_stmt 1 view .LVU58
 290:LWIP/Target/ethernetif.c **** 
 230              		.loc 1 290 18 is_stmt 0 view .LVU59
 231 007e 4C63     		str	r4, [r1, #52]
 292:LWIP/Target/ethernetif.c **** 
 232              		.loc 1 292 3 is_stmt 1 view .LVU60
 233 0080 1422     		movs	r2, #20
 234              	.LVL15:
 292:LWIP/Target/ethernetif.c **** 
 235              		.loc 1 292 3 is_stmt 0 view .LVU61
 236 0082 0548     		ldr	r0, .L18+4
 237 0084 FFF7FEFF 		bl	HAL_ETH_Transmit
 238              	.LVL16:
 294:LWIP/Target/ethernetif.c **** }
 239              		.loc 1 294 3 is_stmt 1 view .LVU62
 294:LWIP/Target/ethernetif.c **** }
 240              		.loc 1 294 10 is_stmt 0 view .LVU63
 241 0088 0020     		movs	r0, #0
 242 008a 01E0     		b	.L10
 243              	.LVL17:
 244              	.L14:
 270:LWIP/Target/ethernetif.c **** 
 245              		.loc 1 270 14 view .LVU64
 246 008c 6FF00B00 		mvn	r0, #11
 247              	.LVL18:
 248              	.L10:
 295:LWIP/Target/ethernetif.c **** 
 249              		.loc 1 295 1 view .LVU65
 250 0090 0DB0     		add	sp, sp, #52
 251              	.LCFI6:
 252              		.cfi_def_cfa_offset 12
 253              		@ sp needed
 254 0092 30BD     		pop	{r4, r5, pc}
 255              	.LVL19:
 256              	.L19:
 295:LWIP/Target/ethernetif.c **** 
 257              		.loc 1 295 1 view .LVU66
 258              		.align	2
 259              	.L18:
 260 0094 00000000 		.word	.LANCHOR2
 261 0098 00000000 		.word	.LANCHOR1
 262              		.cfi_endproc
 263              	.LFE168:
 265              		.section	.text.pbuf_free_custom,"ax",%progbits
 266              		.align	1
 267              		.global	pbuf_free_custom
 268              		.syntax unified
 269              		.thumb
 270              		.thumb_func
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 17


 271              		.fpu fpv5-d16
 273              	pbuf_free_custom:
 274              	.LVL20:
 275              	.LFB172:
 427:LWIP/Target/ethernetif.c ****   struct pbuf_custom *custom_pbuf = (struct pbuf_custom *)p;
 276              		.loc 1 427 1 is_stmt 1 view -0
 277              		.cfi_startproc
 278              		@ args = 0, pretend = 0, frame = 0
 279              		@ frame_needed = 0, uses_anonymous_args = 0
 427:LWIP/Target/ethernetif.c ****   struct pbuf_custom *custom_pbuf = (struct pbuf_custom *)p;
 280              		.loc 1 427 1 is_stmt 0 view .LVU68
 281 0000 08B5     		push	{r3, lr}
 282              	.LCFI7:
 283              		.cfi_def_cfa_offset 8
 284              		.cfi_offset 3, -8
 285              		.cfi_offset 14, -4
 286 0002 0146     		mov	r1, r0
 428:LWIP/Target/ethernetif.c ****   LWIP_MEMPOOL_FREE(RX_POOL, custom_pbuf);
 287              		.loc 1 428 3 is_stmt 1 view .LVU69
 288              	.LVL21:
 429:LWIP/Target/ethernetif.c **** 
 289              		.loc 1 429 3 view .LVU70
 290 0004 0548     		ldr	r0, .L24
 291              	.LVL22:
 429:LWIP/Target/ethernetif.c **** 
 292              		.loc 1 429 3 is_stmt 0 view .LVU71
 293 0006 FFF7FEFF 		bl	memp_free_pool
 294              	.LVL23:
 434:LWIP/Target/ethernetif.c ****   {
 295              		.loc 1 434 3 is_stmt 1 view .LVU72
 434:LWIP/Target/ethernetif.c ****   {
 296              		.loc 1 434 21 is_stmt 0 view .LVU73
 297 000a 054B     		ldr	r3, .L24+4
 298 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 434:LWIP/Target/ethernetif.c ****   {
 299              		.loc 1 434 6 view .LVU74
 300 000e 012B     		cmp	r3, #1
 301 0010 00D0     		beq	.L23
 302              	.L20:
 438:LWIP/Target/ethernetif.c **** 
 303              		.loc 1 438 1 view .LVU75
 304 0012 08BD     		pop	{r3, pc}
 305              	.L23:
 436:LWIP/Target/ethernetif.c ****   }
 306              		.loc 1 436 5 is_stmt 1 view .LVU76
 436:LWIP/Target/ethernetif.c ****   }
 307              		.loc 1 436 19 is_stmt 0 view .LVU77
 308 0014 024B     		ldr	r3, .L24+4
 309 0016 0022     		movs	r2, #0
 310 0018 1A70     		strb	r2, [r3]
 438:LWIP/Target/ethernetif.c **** 
 311              		.loc 1 438 1 view .LVU78
 312 001a FAE7     		b	.L20
 313              	.L25:
 314              		.align	2
 315              	.L24:
 316 001c 00000000 		.word	.LANCHOR3
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 18


 317 0020 00000000 		.word	.LANCHOR0
 318              		.cfi_endproc
 319              	.LFE172:
 321              		.section	.text.ETH_PHY_IO_GetTick,"ax",%progbits
 322              		.align	1
 323              		.global	ETH_PHY_IO_GetTick
 324              		.syntax unified
 325              		.thumb
 326              		.thumb_func
 327              		.fpu fpv5-d16
 329              	ETH_PHY_IO_GetTick:
 330              	.LFB180:
 585:LWIP/Target/ethernetif.c **** 
 586:LWIP/Target/ethernetif.c **** /**
 587:LWIP/Target/ethernetif.c ****  * @brief  Read a PHY register through the MDIO interface.
 588:LWIP/Target/ethernetif.c ****  * @param  DevAddr: PHY port address
 589:LWIP/Target/ethernetif.c ****  * @param  RegAddr: PHY register address
 590:LWIP/Target/ethernetif.c ****  * @param  pRegVal: pointer to hold the register value
 591:LWIP/Target/ethernetif.c ****  * @retval 0 if OK -1 if Error
 592:LWIP/Target/ethernetif.c ****  */
 593:LWIP/Target/ethernetif.c **** int32_t ETH_PHY_IO_ReadReg(uint32_t DevAddr, uint32_t RegAddr, uint32_t *pRegVal)
 594:LWIP/Target/ethernetif.c **** {
 595:LWIP/Target/ethernetif.c ****   if (HAL_ETH_ReadPHYRegister(&heth, DevAddr, RegAddr, pRegVal) != HAL_OK)
 596:LWIP/Target/ethernetif.c ****   {
 597:LWIP/Target/ethernetif.c ****     return -1;
 598:LWIP/Target/ethernetif.c ****   }
 599:LWIP/Target/ethernetif.c **** 
 600:LWIP/Target/ethernetif.c ****   return 0;
 601:LWIP/Target/ethernetif.c **** }
 602:LWIP/Target/ethernetif.c **** 
 603:LWIP/Target/ethernetif.c **** /**
 604:LWIP/Target/ethernetif.c ****  * @brief  Write a value to a PHY register through the MDIO interface.
 605:LWIP/Target/ethernetif.c ****  * @param  DevAddr: PHY port address
 606:LWIP/Target/ethernetif.c ****  * @param  RegAddr: PHY register address
 607:LWIP/Target/ethernetif.c ****  * @param  RegVal: Value to be written
 608:LWIP/Target/ethernetif.c ****  * @retval 0 if OK -1 if Error
 609:LWIP/Target/ethernetif.c ****  */
 610:LWIP/Target/ethernetif.c **** int32_t ETH_PHY_IO_WriteReg(uint32_t DevAddr, uint32_t RegAddr, uint32_t RegVal)
 611:LWIP/Target/ethernetif.c **** {
 612:LWIP/Target/ethernetif.c ****   if (HAL_ETH_WritePHYRegister(&heth, DevAddr, RegAddr, RegVal) != HAL_OK)
 613:LWIP/Target/ethernetif.c ****   {
 614:LWIP/Target/ethernetif.c ****     return -1;
 615:LWIP/Target/ethernetif.c ****   }
 616:LWIP/Target/ethernetif.c **** 
 617:LWIP/Target/ethernetif.c ****   return 0;
 618:LWIP/Target/ethernetif.c **** }
 619:LWIP/Target/ethernetif.c **** 
 620:LWIP/Target/ethernetif.c **** /**
 621:LWIP/Target/ethernetif.c ****  * @brief  Get the time in millisecons used for internal PHY driver process.
 622:LWIP/Target/ethernetif.c ****  * @retval Time value
 623:LWIP/Target/ethernetif.c ****  */
 624:LWIP/Target/ethernetif.c **** int32_t ETH_PHY_IO_GetTick(void)
 625:LWIP/Target/ethernetif.c **** {
 331              		.loc 1 625 1 is_stmt 1 view -0
 332              		.cfi_startproc
 333              		@ args = 0, pretend = 0, frame = 0
 334              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 19


 335 0000 08B5     		push	{r3, lr}
 336              	.LCFI8:
 337              		.cfi_def_cfa_offset 8
 338              		.cfi_offset 3, -8
 339              		.cfi_offset 14, -4
 626:LWIP/Target/ethernetif.c ****   return HAL_GetTick();
 340              		.loc 1 626 3 view .LVU80
 341              		.loc 1 626 10 is_stmt 0 view .LVU81
 342 0002 FFF7FEFF 		bl	HAL_GetTick
 343              	.LVL24:
 627:LWIP/Target/ethernetif.c **** }
 344              		.loc 1 627 1 view .LVU82
 345 0006 08BD     		pop	{r3, pc}
 346              		.cfi_endproc
 347              	.LFE180:
 349              		.section	.text.ETH_PHY_IO_Init,"ax",%progbits
 350              		.align	1
 351              		.global	ETH_PHY_IO_Init
 352              		.syntax unified
 353              		.thumb
 354              		.thumb_func
 355              		.fpu fpv5-d16
 357              	ETH_PHY_IO_Init:
 358              	.LFB176:
 565:LWIP/Target/ethernetif.c ****   /* We assume that MDIO GPIO configuration is already done
 359              		.loc 1 565 1 is_stmt 1 view -0
 360              		.cfi_startproc
 361              		@ args = 0, pretend = 0, frame = 0
 362              		@ frame_needed = 0, uses_anonymous_args = 0
 363 0000 08B5     		push	{r3, lr}
 364              	.LCFI9:
 365              		.cfi_def_cfa_offset 8
 366              		.cfi_offset 3, -8
 367              		.cfi_offset 14, -4
 571:LWIP/Target/ethernetif.c **** 
 368              		.loc 1 571 3 view .LVU84
 369 0002 0248     		ldr	r0, .L30
 370 0004 FFF7FEFF 		bl	HAL_ETH_SetMDIOClockRange
 371              	.LVL25:
 573:LWIP/Target/ethernetif.c **** }
 372              		.loc 1 573 3 view .LVU85
 574:LWIP/Target/ethernetif.c **** 
 373              		.loc 1 574 1 is_stmt 0 view .LVU86
 374 0008 0020     		movs	r0, #0
 375 000a 08BD     		pop	{r3, pc}
 376              	.L31:
 377              		.align	2
 378              	.L30:
 379 000c 00000000 		.word	.LANCHOR1
 380              		.cfi_endproc
 381              	.LFE176:
 383              		.section	.text.ETH_PHY_IO_ReadReg,"ax",%progbits
 384              		.align	1
 385              		.global	ETH_PHY_IO_ReadReg
 386              		.syntax unified
 387              		.thumb
 388              		.thumb_func
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 20


 389              		.fpu fpv5-d16
 391              	ETH_PHY_IO_ReadReg:
 392              	.LVL26:
 393              	.LFB178:
 594:LWIP/Target/ethernetif.c ****   if (HAL_ETH_ReadPHYRegister(&heth, DevAddr, RegAddr, pRegVal) != HAL_OK)
 394              		.loc 1 594 1 is_stmt 1 view -0
 395              		.cfi_startproc
 396              		@ args = 0, pretend = 0, frame = 0
 397              		@ frame_needed = 0, uses_anonymous_args = 0
 594:LWIP/Target/ethernetif.c ****   if (HAL_ETH_ReadPHYRegister(&heth, DevAddr, RegAddr, pRegVal) != HAL_OK)
 398              		.loc 1 594 1 is_stmt 0 view .LVU88
 399 0000 08B5     		push	{r3, lr}
 400              	.LCFI10:
 401              		.cfi_def_cfa_offset 8
 402              		.cfi_offset 3, -8
 403              		.cfi_offset 14, -4
 404 0002 1346     		mov	r3, r2
 595:LWIP/Target/ethernetif.c ****   {
 405              		.loc 1 595 3 is_stmt 1 view .LVU89
 595:LWIP/Target/ethernetif.c ****   {
 406              		.loc 1 595 7 is_stmt 0 view .LVU90
 407 0004 0A46     		mov	r2, r1
 408              	.LVL27:
 595:LWIP/Target/ethernetif.c ****   {
 409              		.loc 1 595 7 view .LVU91
 410 0006 0146     		mov	r1, r0
 411              	.LVL28:
 595:LWIP/Target/ethernetif.c ****   {
 412              		.loc 1 595 7 view .LVU92
 413 0008 0348     		ldr	r0, .L37
 414              	.LVL29:
 595:LWIP/Target/ethernetif.c ****   {
 415              		.loc 1 595 7 view .LVU93
 416 000a FFF7FEFF 		bl	HAL_ETH_ReadPHYRegister
 417              	.LVL30:
 595:LWIP/Target/ethernetif.c ****   {
 418              		.loc 1 595 6 view .LVU94
 419 000e 00B9     		cbnz	r0, .L36
 420              	.L32:
 601:LWIP/Target/ethernetif.c **** 
 421              		.loc 1 601 1 view .LVU95
 422 0010 08BD     		pop	{r3, pc}
 423              	.L36:
 597:LWIP/Target/ethernetif.c ****   }
 424              		.loc 1 597 12 view .LVU96
 425 0012 4FF0FF30 		mov	r0, #-1
 426 0016 FBE7     		b	.L32
 427              	.L38:
 428              		.align	2
 429              	.L37:
 430 0018 00000000 		.word	.LANCHOR1
 431              		.cfi_endproc
 432              	.LFE178:
 434              		.section	.text.ETH_PHY_IO_WriteReg,"ax",%progbits
 435              		.align	1
 436              		.global	ETH_PHY_IO_WriteReg
 437              		.syntax unified
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 21


 438              		.thumb
 439              		.thumb_func
 440              		.fpu fpv5-d16
 442              	ETH_PHY_IO_WriteReg:
 443              	.LVL31:
 444              	.LFB179:
 611:LWIP/Target/ethernetif.c ****   if (HAL_ETH_WritePHYRegister(&heth, DevAddr, RegAddr, RegVal) != HAL_OK)
 445              		.loc 1 611 1 is_stmt 1 view -0
 446              		.cfi_startproc
 447              		@ args = 0, pretend = 0, frame = 0
 448              		@ frame_needed = 0, uses_anonymous_args = 0
 611:LWIP/Target/ethernetif.c ****   if (HAL_ETH_WritePHYRegister(&heth, DevAddr, RegAddr, RegVal) != HAL_OK)
 449              		.loc 1 611 1 is_stmt 0 view .LVU98
 450 0000 08B5     		push	{r3, lr}
 451              	.LCFI11:
 452              		.cfi_def_cfa_offset 8
 453              		.cfi_offset 3, -8
 454              		.cfi_offset 14, -4
 455 0002 1346     		mov	r3, r2
 612:LWIP/Target/ethernetif.c ****   {
 456              		.loc 1 612 3 is_stmt 1 view .LVU99
 612:LWIP/Target/ethernetif.c ****   {
 457              		.loc 1 612 7 is_stmt 0 view .LVU100
 458 0004 0A46     		mov	r2, r1
 459              	.LVL32:
 612:LWIP/Target/ethernetif.c ****   {
 460              		.loc 1 612 7 view .LVU101
 461 0006 0146     		mov	r1, r0
 462              	.LVL33:
 612:LWIP/Target/ethernetif.c ****   {
 463              		.loc 1 612 7 view .LVU102
 464 0008 0348     		ldr	r0, .L44
 465              	.LVL34:
 612:LWIP/Target/ethernetif.c ****   {
 466              		.loc 1 612 7 view .LVU103
 467 000a FFF7FEFF 		bl	HAL_ETH_WritePHYRegister
 468              	.LVL35:
 612:LWIP/Target/ethernetif.c ****   {
 469              		.loc 1 612 6 view .LVU104
 470 000e 00B9     		cbnz	r0, .L43
 471              	.L39:
 618:LWIP/Target/ethernetif.c **** 
 472              		.loc 1 618 1 view .LVU105
 473 0010 08BD     		pop	{r3, pc}
 474              	.L43:
 614:LWIP/Target/ethernetif.c ****   }
 475              		.loc 1 614 12 view .LVU106
 476 0012 4FF0FF30 		mov	r0, #-1
 477 0016 FBE7     		b	.L39
 478              	.L45:
 479              		.align	2
 480              	.L44:
 481 0018 00000000 		.word	.LANCHOR1
 482              		.cfi_endproc
 483              	.LFE179:
 485              		.section	.text.ethernetif_input,"ax",%progbits
 486              		.align	1
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 22


 487              		.global	ethernetif_input
 488              		.syntax unified
 489              		.thumb
 490              		.thumb_func
 491              		.fpu fpv5-d16
 493              	ethernetif_input:
 494              	.LVL36:
 495              	.LFB170:
 327:LWIP/Target/ethernetif.c ****   struct pbuf *p = NULL;
 496              		.loc 1 327 1 is_stmt 1 view -0
 497              		.cfi_startproc
 498              		@ args = 0, pretend = 0, frame = 0
 499              		@ frame_needed = 0, uses_anonymous_args = 0
 327:LWIP/Target/ethernetif.c ****   struct pbuf *p = NULL;
 500              		.loc 1 327 1 is_stmt 0 view .LVU108
 501 0000 38B5     		push	{r3, r4, r5, lr}
 502              	.LCFI12:
 503              		.cfi_def_cfa_offset 16
 504              		.cfi_offset 3, -16
 505              		.cfi_offset 4, -12
 506              		.cfi_offset 5, -8
 507              		.cfi_offset 14, -4
 508 0002 0546     		mov	r5, r0
 328:LWIP/Target/ethernetif.c **** 
 509              		.loc 1 328 3 is_stmt 1 view .LVU109
 510              	.LVL37:
 328:LWIP/Target/ethernetif.c **** 
 511              		.loc 1 328 3 is_stmt 0 view .LVU110
 512 0004 00E0     		b	.L48
 513              	.LVL38:
 514              	.L47:
 340:LWIP/Target/ethernetif.c **** }
 515              		.loc 1 340 11 is_stmt 1 view .LVU111
 340:LWIP/Target/ethernetif.c **** }
 516              		.loc 1 340 3 is_stmt 0 view .LVU112
 517 0006 74B1     		cbz	r4, .L50
 518              	.LVL39:
 519              	.L48:
 330:LWIP/Target/ethernetif.c ****   {
 520              		.loc 1 330 3 is_stmt 1 view .LVU113
 332:LWIP/Target/ethernetif.c ****     if (p != NULL)
 521              		.loc 1 332 5 view .LVU114
 332:LWIP/Target/ethernetif.c ****     if (p != NULL)
 522              		.loc 1 332 9 is_stmt 0 view .LVU115
 523 0008 2846     		mov	r0, r5
 524 000a FFF7FEFF 		bl	low_level_input
 525              	.LVL40:
 333:LWIP/Target/ethernetif.c ****     {
 526              		.loc 1 333 5 is_stmt 1 view .LVU116
 333:LWIP/Target/ethernetif.c ****     {
 527              		.loc 1 333 8 is_stmt 0 view .LVU117
 528 000e 0446     		mov	r4, r0
 529 0010 0028     		cmp	r0, #0
 530 0012 F8D0     		beq	.L47
 335:LWIP/Target/ethernetif.c ****       {
 531              		.loc 1 335 7 is_stmt 1 view .LVU118
 335:LWIP/Target/ethernetif.c ****       {
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 23


 532              		.loc 1 335 16 is_stmt 0 view .LVU119
 533 0014 2B69     		ldr	r3, [r5, #16]
 335:LWIP/Target/ethernetif.c ****       {
 534              		.loc 1 335 11 view .LVU120
 535 0016 2946     		mov	r1, r5
 536 0018 9847     		blx	r3
 537              	.LVL41:
 335:LWIP/Target/ethernetif.c ****       {
 538              		.loc 1 335 10 view .LVU121
 539 001a 0028     		cmp	r0, #0
 540 001c F3D0     		beq	.L47
 337:LWIP/Target/ethernetif.c ****       }
 541              		.loc 1 337 9 is_stmt 1 view .LVU122
 542 001e 2046     		mov	r0, r4
 543 0020 FFF7FEFF 		bl	pbuf_free
 544              	.LVL42:
 545 0024 EFE7     		b	.L47
 546              	.L50:
 341:LWIP/Target/ethernetif.c **** 
 547              		.loc 1 341 1 is_stmt 0 view .LVU123
 548 0026 38BD     		pop	{r3, r4, r5, pc}
 341:LWIP/Target/ethernetif.c **** 
 549              		.loc 1 341 1 view .LVU124
 550              		.cfi_endproc
 551              	.LFE170:
 553              		.section	.text.sys_now,"ax",%progbits
 554              		.align	1
 555              		.global	sys_now
 556              		.syntax unified
 557              		.thumb
 558              		.thumb_func
 559              		.fpu fpv5-d16
 561              	sys_now:
 562              	.LFB173:
 449:LWIP/Target/ethernetif.c ****   return HAL_GetTick();
 563              		.loc 1 449 1 is_stmt 1 view -0
 564              		.cfi_startproc
 565              		@ args = 0, pretend = 0, frame = 0
 566              		@ frame_needed = 0, uses_anonymous_args = 0
 567 0000 08B5     		push	{r3, lr}
 568              	.LCFI13:
 569              		.cfi_def_cfa_offset 8
 570              		.cfi_offset 3, -8
 571              		.cfi_offset 14, -4
 450:LWIP/Target/ethernetif.c **** }
 572              		.loc 1 450 3 view .LVU126
 450:LWIP/Target/ethernetif.c **** }
 573              		.loc 1 450 10 is_stmt 0 view .LVU127
 574 0002 FFF7FEFF 		bl	HAL_GetTick
 575              	.LVL43:
 451:LWIP/Target/ethernetif.c **** 
 576              		.loc 1 451 1 view .LVU128
 577 0006 08BD     		pop	{r3, pc}
 578              		.cfi_endproc
 579              	.LFE173:
 581              		.section	.text.HAL_ETH_MspInit,"ax",%progbits
 582              		.align	1
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 24


 583              		.global	HAL_ETH_MspInit
 584              		.syntax unified
 585              		.thumb
 586              		.thumb_func
 587              		.fpu fpv5-d16
 589              	HAL_ETH_MspInit:
 590              	.LVL44:
 591              	.LFB174:
 462:LWIP/Target/ethernetif.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 592              		.loc 1 462 1 is_stmt 1 view -0
 593              		.cfi_startproc
 594              		@ args = 0, pretend = 0, frame = 48
 595              		@ frame_needed = 0, uses_anonymous_args = 0
 462:LWIP/Target/ethernetif.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 596              		.loc 1 462 1 is_stmt 0 view .LVU130
 597 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 598              	.LCFI14:
 599              		.cfi_def_cfa_offset 20
 600              		.cfi_offset 4, -20
 601              		.cfi_offset 5, -16
 602              		.cfi_offset 6, -12
 603              		.cfi_offset 7, -8
 604              		.cfi_offset 14, -4
 605 0002 8DB0     		sub	sp, sp, #52
 606              	.LCFI15:
 607              		.cfi_def_cfa_offset 72
 463:LWIP/Target/ethernetif.c ****   if (ethHandle->Instance == ETH)
 608              		.loc 1 463 3 is_stmt 1 view .LVU131
 463:LWIP/Target/ethernetif.c ****   if (ethHandle->Instance == ETH)
 609              		.loc 1 463 20 is_stmt 0 view .LVU132
 610 0004 0023     		movs	r3, #0
 611 0006 0793     		str	r3, [sp, #28]
 612 0008 0893     		str	r3, [sp, #32]
 613 000a 0993     		str	r3, [sp, #36]
 614 000c 0A93     		str	r3, [sp, #40]
 615 000e 0B93     		str	r3, [sp, #44]
 464:LWIP/Target/ethernetif.c ****   {
 616              		.loc 1 464 3 is_stmt 1 view .LVU133
 464:LWIP/Target/ethernetif.c ****   {
 617              		.loc 1 464 16 is_stmt 0 view .LVU134
 618 0010 0268     		ldr	r2, [r0]
 464:LWIP/Target/ethernetif.c ****   {
 619              		.loc 1 464 6 view .LVU135
 620 0012 3A4B     		ldr	r3, .L57
 621 0014 9A42     		cmp	r2, r3
 622 0016 01D0     		beq	.L56
 623              	.LVL45:
 624              	.L53:
 519:LWIP/Target/ethernetif.c **** 
 625              		.loc 1 519 1 view .LVU136
 626 0018 0DB0     		add	sp, sp, #52
 627              	.LCFI16:
 628              		.cfi_remember_state
 629              		.cfi_def_cfa_offset 20
 630              		@ sp needed
 631 001a F0BD     		pop	{r4, r5, r6, r7, pc}
 632              	.LVL46:
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 25


 633              	.L56:
 634              	.LCFI17:
 635              		.cfi_restore_state
 470:LWIP/Target/ethernetif.c **** 
 636              		.loc 1 470 5 is_stmt 1 view .LVU137
 470:LWIP/Target/ethernetif.c **** 
 637              		.loc 1 470 5 view .LVU138
 638              	.LBB16:
 470:LWIP/Target/ethernetif.c **** 
 639              		.loc 1 470 5 view .LVU139
 470:LWIP/Target/ethernetif.c **** 
 640              		.loc 1 470 5 view .LVU140
 641 001c A3F59043 		sub	r3, r3, #18432
 642 0020 1A6B     		ldr	r2, [r3, #48]
 643 0022 42F00072 		orr	r2, r2, #33554432
 644 0026 1A63     		str	r2, [r3, #48]
 470:LWIP/Target/ethernetif.c **** 
 645              		.loc 1 470 5 view .LVU141
 646 0028 1A6B     		ldr	r2, [r3, #48]
 647 002a 02F00072 		and	r2, r2, #33554432
 648 002e 0092     		str	r2, [sp]
 470:LWIP/Target/ethernetif.c **** 
 649              		.loc 1 470 5 view .LVU142
 650 0030 009A     		ldr	r2, [sp]
 651              	.LBE16:
 470:LWIP/Target/ethernetif.c **** 
 652              		.loc 1 470 5 view .LVU143
 470:LWIP/Target/ethernetif.c **** 
 653              		.loc 1 470 5 view .LVU144
 654              	.LBB17:
 470:LWIP/Target/ethernetif.c **** 
 655              		.loc 1 470 5 view .LVU145
 470:LWIP/Target/ethernetif.c **** 
 656              		.loc 1 470 5 view .LVU146
 657 0032 1A6B     		ldr	r2, [r3, #48]
 658 0034 42F08062 		orr	r2, r2, #67108864
 659 0038 1A63     		str	r2, [r3, #48]
 470:LWIP/Target/ethernetif.c **** 
 660              		.loc 1 470 5 view .LVU147
 661 003a 1A6B     		ldr	r2, [r3, #48]
 662 003c 02F08062 		and	r2, r2, #67108864
 663 0040 0192     		str	r2, [sp, #4]
 470:LWIP/Target/ethernetif.c **** 
 664              		.loc 1 470 5 view .LVU148
 665 0042 019A     		ldr	r2, [sp, #4]
 666              	.LBE17:
 470:LWIP/Target/ethernetif.c **** 
 667              		.loc 1 470 5 view .LVU149
 470:LWIP/Target/ethernetif.c **** 
 668              		.loc 1 470 5 view .LVU150
 669              	.LBB18:
 470:LWIP/Target/ethernetif.c **** 
 670              		.loc 1 470 5 view .LVU151
 470:LWIP/Target/ethernetif.c **** 
 671              		.loc 1 470 5 view .LVU152
 672 0044 1A6B     		ldr	r2, [r3, #48]
 673 0046 42F00062 		orr	r2, r2, #134217728
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 26


 674 004a 1A63     		str	r2, [r3, #48]
 470:LWIP/Target/ethernetif.c **** 
 675              		.loc 1 470 5 view .LVU153
 676 004c 1A6B     		ldr	r2, [r3, #48]
 677 004e 02F00062 		and	r2, r2, #134217728
 678 0052 0292     		str	r2, [sp, #8]
 470:LWIP/Target/ethernetif.c **** 
 679              		.loc 1 470 5 view .LVU154
 680 0054 029A     		ldr	r2, [sp, #8]
 681              	.LBE18:
 470:LWIP/Target/ethernetif.c **** 
 682              		.loc 1 470 5 view .LVU155
 470:LWIP/Target/ethernetif.c **** 
 683              		.loc 1 470 5 view .LVU156
 472:LWIP/Target/ethernetif.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 684              		.loc 1 472 5 view .LVU157
 685              	.LBB19:
 472:LWIP/Target/ethernetif.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 686              		.loc 1 472 5 view .LVU158
 472:LWIP/Target/ethernetif.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 687              		.loc 1 472 5 view .LVU159
 688 0056 1A6B     		ldr	r2, [r3, #48]
 689 0058 42F00402 		orr	r2, r2, #4
 690 005c 1A63     		str	r2, [r3, #48]
 472:LWIP/Target/ethernetif.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 691              		.loc 1 472 5 view .LVU160
 692 005e 1A6B     		ldr	r2, [r3, #48]
 693 0060 02F00402 		and	r2, r2, #4
 694 0064 0392     		str	r2, [sp, #12]
 472:LWIP/Target/ethernetif.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 695              		.loc 1 472 5 view .LVU161
 696 0066 039A     		ldr	r2, [sp, #12]
 697              	.LBE19:
 472:LWIP/Target/ethernetif.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 698              		.loc 1 472 5 view .LVU162
 473:LWIP/Target/ethernetif.c ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 699              		.loc 1 473 5 view .LVU163
 700              	.LBB20:
 473:LWIP/Target/ethernetif.c ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 701              		.loc 1 473 5 view .LVU164
 473:LWIP/Target/ethernetif.c ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 702              		.loc 1 473 5 view .LVU165
 703 0068 1A6B     		ldr	r2, [r3, #48]
 704 006a 42F00102 		orr	r2, r2, #1
 705 006e 1A63     		str	r2, [r3, #48]
 473:LWIP/Target/ethernetif.c ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 706              		.loc 1 473 5 view .LVU166
 707 0070 1A6B     		ldr	r2, [r3, #48]
 708 0072 02F00102 		and	r2, r2, #1
 709 0076 0492     		str	r2, [sp, #16]
 473:LWIP/Target/ethernetif.c ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 710              		.loc 1 473 5 view .LVU167
 711 0078 049A     		ldr	r2, [sp, #16]
 712              	.LBE20:
 473:LWIP/Target/ethernetif.c ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 713              		.loc 1 473 5 view .LVU168
 474:LWIP/Target/ethernetif.c ****     __HAL_RCC_GPIOG_CLK_ENABLE();
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 27


 714              		.loc 1 474 5 view .LVU169
 715              	.LBB21:
 474:LWIP/Target/ethernetif.c ****     __HAL_RCC_GPIOG_CLK_ENABLE();
 716              		.loc 1 474 5 view .LVU170
 474:LWIP/Target/ethernetif.c ****     __HAL_RCC_GPIOG_CLK_ENABLE();
 717              		.loc 1 474 5 view .LVU171
 718 007a 1A6B     		ldr	r2, [r3, #48]
 719 007c 42F00202 		orr	r2, r2, #2
 720 0080 1A63     		str	r2, [r3, #48]
 474:LWIP/Target/ethernetif.c ****     __HAL_RCC_GPIOG_CLK_ENABLE();
 721              		.loc 1 474 5 view .LVU172
 722 0082 1A6B     		ldr	r2, [r3, #48]
 723 0084 02F00202 		and	r2, r2, #2
 724 0088 0592     		str	r2, [sp, #20]
 474:LWIP/Target/ethernetif.c ****     __HAL_RCC_GPIOG_CLK_ENABLE();
 725              		.loc 1 474 5 view .LVU173
 726 008a 059A     		ldr	r2, [sp, #20]
 727              	.LBE21:
 474:LWIP/Target/ethernetif.c ****     __HAL_RCC_GPIOG_CLK_ENABLE();
 728              		.loc 1 474 5 view .LVU174
 475:LWIP/Target/ethernetif.c ****     /**ETH GPIO Configuration
 729              		.loc 1 475 5 view .LVU175
 730              	.LBB22:
 475:LWIP/Target/ethernetif.c ****     /**ETH GPIO Configuration
 731              		.loc 1 475 5 view .LVU176
 475:LWIP/Target/ethernetif.c ****     /**ETH GPIO Configuration
 732              		.loc 1 475 5 view .LVU177
 733 008c 1A6B     		ldr	r2, [r3, #48]
 734 008e 42F04002 		orr	r2, r2, #64
 735 0092 1A63     		str	r2, [r3, #48]
 475:LWIP/Target/ethernetif.c ****     /**ETH GPIO Configuration
 736              		.loc 1 475 5 view .LVU178
 737 0094 1B6B     		ldr	r3, [r3, #48]
 738 0096 03F04003 		and	r3, r3, #64
 739 009a 0693     		str	r3, [sp, #24]
 475:LWIP/Target/ethernetif.c ****     /**ETH GPIO Configuration
 740              		.loc 1 475 5 view .LVU179
 741 009c 069B     		ldr	r3, [sp, #24]
 742              	.LBE22:
 475:LWIP/Target/ethernetif.c ****     /**ETH GPIO Configuration
 743              		.loc 1 475 5 view .LVU180
 487:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 744              		.loc 1 487 5 view .LVU181
 487:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 745              		.loc 1 487 25 is_stmt 0 view .LVU182
 746 009e 3223     		movs	r3, #50
 747 00a0 0793     		str	r3, [sp, #28]
 488:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 748              		.loc 1 488 5 is_stmt 1 view .LVU183
 488:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 749              		.loc 1 488 26 is_stmt 0 view .LVU184
 750 00a2 0226     		movs	r6, #2
 751 00a4 0896     		str	r6, [sp, #32]
 489:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 752              		.loc 1 489 5 is_stmt 1 view .LVU185
 490:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Alternate = GPIO_AF11_ETH;
 753              		.loc 1 490 5 view .LVU186
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 28


 490:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Alternate = GPIO_AF11_ETH;
 754              		.loc 1 490 27 is_stmt 0 view .LVU187
 755 00a6 0325     		movs	r5, #3
 756 00a8 0A95     		str	r5, [sp, #40]
 491:LWIP/Target/ethernetif.c ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 757              		.loc 1 491 5 is_stmt 1 view .LVU188
 491:LWIP/Target/ethernetif.c ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 758              		.loc 1 491 31 is_stmt 0 view .LVU189
 759 00aa 0B24     		movs	r4, #11
 760 00ac 0B94     		str	r4, [sp, #44]
 492:LWIP/Target/ethernetif.c **** 
 761              		.loc 1 492 5 is_stmt 1 view .LVU190
 762 00ae 07A9     		add	r1, sp, #28
 763 00b0 1348     		ldr	r0, .L57+4
 764              	.LVL47:
 492:LWIP/Target/ethernetif.c **** 
 765              		.loc 1 492 5 is_stmt 0 view .LVU191
 766 00b2 FFF7FEFF 		bl	HAL_GPIO_Init
 767              	.LVL48:
 494:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 768              		.loc 1 494 5 is_stmt 1 view .LVU192
 494:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 769              		.loc 1 494 25 is_stmt 0 view .LVU193
 770 00b6 8623     		movs	r3, #134
 771 00b8 0793     		str	r3, [sp, #28]
 495:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 772              		.loc 1 495 5 is_stmt 1 view .LVU194
 495:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 773              		.loc 1 495 26 is_stmt 0 view .LVU195
 774 00ba 0896     		str	r6, [sp, #32]
 496:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 775              		.loc 1 496 5 is_stmt 1 view .LVU196
 496:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 776              		.loc 1 496 26 is_stmt 0 view .LVU197
 777 00bc 0027     		movs	r7, #0
 778 00be 0997     		str	r7, [sp, #36]
 497:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Alternate = GPIO_AF11_ETH;
 779              		.loc 1 497 5 is_stmt 1 view .LVU198
 497:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Alternate = GPIO_AF11_ETH;
 780              		.loc 1 497 27 is_stmt 0 view .LVU199
 781 00c0 0A95     		str	r5, [sp, #40]
 498:LWIP/Target/ethernetif.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 782              		.loc 1 498 5 is_stmt 1 view .LVU200
 498:LWIP/Target/ethernetif.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 783              		.loc 1 498 31 is_stmt 0 view .LVU201
 784 00c2 0B94     		str	r4, [sp, #44]
 499:LWIP/Target/ethernetif.c **** 
 785              		.loc 1 499 5 is_stmt 1 view .LVU202
 786 00c4 07A9     		add	r1, sp, #28
 787 00c6 0F48     		ldr	r0, .L57+8
 788 00c8 FFF7FEFF 		bl	HAL_GPIO_Init
 789              	.LVL49:
 501:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 790              		.loc 1 501 5 view .LVU203
 501:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 791              		.loc 1 501 25 is_stmt 0 view .LVU204
 792 00cc 4FF40053 		mov	r3, #8192
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 29


 793 00d0 0793     		str	r3, [sp, #28]
 502:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 794              		.loc 1 502 5 is_stmt 1 view .LVU205
 502:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 795              		.loc 1 502 26 is_stmt 0 view .LVU206
 796 00d2 0896     		str	r6, [sp, #32]
 503:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 797              		.loc 1 503 5 is_stmt 1 view .LVU207
 503:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 798              		.loc 1 503 26 is_stmt 0 view .LVU208
 799 00d4 0997     		str	r7, [sp, #36]
 504:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Alternate = GPIO_AF11_ETH;
 800              		.loc 1 504 5 is_stmt 1 view .LVU209
 504:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Alternate = GPIO_AF11_ETH;
 801              		.loc 1 504 27 is_stmt 0 view .LVU210
 802 00d6 0A95     		str	r5, [sp, #40]
 505:LWIP/Target/ethernetif.c ****     HAL_GPIO_Init(RMII_TXD1_GPIO_Port, &GPIO_InitStruct);
 803              		.loc 1 505 5 is_stmt 1 view .LVU211
 505:LWIP/Target/ethernetif.c ****     HAL_GPIO_Init(RMII_TXD1_GPIO_Port, &GPIO_InitStruct);
 804              		.loc 1 505 31 is_stmt 0 view .LVU212
 805 00d8 0B94     		str	r4, [sp, #44]
 506:LWIP/Target/ethernetif.c **** 
 806              		.loc 1 506 5 is_stmt 1 view .LVU213
 807 00da 07A9     		add	r1, sp, #28
 808 00dc 0A48     		ldr	r0, .L57+12
 809 00de FFF7FEFF 		bl	HAL_GPIO_Init
 810              	.LVL50:
 508:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 811              		.loc 1 508 5 view .LVU214
 508:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 812              		.loc 1 508 25 is_stmt 0 view .LVU215
 813 00e2 4FF42053 		mov	r3, #10240
 814 00e6 0793     		str	r3, [sp, #28]
 509:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 815              		.loc 1 509 5 is_stmt 1 view .LVU216
 509:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 816              		.loc 1 509 26 is_stmt 0 view .LVU217
 817 00e8 0896     		str	r6, [sp, #32]
 510:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 818              		.loc 1 510 5 is_stmt 1 view .LVU218
 510:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 819              		.loc 1 510 26 is_stmt 0 view .LVU219
 820 00ea 0997     		str	r7, [sp, #36]
 511:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Alternate = GPIO_AF11_ETH;
 821              		.loc 1 511 5 is_stmt 1 view .LVU220
 511:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Alternate = GPIO_AF11_ETH;
 822              		.loc 1 511 27 is_stmt 0 view .LVU221
 823 00ec 0A95     		str	r5, [sp, #40]
 512:LWIP/Target/ethernetif.c ****     HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 824              		.loc 1 512 5 is_stmt 1 view .LVU222
 512:LWIP/Target/ethernetif.c ****     HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 825              		.loc 1 512 31 is_stmt 0 view .LVU223
 826 00ee 0B94     		str	r4, [sp, #44]
 513:LWIP/Target/ethernetif.c **** 
 827              		.loc 1 513 5 is_stmt 1 view .LVU224
 828 00f0 07A9     		add	r1, sp, #28
 829 00f2 0648     		ldr	r0, .L57+16
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 30


 830 00f4 FFF7FEFF 		bl	HAL_GPIO_Init
 831              	.LVL51:
 519:LWIP/Target/ethernetif.c **** 
 832              		.loc 1 519 1 is_stmt 0 view .LVU225
 833 00f8 8EE7     		b	.L53
 834              	.L58:
 835 00fa 00BF     		.align	2
 836              	.L57:
 837 00fc 00800240 		.word	1073905664
 838 0100 00080240 		.word	1073874944
 839 0104 00000240 		.word	1073872896
 840 0108 00040240 		.word	1073873920
 841 010c 00180240 		.word	1073879040
 842              		.cfi_endproc
 843              	.LFE174:
 845              		.section	.text.HAL_ETH_MspDeInit,"ax",%progbits
 846              		.align	1
 847              		.global	HAL_ETH_MspDeInit
 848              		.syntax unified
 849              		.thumb
 850              		.thumb_func
 851              		.fpu fpv5-d16
 853              	HAL_ETH_MspDeInit:
 854              	.LVL52:
 855              	.LFB175:
 522:LWIP/Target/ethernetif.c ****   if (ethHandle->Instance == ETH)
 856              		.loc 1 522 1 is_stmt 1 view -0
 857              		.cfi_startproc
 858              		@ args = 0, pretend = 0, frame = 0
 859              		@ frame_needed = 0, uses_anonymous_args = 0
 522:LWIP/Target/ethernetif.c ****   if (ethHandle->Instance == ETH)
 860              		.loc 1 522 1 is_stmt 0 view .LVU227
 861 0000 08B5     		push	{r3, lr}
 862              	.LCFI18:
 863              		.cfi_def_cfa_offset 8
 864              		.cfi_offset 3, -8
 865              		.cfi_offset 14, -4
 523:LWIP/Target/ethernetif.c ****   {
 866              		.loc 1 523 3 is_stmt 1 view .LVU228
 523:LWIP/Target/ethernetif.c ****   {
 867              		.loc 1 523 16 is_stmt 0 view .LVU229
 868 0002 0268     		ldr	r2, [r0]
 523:LWIP/Target/ethernetif.c ****   {
 869              		.loc 1 523 6 view .LVU230
 870 0004 124B     		ldr	r3, .L63
 871 0006 9A42     		cmp	r2, r3
 872 0008 00D0     		beq	.L62
 873              	.LVL53:
 874              	.L59:
 554:LWIP/Target/ethernetif.c **** 
 875              		.loc 1 554 1 view .LVU231
 876 000a 08BD     		pop	{r3, pc}
 877              	.LVL54:
 878              	.L62:
 529:LWIP/Target/ethernetif.c **** 
 879              		.loc 1 529 5 is_stmt 1 view .LVU232
 529:LWIP/Target/ethernetif.c **** 
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 31


 880              		.loc 1 529 5 view .LVU233
 881 000c A3F59043 		sub	r3, r3, #18432
 882 0010 1A6B     		ldr	r2, [r3, #48]
 883 0012 22F08062 		bic	r2, r2, #67108864
 884 0016 1A63     		str	r2, [r3, #48]
 529:LWIP/Target/ethernetif.c **** 
 885              		.loc 1 529 5 view .LVU234
 886 0018 1A6B     		ldr	r2, [r3, #48]
 887 001a 22F00062 		bic	r2, r2, #134217728
 888 001e 1A63     		str	r2, [r3, #48]
 529:LWIP/Target/ethernetif.c **** 
 889              		.loc 1 529 5 view .LVU235
 890 0020 1A6B     		ldr	r2, [r3, #48]
 891 0022 22F00072 		bic	r2, r2, #33554432
 892 0026 1A63     		str	r2, [r3, #48]
 529:LWIP/Target/ethernetif.c **** 
 893              		.loc 1 529 5 view .LVU236
 542:LWIP/Target/ethernetif.c **** 
 894              		.loc 1 542 5 view .LVU237
 895 0028 3221     		movs	r1, #50
 896 002a 0A48     		ldr	r0, .L63+4
 897              	.LVL55:
 542:LWIP/Target/ethernetif.c **** 
 898              		.loc 1 542 5 is_stmt 0 view .LVU238
 899 002c FFF7FEFF 		bl	HAL_GPIO_DeInit
 900              	.LVL56:
 544:LWIP/Target/ethernetif.c **** 
 901              		.loc 1 544 5 is_stmt 1 view .LVU239
 902 0030 8621     		movs	r1, #134
 903 0032 0948     		ldr	r0, .L63+8
 904 0034 FFF7FEFF 		bl	HAL_GPIO_DeInit
 905              	.LVL57:
 546:LWIP/Target/ethernetif.c **** 
 906              		.loc 1 546 5 view .LVU240
 907 0038 4FF40051 		mov	r1, #8192
 908 003c 0748     		ldr	r0, .L63+12
 909 003e FFF7FEFF 		bl	HAL_GPIO_DeInit
 910              	.LVL58:
 548:LWIP/Target/ethernetif.c **** 
 911              		.loc 1 548 5 view .LVU241
 912 0042 4FF42051 		mov	r1, #10240
 913 0046 0648     		ldr	r0, .L63+16
 914 0048 FFF7FEFF 		bl	HAL_GPIO_DeInit
 915              	.LVL59:
 554:LWIP/Target/ethernetif.c **** 
 916              		.loc 1 554 1 is_stmt 0 view .LVU242
 917 004c DDE7     		b	.L59
 918              	.L64:
 919 004e 00BF     		.align	2
 920              	.L63:
 921 0050 00800240 		.word	1073905664
 922 0054 00080240 		.word	1073874944
 923 0058 00000240 		.word	1073872896
 924 005c 00040240 		.word	1073873920
 925 0060 00180240 		.word	1073879040
 926              		.cfi_endproc
 927              	.LFE175:
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 32


 929              		.section	.text.ethernet_link_check_state,"ax",%progbits
 930              		.align	1
 931              		.global	ethernet_link_check_state
 932              		.syntax unified
 933              		.thumb
 934              		.thumb_func
 935              		.fpu fpv5-d16
 937              	ethernet_link_check_state:
 938              	.LVL60:
 939              	.LFB181:
 628:LWIP/Target/ethernetif.c **** 
 629:LWIP/Target/ethernetif.c **** /**
 630:LWIP/Target/ethernetif.c ****  * @brief  Check the ETH link state then update ETH driver and netif link accordingly.
 631:LWIP/Target/ethernetif.c ****  * @retval None
 632:LWIP/Target/ethernetif.c ****  */
 633:LWIP/Target/ethernetif.c **** void ethernet_link_check_state(struct netif *netif)
 634:LWIP/Target/ethernetif.c **** {
 940              		.loc 1 634 1 is_stmt 1 view -0
 941              		.cfi_startproc
 942              		@ args = 0, pretend = 0, frame = 104
 943              		@ frame_needed = 0, uses_anonymous_args = 0
 944              		.loc 1 634 1 is_stmt 0 view .LVU244
 945 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 946              	.LCFI19:
 947              		.cfi_def_cfa_offset 20
 948              		.cfi_offset 4, -20
 949              		.cfi_offset 5, -16
 950              		.cfi_offset 6, -12
 951              		.cfi_offset 7, -8
 952              		.cfi_offset 14, -4
 953 0002 9BB0     		sub	sp, sp, #108
 954              	.LCFI20:
 955              		.cfi_def_cfa_offset 128
 956 0004 0446     		mov	r4, r0
 635:LWIP/Target/ethernetif.c ****   ETH_MACConfigTypeDef MACConf = {0};
 957              		.loc 1 635 3 is_stmt 1 view .LVU245
 958              		.loc 1 635 24 is_stmt 0 view .LVU246
 959 0006 6422     		movs	r2, #100
 960 0008 0021     		movs	r1, #0
 961 000a 01A8     		add	r0, sp, #4
 962              	.LVL61:
 963              		.loc 1 635 24 view .LVU247
 964 000c FFF7FEFF 		bl	memset
 965              	.LVL62:
 636:LWIP/Target/ethernetif.c ****   int32_t PHYLinkState = 0;
 966              		.loc 1 636 3 is_stmt 1 view .LVU248
 637:LWIP/Target/ethernetif.c ****   uint32_t linkchanged = 0U, speed = 0U, duplex = 0U;
 967              		.loc 1 637 3 view .LVU249
 638:LWIP/Target/ethernetif.c **** 
 639:LWIP/Target/ethernetif.c ****   PHYLinkState = LAN8742_GetLinkState(&LAN8742);
 968              		.loc 1 639 3 view .LVU250
 969              		.loc 1 639 18 is_stmt 0 view .LVU251
 970 0010 2748     		ldr	r0, .L78
 971 0012 FFF7FEFF 		bl	LAN8742_GetLinkState
 972              	.LVL63:
 640:LWIP/Target/ethernetif.c **** 
 641:LWIP/Target/ethernetif.c ****   if (netif_is_link_up(netif) && (PHYLinkState <= LAN8742_STATUS_LINK_DOWN))
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 33


 973              		.loc 1 641 3 is_stmt 1 view .LVU252
 974              		.loc 1 641 7 is_stmt 0 view .LVU253
 975 0016 94F82D30 		ldrb	r3, [r4, #45]	@ zero_extendqisi2
 976              		.loc 1 641 6 view .LVU254
 977 001a 13F0040F 		tst	r3, #4
 978 001e 01D0     		beq	.L66
 979              		.loc 1 641 31 discriminator 1 view .LVU255
 980 0020 0128     		cmp	r0, #1
 981 0022 0BDD     		ble	.L76
 982              	.L66:
 642:LWIP/Target/ethernetif.c ****   {
 643:LWIP/Target/ethernetif.c ****     HAL_ETH_Stop(&heth);
 644:LWIP/Target/ethernetif.c ****     netif_set_down(netif);
 645:LWIP/Target/ethernetif.c ****     netif_set_link_down(netif);
 646:LWIP/Target/ethernetif.c ****   }
 647:LWIP/Target/ethernetif.c ****   else if (!netif_is_link_up(netif) && (PHYLinkState > LAN8742_STATUS_LINK_DOWN))
 983              		.loc 1 647 8 is_stmt 1 view .LVU256
 984              		.loc 1 647 11 is_stmt 0 view .LVU257
 985 0024 13F0040F 		tst	r3, #4
 986 0028 2AD1     		bne	.L65
 987              		.loc 1 647 37 discriminator 1 view .LVU258
 988 002a 0128     		cmp	r0, #1
 989 002c 28DD     		ble	.L65
 648:LWIP/Target/ethernetif.c ****   {
 649:LWIP/Target/ethernetif.c ****     switch (PHYLinkState)
 990              		.loc 1 649 5 is_stmt 1 view .LVU259
 991 002e 831E     		subs	r3, r0, #2
 992 0030 032B     		cmp	r3, #3
 993 0032 0DD8     		bhi	.L68
 994 0034 DFE803F0 		tbb	[pc, r3]
 995              	.L70:
 996 0038 1E       		.byte	(.L74-.L70)/2
 997 0039 10       		.byte	(.L72-.L70)/2
 998 003a 15       		.byte	(.L71-.L70)/2
 999 003b 1A       		.byte	(.L69-.L70)/2
 1000              		.p2align 1
 1001              	.L76:
 643:LWIP/Target/ethernetif.c ****     netif_set_down(netif);
 1002              		.loc 1 643 5 view .LVU260
 1003 003c 1D48     		ldr	r0, .L78+4
 1004              	.LVL64:
 643:LWIP/Target/ethernetif.c ****     netif_set_down(netif);
 1005              		.loc 1 643 5 is_stmt 0 view .LVU261
 1006 003e FFF7FEFF 		bl	HAL_ETH_Stop
 1007              	.LVL65:
 644:LWIP/Target/ethernetif.c ****     netif_set_link_down(netif);
 1008              		.loc 1 644 5 is_stmt 1 view .LVU262
 1009 0042 2046     		mov	r0, r4
 1010 0044 FFF7FEFF 		bl	netif_set_down
 1011              	.LVL66:
 645:LWIP/Target/ethernetif.c ****   }
 1012              		.loc 1 645 5 view .LVU263
 1013 0048 2046     		mov	r0, r4
 1014 004a FFF7FEFF 		bl	netif_set_link_down
 1015              	.LVL67:
 1016 004e 17E0     		b	.L65
 1017              	.LVL68:
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 34


 1018              	.L68:
 1019              		.loc 1 649 5 is_stmt 0 view .LVU264
 1020 0050 0025     		movs	r5, #0
 1021 0052 2F46     		mov	r7, r5
 1022 0054 2B46     		mov	r3, r5
 1023 0056 12E0     		b	.L73
 1024              	.L72:
 650:LWIP/Target/ethernetif.c ****     {
 651:LWIP/Target/ethernetif.c ****     case LAN8742_STATUS_100MBITS_FULLDUPLEX:
 652:LWIP/Target/ethernetif.c ****       duplex = ETH_FULLDUPLEX_MODE;
 653:LWIP/Target/ethernetif.c ****       speed = ETH_SPEED_100M;
 654:LWIP/Target/ethernetif.c ****       linkchanged = 1;
 655:LWIP/Target/ethernetif.c ****       break;
 656:LWIP/Target/ethernetif.c ****     case LAN8742_STATUS_100MBITS_HALFDUPLEX:
 657:LWIP/Target/ethernetif.c ****       duplex = ETH_HALFDUPLEX_MODE;
 1025              		.loc 1 657 7 is_stmt 1 view .LVU265
 658:LWIP/Target/ethernetif.c ****       speed = ETH_SPEED_100M;
 1026              		.loc 1 658 7 view .LVU266
 1027              	.LVL69:
 659:LWIP/Target/ethernetif.c ****       linkchanged = 1;
 1028              		.loc 1 659 7 view .LVU267
 660:LWIP/Target/ethernetif.c ****       break;
 1029              		.loc 1 660 7 view .LVU268
 657:LWIP/Target/ethernetif.c ****       speed = ETH_SPEED_100M;
 1030              		.loc 1 657 14 is_stmt 0 view .LVU269
 1031 0058 0025     		movs	r5, #0
 658:LWIP/Target/ethernetif.c ****       linkchanged = 1;
 1032              		.loc 1 658 13 view .LVU270
 1033 005a 4FF48047 		mov	r7, #16384
 659:LWIP/Target/ethernetif.c ****       break;
 1034              		.loc 1 659 19 view .LVU271
 1035 005e 0123     		movs	r3, #1
 1036              		.loc 1 660 7 view .LVU272
 1037 0060 0DE0     		b	.L73
 1038              	.LVL70:
 1039              	.L71:
 661:LWIP/Target/ethernetif.c ****     case LAN8742_STATUS_10MBITS_FULLDUPLEX:
 662:LWIP/Target/ethernetif.c ****       duplex = ETH_FULLDUPLEX_MODE;
 1040              		.loc 1 662 7 is_stmt 1 view .LVU273
 663:LWIP/Target/ethernetif.c ****       speed = ETH_SPEED_10M;
 1041              		.loc 1 663 7 view .LVU274
 664:LWIP/Target/ethernetif.c ****       linkchanged = 1;
 1042              		.loc 1 664 7 view .LVU275
 665:LWIP/Target/ethernetif.c ****       break;
 1043              		.loc 1 665 7 view .LVU276
 662:LWIP/Target/ethernetif.c ****       speed = ETH_SPEED_10M;
 1044              		.loc 1 662 14 is_stmt 0 view .LVU277
 1045 0062 4FF40065 		mov	r5, #2048
 663:LWIP/Target/ethernetif.c ****       linkchanged = 1;
 1046              		.loc 1 663 13 view .LVU278
 1047 0066 0027     		movs	r7, #0
 664:LWIP/Target/ethernetif.c ****       break;
 1048              		.loc 1 664 19 view .LVU279
 1049 0068 0123     		movs	r3, #1
 1050              		.loc 1 665 7 view .LVU280
 1051 006a 08E0     		b	.L73
 1052              	.LVL71:
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 35


 1053              	.L69:
 666:LWIP/Target/ethernetif.c ****     case LAN8742_STATUS_10MBITS_HALFDUPLEX:
 667:LWIP/Target/ethernetif.c ****       duplex = ETH_HALFDUPLEX_MODE;
 1054              		.loc 1 667 7 is_stmt 1 view .LVU281
 668:LWIP/Target/ethernetif.c ****       speed = ETH_SPEED_10M;
 1055              		.loc 1 668 7 view .LVU282
 669:LWIP/Target/ethernetif.c ****       linkchanged = 1;
 1056              		.loc 1 669 7 view .LVU283
 670:LWIP/Target/ethernetif.c ****       break;
 1057              		.loc 1 670 7 view .LVU284
 667:LWIP/Target/ethernetif.c ****       speed = ETH_SPEED_10M;
 1058              		.loc 1 667 14 is_stmt 0 view .LVU285
 1059 006c 0025     		movs	r5, #0
 668:LWIP/Target/ethernetif.c ****       linkchanged = 1;
 1060              		.loc 1 668 13 view .LVU286
 1061 006e 2F46     		mov	r7, r5
 669:LWIP/Target/ethernetif.c ****       break;
 1062              		.loc 1 669 19 view .LVU287
 1063 0070 0123     		movs	r3, #1
 1064              		.loc 1 670 7 view .LVU288
 1065 0072 04E0     		b	.L73
 1066              	.LVL72:
 1067              	.L74:
 652:LWIP/Target/ethernetif.c ****       speed = ETH_SPEED_100M;
 1068              		.loc 1 652 14 view .LVU289
 1069 0074 4FF40065 		mov	r5, #2048
 653:LWIP/Target/ethernetif.c ****       linkchanged = 1;
 1070              		.loc 1 653 13 view .LVU290
 1071 0078 4FF48047 		mov	r7, #16384
 654:LWIP/Target/ethernetif.c ****       break;
 1072              		.loc 1 654 19 view .LVU291
 1073 007c 0123     		movs	r3, #1
 1074              	.LVL73:
 1075              	.L73:
 671:LWIP/Target/ethernetif.c ****     default:
 672:LWIP/Target/ethernetif.c ****       break;
 673:LWIP/Target/ethernetif.c ****     }
 674:LWIP/Target/ethernetif.c **** 
 675:LWIP/Target/ethernetif.c ****     if (linkchanged)
 1076              		.loc 1 675 5 is_stmt 1 view .LVU292
 1077              		.loc 1 675 8 is_stmt 0 view .LVU293
 1078 007e 0BB9     		cbnz	r3, .L77
 1079              	.LVL74:
 1080              	.L65:
 676:LWIP/Target/ethernetif.c ****     {
 677:LWIP/Target/ethernetif.c ****       /* Get MAC Config MAC */
 678:LWIP/Target/ethernetif.c ****       HAL_ETH_GetMACConfig(&heth, &MACConf);
 679:LWIP/Target/ethernetif.c ****       MACConf.DuplexMode = duplex;
 680:LWIP/Target/ethernetif.c ****       MACConf.Speed = speed;
 681:LWIP/Target/ethernetif.c ****       HAL_ETH_SetMACConfig(&heth, &MACConf);
 682:LWIP/Target/ethernetif.c ****       HAL_ETH_Start(&heth);
 683:LWIP/Target/ethernetif.c ****       netif_set_up(netif);
 684:LWIP/Target/ethernetif.c ****       netif_set_link_up(netif);
 685:LWIP/Target/ethernetif.c ****     }
 686:LWIP/Target/ethernetif.c ****   }
 687:LWIP/Target/ethernetif.c **** }
 1081              		.loc 1 687 1 view .LVU294
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 36


 1082 0080 1BB0     		add	sp, sp, #108
 1083              	.LCFI21:
 1084              		.cfi_remember_state
 1085              		.cfi_def_cfa_offset 20
 1086              		@ sp needed
 1087 0082 F0BD     		pop	{r4, r5, r6, r7, pc}
 1088              	.LVL75:
 1089              	.L77:
 1090              	.LCFI22:
 1091              		.cfi_restore_state
 678:LWIP/Target/ethernetif.c ****       MACConf.DuplexMode = duplex;
 1092              		.loc 1 678 7 is_stmt 1 view .LVU295
 1093 0084 0B4E     		ldr	r6, .L78+4
 1094 0086 01A9     		add	r1, sp, #4
 1095 0088 3046     		mov	r0, r6
 1096              	.LVL76:
 678:LWIP/Target/ethernetif.c ****       MACConf.DuplexMode = duplex;
 1097              		.loc 1 678 7 is_stmt 0 view .LVU296
 1098 008a FFF7FEFF 		bl	HAL_ETH_GetMACConfig
 1099              	.LVL77:
 679:LWIP/Target/ethernetif.c ****       MACConf.Speed = speed;
 1100              		.loc 1 679 7 is_stmt 1 view .LVU297
 679:LWIP/Target/ethernetif.c ****       MACConf.Speed = speed;
 1101              		.loc 1 679 26 is_stmt 0 view .LVU298
 1102 008e 0795     		str	r5, [sp, #28]
 680:LWIP/Target/ethernetif.c ****       HAL_ETH_SetMACConfig(&heth, &MACConf);
 1103              		.loc 1 680 7 is_stmt 1 view .LVU299
 680:LWIP/Target/ethernetif.c ****       HAL_ETH_SetMACConfig(&heth, &MACConf);
 1104              		.loc 1 680 21 is_stmt 0 view .LVU300
 1105 0090 0697     		str	r7, [sp, #24]
 681:LWIP/Target/ethernetif.c ****       HAL_ETH_Start(&heth);
 1106              		.loc 1 681 7 is_stmt 1 view .LVU301
 1107 0092 01A9     		add	r1, sp, #4
 1108 0094 3046     		mov	r0, r6
 1109 0096 FFF7FEFF 		bl	HAL_ETH_SetMACConfig
 1110              	.LVL78:
 682:LWIP/Target/ethernetif.c ****       netif_set_up(netif);
 1111              		.loc 1 682 7 view .LVU302
 1112 009a 3046     		mov	r0, r6
 1113 009c FFF7FEFF 		bl	HAL_ETH_Start
 1114              	.LVL79:
 683:LWIP/Target/ethernetif.c ****       netif_set_link_up(netif);
 1115              		.loc 1 683 7 view .LVU303
 1116 00a0 2046     		mov	r0, r4
 1117 00a2 FFF7FEFF 		bl	netif_set_up
 1118              	.LVL80:
 684:LWIP/Target/ethernetif.c ****     }
 1119              		.loc 1 684 7 view .LVU304
 1120 00a6 2046     		mov	r0, r4
 1121 00a8 FFF7FEFF 		bl	netif_set_link_up
 1122              	.LVL81:
 1123              		.loc 1 687 1 is_stmt 0 view .LVU305
 1124 00ac E8E7     		b	.L65
 1125              	.L79:
 1126 00ae 00BF     		.align	2
 1127              	.L78:
 1128 00b0 00000000 		.word	.LANCHOR4
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 37


 1129 00b4 00000000 		.word	.LANCHOR1
 1130              		.cfi_endproc
 1131              	.LFE181:
 1133              		.section	.text.low_level_init,"ax",%progbits
 1134              		.align	1
 1135              		.syntax unified
 1136              		.thumb
 1137              		.thumb_func
 1138              		.fpu fpv5-d16
 1140              	low_level_init:
 1141              	.LVL82:
 1142              	.LFB167:
 159:LWIP/Target/ethernetif.c ****   HAL_StatusTypeDef hal_eth_init_status = HAL_OK;
 1143              		.loc 1 159 1 is_stmt 1 view -0
 1144              		.cfi_startproc
 1145              		@ args = 0, pretend = 0, frame = 8
 1146              		@ frame_needed = 0, uses_anonymous_args = 0
 159:LWIP/Target/ethernetif.c ****   HAL_StatusTypeDef hal_eth_init_status = HAL_OK;
 1147              		.loc 1 159 1 is_stmt 0 view .LVU307
 1148 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1149              	.LCFI23:
 1150              		.cfi_def_cfa_offset 24
 1151              		.cfi_offset 4, -24
 1152              		.cfi_offset 5, -20
 1153              		.cfi_offset 6, -16
 1154              		.cfi_offset 7, -12
 1155              		.cfi_offset 8, -8
 1156              		.cfi_offset 14, -4
 1157 0004 82B0     		sub	sp, sp, #8
 1158              	.LCFI24:
 1159              		.cfi_def_cfa_offset 32
 1160 0006 0446     		mov	r4, r0
 160:LWIP/Target/ethernetif.c ****   /* Start ETH HAL Init */
 1161              		.loc 1 160 3 is_stmt 1 view .LVU308
 1162              	.LVL83:
 163:LWIP/Target/ethernetif.c ****   heth.Instance = ETH;
 1163              		.loc 1 163 3 view .LVU309
 164:LWIP/Target/ethernetif.c ****   MACAddr[0] = 0x00;
 1164              		.loc 1 164 3 view .LVU310
 164:LWIP/Target/ethernetif.c ****   MACAddr[0] = 0x00;
 1165              		.loc 1 164 17 is_stmt 0 view .LVU311
 1166 0008 314D     		ldr	r5, .L84
 1167 000a 324B     		ldr	r3, .L84+4
 1168 000c 2B60     		str	r3, [r5]
 165:LWIP/Target/ethernetif.c ****   MACAddr[1] = 0x80;
 1169              		.loc 1 165 3 is_stmt 1 view .LVU312
 165:LWIP/Target/ethernetif.c ****   MACAddr[1] = 0x80;
 1170              		.loc 1 165 14 is_stmt 0 view .LVU313
 1171 000e 0026     		movs	r6, #0
 1172 0010 8DF80060 		strb	r6, [sp]
 166:LWIP/Target/ethernetif.c ****   MACAddr[2] = 0xE1;
 1173              		.loc 1 166 3 is_stmt 1 view .LVU314
 166:LWIP/Target/ethernetif.c ****   MACAddr[2] = 0xE1;
 1174              		.loc 1 166 14 is_stmt 0 view .LVU315
 1175 0014 8023     		movs	r3, #128
 1176 0016 8DF80130 		strb	r3, [sp, #1]
 167:LWIP/Target/ethernetif.c ****   MACAddr[3] = 0x00;
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 38


 1177              		.loc 1 167 3 is_stmt 1 view .LVU316
 167:LWIP/Target/ethernetif.c ****   MACAddr[3] = 0x00;
 1178              		.loc 1 167 14 is_stmt 0 view .LVU317
 1179 001a E123     		movs	r3, #225
 1180 001c 8DF80230 		strb	r3, [sp, #2]
 168:LWIP/Target/ethernetif.c ****   MACAddr[4] = 0x00;
 1181              		.loc 1 168 3 is_stmt 1 view .LVU318
 168:LWIP/Target/ethernetif.c ****   MACAddr[4] = 0x00;
 1182              		.loc 1 168 14 is_stmt 0 view .LVU319
 1183 0020 8DF80360 		strb	r6, [sp, #3]
 169:LWIP/Target/ethernetif.c ****   MACAddr[5] = 0x00;
 1184              		.loc 1 169 3 is_stmt 1 view .LVU320
 169:LWIP/Target/ethernetif.c ****   MACAddr[5] = 0x00;
 1185              		.loc 1 169 14 is_stmt 0 view .LVU321
 1186 0024 8DF80460 		strb	r6, [sp, #4]
 170:LWIP/Target/ethernetif.c ****   heth.Init.MACAddr = &MACAddr[0];
 1187              		.loc 1 170 3 is_stmt 1 view .LVU322
 170:LWIP/Target/ethernetif.c ****   heth.Init.MACAddr = &MACAddr[0];
 1188              		.loc 1 170 14 is_stmt 0 view .LVU323
 1189 0028 8DF80560 		strb	r6, [sp, #5]
 171:LWIP/Target/ethernetif.c ****   heth.Init.MediaInterface = HAL_ETH_RMII_MODE;
 1190              		.loc 1 171 3 is_stmt 1 view .LVU324
 171:LWIP/Target/ethernetif.c ****   heth.Init.MediaInterface = HAL_ETH_RMII_MODE;
 1191              		.loc 1 171 21 is_stmt 0 view .LVU325
 1192 002c C5F804D0 		str	sp, [r5, #4]
 172:LWIP/Target/ethernetif.c ****   heth.Init.TxDesc = DMATxDscrTab;
 1193              		.loc 1 172 3 is_stmt 1 view .LVU326
 172:LWIP/Target/ethernetif.c ****   heth.Init.TxDesc = DMATxDscrTab;
 1194              		.loc 1 172 28 is_stmt 0 view .LVU327
 1195 0030 4FF40003 		mov	r3, #8388608
 1196 0034 AB60     		str	r3, [r5, #8]
 173:LWIP/Target/ethernetif.c ****   heth.Init.RxDesc = DMARxDscrTab;
 1197              		.loc 1 173 3 is_stmt 1 view .LVU328
 173:LWIP/Target/ethernetif.c ****   heth.Init.RxDesc = DMARxDscrTab;
 1198              		.loc 1 173 20 is_stmt 0 view .LVU329
 1199 0036 284B     		ldr	r3, .L84+8
 1200 0038 EB60     		str	r3, [r5, #12]
 174:LWIP/Target/ethernetif.c ****   heth.Init.RxBuffLen = 1536;
 1201              		.loc 1 174 3 is_stmt 1 view .LVU330
 174:LWIP/Target/ethernetif.c ****   heth.Init.RxBuffLen = 1536;
 1202              		.loc 1 174 20 is_stmt 0 view .LVU331
 1203 003a 284B     		ldr	r3, .L84+12
 1204 003c 2B61     		str	r3, [r5, #16]
 175:LWIP/Target/ethernetif.c **** 
 1205              		.loc 1 175 3 is_stmt 1 view .LVU332
 175:LWIP/Target/ethernetif.c **** 
 1206              		.loc 1 175 23 is_stmt 0 view .LVU333
 1207 003e 4FF4C063 		mov	r3, #1536
 1208 0042 6B61     		str	r3, [r5, #20]
 181:LWIP/Target/ethernetif.c **** 
 1209              		.loc 1 181 3 is_stmt 1 view .LVU334
 181:LWIP/Target/ethernetif.c **** 
 1210              		.loc 1 181 25 is_stmt 0 view .LVU335
 1211 0044 2846     		mov	r0, r5
 1212              	.LVL84:
 181:LWIP/Target/ethernetif.c **** 
 1213              		.loc 1 181 25 view .LVU336
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 39


 1214 0046 FFF7FEFF 		bl	HAL_ETH_Init
 1215              	.LVL85:
 1216 004a 0746     		mov	r7, r0
 1217              	.LVL86:
 183:LWIP/Target/ethernetif.c ****   TxConfig.Attributes = ETH_TX_PACKETS_FEATURES_CSUM | ETH_TX_PACKETS_FEATURES_CRCPAD;
 1218              		.loc 1 183 3 is_stmt 1 view .LVU337
 1219 004c DFF89C80 		ldr	r8, .L84+28
 1220 0050 3822     		movs	r2, #56
 1221 0052 3146     		mov	r1, r6
 1222 0054 4046     		mov	r0, r8
 1223 0056 FFF7FEFF 		bl	memset
 1224              	.LVL87:
 184:LWIP/Target/ethernetif.c ****   TxConfig.ChecksumCtrl = ETH_CHECKSUM_IPHDR_PAYLOAD_INSERT_PHDR_CALC;
 1225              		.loc 1 184 3 view .LVU338
 184:LWIP/Target/ethernetif.c ****   TxConfig.ChecksumCtrl = ETH_CHECKSUM_IPHDR_PAYLOAD_INSERT_PHDR_CALC;
 1226              		.loc 1 184 23 is_stmt 0 view .LVU339
 1227 005a 2123     		movs	r3, #33
 1228 005c C8F80030 		str	r3, [r8]
 185:LWIP/Target/ethernetif.c ****   TxConfig.CRCPadCtrl = ETH_CRC_PAD_INSERT;
 1229              		.loc 1 185 3 is_stmt 1 view .LVU340
 185:LWIP/Target/ethernetif.c ****   TxConfig.CRCPadCtrl = ETH_CRC_PAD_INSERT;
 1230              		.loc 1 185 25 is_stmt 0 view .LVU341
 1231 0060 4FF44003 		mov	r3, #12582912
 1232 0064 C8F81430 		str	r3, [r8, #20]
 186:LWIP/Target/ethernetif.c **** 
 1233              		.loc 1 186 3 is_stmt 1 view .LVU342
 191:LWIP/Target/ethernetif.c **** 
 1234              		.loc 1 191 3 view .LVU343
 1235 0068 1D48     		ldr	r0, .L84+16
 1236 006a FFF7FEFF 		bl	memp_init_pool
 1237              	.LVL88:
 196:LWIP/Target/ethernetif.c **** 
 1238              		.loc 1 196 3 view .LVU344
 196:LWIP/Target/ethernetif.c **** 
 1239              		.loc 1 196 21 is_stmt 0 view .LVU345
 1240 006e 0623     		movs	r3, #6
 1241 0070 84F82C30 		strb	r3, [r4, #44]
 199:LWIP/Target/ethernetif.c ****   netif->hwaddr[1] = heth.Init.MACAddr[1];
 1242              		.loc 1 199 3 is_stmt 1 view .LVU346
 199:LWIP/Target/ethernetif.c ****   netif->hwaddr[1] = heth.Init.MACAddr[1];
 1243              		.loc 1 199 31 is_stmt 0 view .LVU347
 1244 0074 6B68     		ldr	r3, [r5, #4]
 199:LWIP/Target/ethernetif.c ****   netif->hwaddr[1] = heth.Init.MACAddr[1];
 1245              		.loc 1 199 39 view .LVU348
 1246 0076 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 199:LWIP/Target/ethernetif.c ****   netif->hwaddr[1] = heth.Init.MACAddr[1];
 1247              		.loc 1 199 20 view .LVU349
 1248 0078 84F82620 		strb	r2, [r4, #38]
 200:LWIP/Target/ethernetif.c ****   netif->hwaddr[2] = heth.Init.MACAddr[2];
 1249              		.loc 1 200 3 is_stmt 1 view .LVU350
 200:LWIP/Target/ethernetif.c ****   netif->hwaddr[2] = heth.Init.MACAddr[2];
 1250              		.loc 1 200 20 is_stmt 0 view .LVU351
 1251 007c 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 1252 007e 84F82720 		strb	r2, [r4, #39]
 201:LWIP/Target/ethernetif.c ****   netif->hwaddr[3] = heth.Init.MACAddr[3];
 1253              		.loc 1 201 3 is_stmt 1 view .LVU352
 201:LWIP/Target/ethernetif.c ****   netif->hwaddr[3] = heth.Init.MACAddr[3];
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 40


 1254              		.loc 1 201 20 is_stmt 0 view .LVU353
 1255 0082 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 1256 0084 84F82820 		strb	r2, [r4, #40]
 202:LWIP/Target/ethernetif.c ****   netif->hwaddr[4] = heth.Init.MACAddr[4];
 1257              		.loc 1 202 3 is_stmt 1 view .LVU354
 202:LWIP/Target/ethernetif.c ****   netif->hwaddr[4] = heth.Init.MACAddr[4];
 1258              		.loc 1 202 20 is_stmt 0 view .LVU355
 1259 0088 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 1260 008a 84F82920 		strb	r2, [r4, #41]
 203:LWIP/Target/ethernetif.c ****   netif->hwaddr[5] = heth.Init.MACAddr[5];
 1261              		.loc 1 203 3 is_stmt 1 view .LVU356
 203:LWIP/Target/ethernetif.c ****   netif->hwaddr[5] = heth.Init.MACAddr[5];
 1262              		.loc 1 203 20 is_stmt 0 view .LVU357
 1263 008e 1A79     		ldrb	r2, [r3, #4]	@ zero_extendqisi2
 1264 0090 84F82A20 		strb	r2, [r4, #42]
 204:LWIP/Target/ethernetif.c **** 
 1265              		.loc 1 204 3 is_stmt 1 view .LVU358
 204:LWIP/Target/ethernetif.c **** 
 1266              		.loc 1 204 20 is_stmt 0 view .LVU359
 1267 0094 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 1268 0096 84F82B30 		strb	r3, [r4, #43]
 207:LWIP/Target/ethernetif.c **** 
 1269              		.loc 1 207 3 is_stmt 1 view .LVU360
 207:LWIP/Target/ethernetif.c **** 
 1270              		.loc 1 207 14 is_stmt 0 view .LVU361
 1271 009a 40F2DC53 		movw	r3, #1500
 1272 009e A384     		strh	r3, [r4, #36]	@ movhi
 212:LWIP/Target/ethernetif.c **** #else
 1273              		.loc 1 212 3 is_stmt 1 view .LVU362
 212:LWIP/Target/ethernetif.c **** #else
 1274              		.loc 1 212 16 is_stmt 0 view .LVU363
 1275 00a0 94F82D30 		ldrb	r3, [r4, #45]	@ zero_extendqisi2
 1276 00a4 43F00A03 		orr	r3, r3, #10
 1277 00a8 84F82D30 		strb	r3, [r4, #45]
 221:LWIP/Target/ethernetif.c **** 
 1278              		.loc 1 221 3 is_stmt 1 view .LVU364
 1279 00ac 0D4D     		ldr	r5, .L84+20
 1280 00ae 0E49     		ldr	r1, .L84+24
 1281 00b0 2846     		mov	r0, r5
 1282 00b2 FFF7FEFF 		bl	LAN8742_RegisterBusIO
 1283              	.LVL89:
 224:LWIP/Target/ethernetif.c **** 
 1284              		.loc 1 224 3 view .LVU365
 1285 00b6 2846     		mov	r0, r5
 1286 00b8 FFF7FEFF 		bl	LAN8742_Init
 1287              	.LVL90:
 226:LWIP/Target/ethernetif.c ****   {
 1288              		.loc 1 226 3 view .LVU366
 226:LWIP/Target/ethernetif.c ****   {
 1289              		.loc 1 226 6 is_stmt 0 view .LVU367
 1290 00bc 2FB9     		cbnz	r7, .L81
 229:LWIP/Target/ethernetif.c ****   }
 1291              		.loc 1 229 5 is_stmt 1 view .LVU368
 1292 00be 2046     		mov	r0, r4
 1293 00c0 FFF7FEFF 		bl	ethernet_link_check_state
 1294              	.LVL91:
 1295              	.L80:
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 41


 240:LWIP/Target/ethernetif.c **** 
 1296              		.loc 1 240 1 is_stmt 0 view .LVU369
 1297 00c4 02B0     		add	sp, sp, #8
 1298              	.LCFI25:
 1299              		.cfi_remember_state
 1300              		.cfi_def_cfa_offset 24
 1301              		@ sp needed
 1302 00c6 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1303              	.LVL92:
 1304              	.L81:
 1305              	.LCFI26:
 1306              		.cfi_restore_state
 233:LWIP/Target/ethernetif.c ****   }
 1307              		.loc 1 233 5 is_stmt 1 view .LVU370
 1308 00ca FFF7FEFF 		bl	Error_Handler
 1309              	.LVL93:
 240:LWIP/Target/ethernetif.c **** 
 1310              		.loc 1 240 1 is_stmt 0 view .LVU371
 1311 00ce F9E7     		b	.L80
 1312              	.L85:
 1313              		.align	2
 1314              	.L84:
 1315 00d0 00000000 		.word	.LANCHOR1
 1316 00d4 00800240 		.word	1073905664
 1317 00d8 00000000 		.word	.LANCHOR5
 1318 00dc 00000000 		.word	.LANCHOR6
 1319 00e0 00000000 		.word	.LANCHOR3
 1320 00e4 00000000 		.word	.LANCHOR4
 1321 00e8 00000000 		.word	.LANCHOR7
 1322 00ec 00000000 		.word	.LANCHOR2
 1323              		.cfi_endproc
 1324              	.LFE167:
 1326              		.section	.rodata.ethernetif_init.str1.4,"aMS",%progbits,1
 1327              		.align	2
 1328              	.LC0:
 1329 0000 4C574950 		.ascii	"LWIP/Target/ethernetif.c\000"
 1329      2F546172 
 1329      6765742F 
 1329      65746865 
 1329      726E6574 
 1330 0019 000000   		.align	2
 1331              	.LC1:
 1332 001c 6E657469 		.ascii	"netif != NULL\000"
 1332      6620213D 
 1332      204E554C 
 1332      4C00
 1333 002a 0000     		.align	2
 1334              	.LC2:
 1335 002c 41737365 		.ascii	"Assertion \"%s\" failed at line %d in %s\012\000"
 1335      7274696F 
 1335      6E202225 
 1335      73222066 
 1335      61696C65 
 1336              		.section	.text.ethernetif_init,"ax",%progbits
 1337              		.align	1
 1338              		.global	ethernetif_init
 1339              		.syntax unified
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 42


 1340              		.thumb
 1341              		.thumb_func
 1342              		.fpu fpv5-d16
 1344              	ethernetif_init:
 1345              	.LVL94:
 1346              	.LFB171:
 376:LWIP/Target/ethernetif.c ****   LWIP_ASSERT("netif != NULL", (netif != NULL));
 1347              		.loc 1 376 1 is_stmt 1 view -0
 1348              		.cfi_startproc
 1349              		@ args = 0, pretend = 0, frame = 0
 1350              		@ frame_needed = 0, uses_anonymous_args = 0
 376:LWIP/Target/ethernetif.c ****   LWIP_ASSERT("netif != NULL", (netif != NULL));
 1351              		.loc 1 376 1 is_stmt 0 view .LVU373
 1352 0000 10B5     		push	{r4, lr}
 1353              	.LCFI27:
 1354              		.cfi_def_cfa_offset 8
 1355              		.cfi_offset 4, -8
 1356              		.cfi_offset 14, -4
 377:LWIP/Target/ethernetif.c **** 
 1357              		.loc 1 377 3 is_stmt 1 view .LVU374
 377:LWIP/Target/ethernetif.c **** 
 1358              		.loc 1 377 3 view .LVU375
 1359 0002 0446     		mov	r4, r0
 1360 0004 70B1     		cbz	r0, .L89
 1361              	.LVL95:
 1362              	.L87:
 377:LWIP/Target/ethernetif.c **** 
 1363              		.loc 1 377 3 discriminator 3 view .LVU376
 377:LWIP/Target/ethernetif.c **** 
 1364              		.loc 1 377 3 discriminator 3 view .LVU377
 391:LWIP/Target/ethernetif.c ****   netif->name[1] = IFNAME1;
 1365              		.loc 1 391 3 discriminator 3 view .LVU378
 391:LWIP/Target/ethernetif.c ****   netif->name[1] = IFNAME1;
 1366              		.loc 1 391 18 is_stmt 0 discriminator 3 view .LVU379
 1367 0006 7323     		movs	r3, #115
 1368 0008 84F82E30 		strb	r3, [r4, #46]
 392:LWIP/Target/ethernetif.c ****   /* We directly use etharp_output() here to save a function call.
 1369              		.loc 1 392 3 is_stmt 1 discriminator 3 view .LVU380
 392:LWIP/Target/ethernetif.c ****   /* We directly use etharp_output() here to save a function call.
 1370              		.loc 1 392 18 is_stmt 0 discriminator 3 view .LVU381
 1371 000c 7423     		movs	r3, #116
 1372 000e 84F82F30 		strb	r3, [r4, #47]
 401:LWIP/Target/ethernetif.c **** #else
 1373              		.loc 1 401 3 is_stmt 1 discriminator 3 view .LVU382
 401:LWIP/Target/ethernetif.c **** #else
 1374              		.loc 1 401 17 is_stmt 0 discriminator 3 view .LVU383
 1375 0012 084B     		ldr	r3, .L90
 1376 0014 6361     		str	r3, [r4, #20]
 413:LWIP/Target/ethernetif.c **** 
 1377              		.loc 1 413 3 is_stmt 1 discriminator 3 view .LVU384
 413:LWIP/Target/ethernetif.c **** 
 1378              		.loc 1 413 21 is_stmt 0 discriminator 3 view .LVU385
 1379 0016 084B     		ldr	r3, .L90+4
 1380 0018 A361     		str	r3, [r4, #24]
 416:LWIP/Target/ethernetif.c **** 
 1381              		.loc 1 416 3 is_stmt 1 discriminator 3 view .LVU386
 1382 001a 2046     		mov	r0, r4
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 43


 1383 001c FFF7FEFF 		bl	low_level_init
 1384              	.LVL96:
 418:LWIP/Target/ethernetif.c **** }
 1385              		.loc 1 418 3 discriminator 3 view .LVU387
 419:LWIP/Target/ethernetif.c **** 
 1386              		.loc 1 419 1 is_stmt 0 discriminator 3 view .LVU388
 1387 0020 0020     		movs	r0, #0
 1388 0022 10BD     		pop	{r4, pc}
 1389              	.LVL97:
 1390              	.L89:
 377:LWIP/Target/ethernetif.c **** 
 1391              		.loc 1 377 3 is_stmt 1 discriminator 1 view .LVU389
 377:LWIP/Target/ethernetif.c **** 
 1392              		.loc 1 377 3 discriminator 1 view .LVU390
 1393 0024 054B     		ldr	r3, .L90+8
 1394 0026 40F27912 		movw	r2, #377
 1395 002a 0549     		ldr	r1, .L90+12
 1396 002c 0548     		ldr	r0, .L90+16
 1397              	.LVL98:
 377:LWIP/Target/ethernetif.c **** 
 1398              		.loc 1 377 3 is_stmt 0 discriminator 1 view .LVU391
 1399 002e FFF7FEFF 		bl	printf
 1400              	.LVL99:
 1401 0032 E8E7     		b	.L87
 1402              	.L91:
 1403              		.align	2
 1404              	.L90:
 1405 0034 00000000 		.word	etharp_output
 1406 0038 00000000 		.word	low_level_output
 1407 003c 00000000 		.word	.LC0
 1408 0040 1C000000 		.word	.LC1
 1409 0044 2C000000 		.word	.LC2
 1410              		.cfi_endproc
 1411              	.LFE171:
 1413              		.section	.text.HAL_ETH_RxAllocateCallback,"ax",%progbits
 1414              		.align	1
 1415              		.global	HAL_ETH_RxAllocateCallback
 1416              		.syntax unified
 1417              		.thumb
 1418              		.thumb_func
 1419              		.fpu fpv5-d16
 1421              	HAL_ETH_RxAllocateCallback:
 1422              	.LVL100:
 1423              	.LFB182:
 688:LWIP/Target/ethernetif.c **** 
 689:LWIP/Target/ethernetif.c **** void HAL_ETH_RxAllocateCallback(uint8_t **buff)
 690:LWIP/Target/ethernetif.c **** {
 1424              		.loc 1 690 1 is_stmt 1 view -0
 1425              		.cfi_startproc
 1426              		@ args = 0, pretend = 0, frame = 0
 1427              		@ frame_needed = 0, uses_anonymous_args = 0
 1428              		.loc 1 690 1 is_stmt 0 view .LVU393
 1429 0000 10B5     		push	{r4, lr}
 1430              	.LCFI28:
 1431              		.cfi_def_cfa_offset 8
 1432              		.cfi_offset 4, -8
 1433              		.cfi_offset 14, -4
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 44


 1434 0002 82B0     		sub	sp, sp, #8
 1435              	.LCFI29:
 1436              		.cfi_def_cfa_offset 16
 1437 0004 0446     		mov	r4, r0
 691:LWIP/Target/ethernetif.c ****   /* USER CODE BEGIN HAL ETH RxAllocateCallback */
 692:LWIP/Target/ethernetif.c ****   struct pbuf_custom *p = LWIP_MEMPOOL_ALLOC(RX_POOL);
 1438              		.loc 1 692 3 is_stmt 1 view .LVU394
 1439              		.loc 1 692 27 is_stmt 0 view .LVU395
 1440 0006 0E48     		ldr	r0, .L96
 1441              	.LVL101:
 1442              		.loc 1 692 27 view .LVU396
 1443 0008 FFF7FEFF 		bl	memp_malloc_pool
 1444              	.LVL102:
 693:LWIP/Target/ethernetif.c ****   if (p)
 1445              		.loc 1 693 3 is_stmt 1 view .LVU397
 1446              		.loc 1 693 6 is_stmt 0 view .LVU398
 1447 000c 88B1     		cbz	r0, .L93
 1448 000e 0346     		mov	r3, r0
 694:LWIP/Target/ethernetif.c ****   {
 695:LWIP/Target/ethernetif.c ****     /* Get the buff from the struct pbuf address. */
 696:LWIP/Target/ethernetif.c ****     *buff = (uint8_t *)p + offsetof(RxBuff_t, buff);
 1449              		.loc 1 696 5 is_stmt 1 view .LVU399
 1450              		.loc 1 696 26 is_stmt 0 view .LVU400
 1451 0010 00F12002 		add	r2, r0, #32
 1452              		.loc 1 696 11 view .LVU401
 1453 0014 2260     		str	r2, [r4]
 697:LWIP/Target/ethernetif.c ****     p->custom_free_function = pbuf_free_custom;
 1454              		.loc 1 697 5 is_stmt 1 view .LVU402
 1455              		.loc 1 697 29 is_stmt 0 view .LVU403
 1456 0016 0B4A     		ldr	r2, .L96+4
 1457 0018 0261     		str	r2, [r0, #16]
 698:LWIP/Target/ethernetif.c ****     /* Initialize the struct pbuf.
 699:LWIP/Target/ethernetif.c ****      * This must be performed whenever a buffer's allocated because it may be
 700:LWIP/Target/ethernetif.c ****      * changed by lwIP or the app, e.g., pbuf_free decrements ref. */
 701:LWIP/Target/ethernetif.c ****     pbuf_alloced_custom(PBUF_RAW, 0, PBUF_REF, p, *buff, ETH_RX_BUF_SIZE);
 1458              		.loc 1 701 5 is_stmt 1 view .LVU404
 1459 001a 4FF4C062 		mov	r2, #1536
 1460 001e 0192     		str	r2, [sp, #4]
 1461 0020 2268     		ldr	r2, [r4]
 1462 0022 0092     		str	r2, [sp]
 1463 0024 4122     		movs	r2, #65
 1464 0026 0021     		movs	r1, #0
 1465 0028 0846     		mov	r0, r1
 1466              	.LVL103:
 1467              		.loc 1 701 5 is_stmt 0 view .LVU405
 1468 002a FFF7FEFF 		bl	pbuf_alloced_custom
 1469              	.LVL104:
 1470              	.L92:
 702:LWIP/Target/ethernetif.c ****   }
 703:LWIP/Target/ethernetif.c ****   else
 704:LWIP/Target/ethernetif.c ****   {
 705:LWIP/Target/ethernetif.c ****     RxAllocStatus = RX_ALLOC_ERROR;
 706:LWIP/Target/ethernetif.c ****     *buff = NULL;
 707:LWIP/Target/ethernetif.c ****   }
 708:LWIP/Target/ethernetif.c ****   /* USER CODE END HAL ETH RxAllocateCallback */
 709:LWIP/Target/ethernetif.c **** }
 1471              		.loc 1 709 1 view .LVU406
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 45


 1472 002e 02B0     		add	sp, sp, #8
 1473              	.LCFI30:
 1474              		.cfi_remember_state
 1475              		.cfi_def_cfa_offset 8
 1476              		@ sp needed
 1477 0030 10BD     		pop	{r4, pc}
 1478              	.LVL105:
 1479              	.L93:
 1480              	.LCFI31:
 1481              		.cfi_restore_state
 705:LWIP/Target/ethernetif.c ****     *buff = NULL;
 1482              		.loc 1 705 5 is_stmt 1 view .LVU407
 705:LWIP/Target/ethernetif.c ****     *buff = NULL;
 1483              		.loc 1 705 19 is_stmt 0 view .LVU408
 1484 0032 054B     		ldr	r3, .L96+8
 1485 0034 0122     		movs	r2, #1
 1486 0036 1A70     		strb	r2, [r3]
 706:LWIP/Target/ethernetif.c ****   }
 1487              		.loc 1 706 5 is_stmt 1 view .LVU409
 706:LWIP/Target/ethernetif.c ****   }
 1488              		.loc 1 706 11 is_stmt 0 view .LVU410
 1489 0038 0023     		movs	r3, #0
 1490 003a 2360     		str	r3, [r4]
 1491              		.loc 1 709 1 view .LVU411
 1492 003c F7E7     		b	.L92
 1493              	.L97:
 1494 003e 00BF     		.align	2
 1495              	.L96:
 1496 0040 00000000 		.word	.LANCHOR3
 1497 0044 00000000 		.word	pbuf_free_custom
 1498 0048 00000000 		.word	.LANCHOR0
 1499              		.cfi_endproc
 1500              	.LFE182:
 1502              		.section	.text.HAL_ETH_RxLinkCallback,"ax",%progbits
 1503              		.align	1
 1504              		.global	HAL_ETH_RxLinkCallback
 1505              		.syntax unified
 1506              		.thumb
 1507              		.thumb_func
 1508              		.fpu fpv5-d16
 1510              	HAL_ETH_RxLinkCallback:
 1511              	.LVL106:
 1512              	.LFB183:
 710:LWIP/Target/ethernetif.c **** 
 711:LWIP/Target/ethernetif.c **** void HAL_ETH_RxLinkCallback(void **pStart, void **pEnd, uint8_t *buff, uint16_t Length)
 712:LWIP/Target/ethernetif.c **** {
 1513              		.loc 1 712 1 is_stmt 1 view -0
 1514              		.cfi_startproc
 1515              		@ args = 0, pretend = 0, frame = 0
 1516              		@ frame_needed = 0, uses_anonymous_args = 0
 1517              		@ link register save eliminated.
 1518              		.loc 1 712 1 is_stmt 0 view .LVU413
 1519 0000 30B4     		push	{r4, r5}
 1520              	.LCFI32:
 1521              		.cfi_def_cfa_offset 8
 1522              		.cfi_offset 4, -8
 1523              		.cfi_offset 5, -4
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 46


 713:LWIP/Target/ethernetif.c ****   /* USER CODE BEGIN HAL ETH RxLinkCallback */
 714:LWIP/Target/ethernetif.c **** 
 715:LWIP/Target/ethernetif.c ****   struct pbuf **ppStart = (struct pbuf **)pStart;
 1524              		.loc 1 715 3 is_stmt 1 view .LVU414
 1525              	.LVL107:
 716:LWIP/Target/ethernetif.c ****   struct pbuf **ppEnd = (struct pbuf **)pEnd;
 1526              		.loc 1 716 3 view .LVU415
 717:LWIP/Target/ethernetif.c ****   struct pbuf *p = NULL;
 1527              		.loc 1 717 3 view .LVU416
 718:LWIP/Target/ethernetif.c **** 
 719:LWIP/Target/ethernetif.c ****   /* Get the struct pbuf from the buff address. */
 720:LWIP/Target/ethernetif.c ****   p = (struct pbuf *)(buff - offsetof(RxBuff_t, buff));
 1528              		.loc 1 720 3 view .LVU417
 1529              		.loc 1 720 5 is_stmt 0 view .LVU418
 1530 0002 A2F12004 		sub	r4, r2, #32
 1531              	.LVL108:
 721:LWIP/Target/ethernetif.c ****   p->next = NULL;
 1532              		.loc 1 721 3 is_stmt 1 view .LVU419
 1533              		.loc 1 721 11 is_stmt 0 view .LVU420
 1534 0006 0025     		movs	r5, #0
 1535 0008 42F8205C 		str	r5, [r2, #-32]
 722:LWIP/Target/ethernetif.c ****   p->tot_len = 0;
 1536              		.loc 1 722 3 is_stmt 1 view .LVU421
 1537              		.loc 1 722 14 is_stmt 0 view .LVU422
 1538 000c 22F8185C 		strh	r5, [r2, #-24]	@ movhi
 723:LWIP/Target/ethernetif.c ****   p->len = Length;
 1539              		.loc 1 723 3 is_stmt 1 view .LVU423
 1540              		.loc 1 723 10 is_stmt 0 view .LVU424
 1541 0010 22F8163C 		strh	r3, [r2, #-22]	@ movhi
 724:LWIP/Target/ethernetif.c **** 
 725:LWIP/Target/ethernetif.c ****   /* Chain the buffer. */
 726:LWIP/Target/ethernetif.c ****   if (!*ppStart)
 1542              		.loc 1 726 3 is_stmt 1 view .LVU425
 1543              		.loc 1 726 8 is_stmt 0 view .LVU426
 1544 0014 0568     		ldr	r5, [r0]
 1545              		.loc 1 726 6 view .LVU427
 1546 0016 25B1     		cbz	r5, .L106
 727:LWIP/Target/ethernetif.c ****   {
 728:LWIP/Target/ethernetif.c ****     /* The first buffer of the packet. */
 729:LWIP/Target/ethernetif.c ****     *ppStart = p;
 730:LWIP/Target/ethernetif.c ****   }
 731:LWIP/Target/ethernetif.c ****   else
 732:LWIP/Target/ethernetif.c ****   {
 733:LWIP/Target/ethernetif.c ****     /* Chain the buffer to the end of the packet. */
 734:LWIP/Target/ethernetif.c ****     (*ppEnd)->next = p;
 1547              		.loc 1 734 5 is_stmt 1 view .LVU428
 1548              		.loc 1 734 6 is_stmt 0 view .LVU429
 1549 0018 0D68     		ldr	r5, [r1]
 1550              		.loc 1 734 20 view .LVU430
 1551 001a 2C60     		str	r4, [r5]
 1552              	.L100:
 735:LWIP/Target/ethernetif.c ****   }
 736:LWIP/Target/ethernetif.c ****   *ppEnd = p;
 1553              		.loc 1 736 3 is_stmt 1 view .LVU431
 1554              		.loc 1 736 10 is_stmt 0 view .LVU432
 1555 001c 0C60     		str	r4, [r1]
 737:LWIP/Target/ethernetif.c **** 
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 47


 738:LWIP/Target/ethernetif.c ****   /* Update the total length of all the buffers of the chain. Each pbuf in the chain should have it
 739:LWIP/Target/ethernetif.c ****    * set to its own length, plus the length of all the following pbufs in the chain. */
 740:LWIP/Target/ethernetif.c ****   for (p = *ppStart; p != NULL; p = p->next)
 1556              		.loc 1 740 3 is_stmt 1 view .LVU433
 1557              		.loc 1 740 10 is_stmt 0 view .LVU434
 1558 001e 0168     		ldr	r1, [r0]
 1559              	.LVL109:
 1560              		.loc 1 740 3 view .LVU435
 1561 0020 05E0     		b	.L101
 1562              	.LVL110:
 1563              	.L106:
 729:LWIP/Target/ethernetif.c ****   }
 1564              		.loc 1 729 5 is_stmt 1 view .LVU436
 729:LWIP/Target/ethernetif.c ****   }
 1565              		.loc 1 729 14 is_stmt 0 view .LVU437
 1566 0022 0460     		str	r4, [r0]
 1567 0024 FAE7     		b	.L100
 1568              	.LVL111:
 1569              	.L102:
 741:LWIP/Target/ethernetif.c ****   {
 742:LWIP/Target/ethernetif.c ****     p->tot_len += Length;
 1570              		.loc 1 742 5 is_stmt 1 discriminator 3 view .LVU438
 1571              		.loc 1 742 16 is_stmt 0 discriminator 3 view .LVU439
 1572 0026 0889     		ldrh	r0, [r1, #8]
 1573 0028 1844     		add	r0, r0, r3
 1574 002a 0881     		strh	r0, [r1, #8]	@ movhi
 740:LWIP/Target/ethernetif.c ****   {
 1575              		.loc 1 740 33 is_stmt 1 discriminator 3 view .LVU440
 740:LWIP/Target/ethernetif.c ****   {
 1576              		.loc 1 740 35 is_stmt 0 discriminator 3 view .LVU441
 1577 002c 0968     		ldr	r1, [r1]
 1578              	.LVL112:
 1579              	.L101:
 740:LWIP/Target/ethernetif.c ****   {
 1580              		.loc 1 740 22 is_stmt 1 discriminator 1 view .LVU442
 740:LWIP/Target/ethernetif.c ****   {
 1581              		.loc 1 740 3 is_stmt 0 discriminator 1 view .LVU443
 1582 002e 0029     		cmp	r1, #0
 1583 0030 F9D1     		bne	.L102
 743:LWIP/Target/ethernetif.c ****   }
 744:LWIP/Target/ethernetif.c **** 
 745:LWIP/Target/ethernetif.c ****   /* Invalidate data cache because Rx DMA's writing to physical memory makes it stale. */
 746:LWIP/Target/ethernetif.c ****   SCB_InvalidateDCache_by_Addr((uint32_t *)buff, Length);
 1584              		.loc 1 746 3 is_stmt 1 view .LVU444
 1585              	.LVL113:
 1586              	.LBB23:
 1587              	.LBI23:
 1588              		.file 2 "Drivers/CMSIS/Include/core_cm7.h"
   1:Drivers/CMSIS/Include/core_cm7.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/core_cm7.h ****  * @file     core_cm7.h
   3:Drivers/CMSIS/Include/core_cm7.h ****  * @brief    CMSIS Cortex-M7 Core Peripheral Access Layer Header File
   4:Drivers/CMSIS/Include/core_cm7.h ****  * @version  V5.0.8
   5:Drivers/CMSIS/Include/core_cm7.h ****  * @date     04. June 2018
   6:Drivers/CMSIS/Include/core_cm7.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/core_cm7.h **** /*
   8:Drivers/CMSIS/Include/core_cm7.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/core_cm7.h ****  *
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 48


  10:Drivers/CMSIS/Include/core_cm7.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/core_cm7.h ****  *
  12:Drivers/CMSIS/Include/core_cm7.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/core_cm7.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/core_cm7.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/core_cm7.h ****  *
  16:Drivers/CMSIS/Include/core_cm7.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/core_cm7.h ****  *
  18:Drivers/CMSIS/Include/core_cm7.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/core_cm7.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/core_cm7.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/core_cm7.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/core_cm7.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/core_cm7.h ****  */
  24:Drivers/CMSIS/Include/core_cm7.h **** 
  25:Drivers/CMSIS/Include/core_cm7.h **** #if   defined ( __ICCARM__ )
  26:Drivers/CMSIS/Include/core_cm7.h ****   #pragma system_include         /* treat file as system include file for MISRA check */
  27:Drivers/CMSIS/Include/core_cm7.h **** #elif defined (__clang__)
  28:Drivers/CMSIS/Include/core_cm7.h ****   #pragma clang system_header   /* treat file as system include file */
  29:Drivers/CMSIS/Include/core_cm7.h **** #endif
  30:Drivers/CMSIS/Include/core_cm7.h **** 
  31:Drivers/CMSIS/Include/core_cm7.h **** #ifndef __CORE_CM7_H_GENERIC
  32:Drivers/CMSIS/Include/core_cm7.h **** #define __CORE_CM7_H_GENERIC
  33:Drivers/CMSIS/Include/core_cm7.h **** 
  34:Drivers/CMSIS/Include/core_cm7.h **** #include <stdint.h>
  35:Drivers/CMSIS/Include/core_cm7.h **** 
  36:Drivers/CMSIS/Include/core_cm7.h **** #ifdef __cplusplus
  37:Drivers/CMSIS/Include/core_cm7.h ****  extern "C" {
  38:Drivers/CMSIS/Include/core_cm7.h **** #endif
  39:Drivers/CMSIS/Include/core_cm7.h **** 
  40:Drivers/CMSIS/Include/core_cm7.h **** /**
  41:Drivers/CMSIS/Include/core_cm7.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  42:Drivers/CMSIS/Include/core_cm7.h ****   CMSIS violates the following MISRA-C:2004 rules:
  43:Drivers/CMSIS/Include/core_cm7.h **** 
  44:Drivers/CMSIS/Include/core_cm7.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  45:Drivers/CMSIS/Include/core_cm7.h ****      Function definitions in header files are used to allow 'inlining'.
  46:Drivers/CMSIS/Include/core_cm7.h **** 
  47:Drivers/CMSIS/Include/core_cm7.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  48:Drivers/CMSIS/Include/core_cm7.h ****      Unions are used for effective representation of core registers.
  49:Drivers/CMSIS/Include/core_cm7.h **** 
  50:Drivers/CMSIS/Include/core_cm7.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  51:Drivers/CMSIS/Include/core_cm7.h ****      Function-like macros are used to allow more efficient code.
  52:Drivers/CMSIS/Include/core_cm7.h ****  */
  53:Drivers/CMSIS/Include/core_cm7.h **** 
  54:Drivers/CMSIS/Include/core_cm7.h **** 
  55:Drivers/CMSIS/Include/core_cm7.h **** /*******************************************************************************
  56:Drivers/CMSIS/Include/core_cm7.h ****  *                 CMSIS definitions
  57:Drivers/CMSIS/Include/core_cm7.h ****  ******************************************************************************/
  58:Drivers/CMSIS/Include/core_cm7.h **** /**
  59:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup Cortex_M7
  60:Drivers/CMSIS/Include/core_cm7.h ****   @{
  61:Drivers/CMSIS/Include/core_cm7.h ****  */
  62:Drivers/CMSIS/Include/core_cm7.h **** 
  63:Drivers/CMSIS/Include/core_cm7.h **** #include "cmsis_version.h"
  64:Drivers/CMSIS/Include/core_cm7.h **** 
  65:Drivers/CMSIS/Include/core_cm7.h **** /* CMSIS CM7 definitions */
  66:Drivers/CMSIS/Include/core_cm7.h **** #define __CM7_CMSIS_VERSION_MAIN  (__CM_CMSIS_VERSION_MAIN)                  /*!< \deprecated [31:1
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 49


  67:Drivers/CMSIS/Include/core_cm7.h **** #define __CM7_CMSIS_VERSION_SUB   ( __CM_CMSIS_VERSION_SUB)                  /*!< \deprecated [15:0
  68:Drivers/CMSIS/Include/core_cm7.h **** #define __CM7_CMSIS_VERSION       ((__CM7_CMSIS_VERSION_MAIN << 16U) | \
  69:Drivers/CMSIS/Include/core_cm7.h ****                                     __CM7_CMSIS_VERSION_SUB           )      /*!< \deprecated CMSIS
  70:Drivers/CMSIS/Include/core_cm7.h **** 
  71:Drivers/CMSIS/Include/core_cm7.h **** #define __CORTEX_M                (7U)                                       /*!< Cortex-M Core */
  72:Drivers/CMSIS/Include/core_cm7.h **** 
  73:Drivers/CMSIS/Include/core_cm7.h **** /** __FPU_USED indicates whether an FPU is used or not.
  74:Drivers/CMSIS/Include/core_cm7.h ****     For this, __FPU_PRESENT has to be checked prior to making use of FPU specific registers and fun
  75:Drivers/CMSIS/Include/core_cm7.h **** */
  76:Drivers/CMSIS/Include/core_cm7.h **** #if defined ( __CC_ARM )
  77:Drivers/CMSIS/Include/core_cm7.h ****   #if defined __TARGET_FPU_VFP
  78:Drivers/CMSIS/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  79:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
  80:Drivers/CMSIS/Include/core_cm7.h ****     #else
  81:Drivers/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
  82:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
  83:Drivers/CMSIS/Include/core_cm7.h ****     #endif
  84:Drivers/CMSIS/Include/core_cm7.h ****   #else
  85:Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
  86:Drivers/CMSIS/Include/core_cm7.h ****   #endif
  87:Drivers/CMSIS/Include/core_cm7.h **** 
  88:Drivers/CMSIS/Include/core_cm7.h **** #elif defined (__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  89:Drivers/CMSIS/Include/core_cm7.h ****   #if defined __ARM_PCS_VFP
  90:Drivers/CMSIS/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  91:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
  92:Drivers/CMSIS/Include/core_cm7.h ****     #else
  93:Drivers/CMSIS/Include/core_cm7.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
  94:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
  95:Drivers/CMSIS/Include/core_cm7.h ****     #endif
  96:Drivers/CMSIS/Include/core_cm7.h ****   #else
  97:Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
  98:Drivers/CMSIS/Include/core_cm7.h ****   #endif
  99:Drivers/CMSIS/Include/core_cm7.h **** 
 100:Drivers/CMSIS/Include/core_cm7.h **** #elif defined ( __GNUC__ )
 101:Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 102:Drivers/CMSIS/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 103:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
 104:Drivers/CMSIS/Include/core_cm7.h ****     #else
 105:Drivers/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 106:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
 107:Drivers/CMSIS/Include/core_cm7.h ****     #endif
 108:Drivers/CMSIS/Include/core_cm7.h ****   #else
 109:Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
 110:Drivers/CMSIS/Include/core_cm7.h ****   #endif
 111:Drivers/CMSIS/Include/core_cm7.h **** 
 112:Drivers/CMSIS/Include/core_cm7.h **** #elif defined ( __ICCARM__ )
 113:Drivers/CMSIS/Include/core_cm7.h ****   #if defined __ARMVFP__
 114:Drivers/CMSIS/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 115:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
 116:Drivers/CMSIS/Include/core_cm7.h ****     #else
 117:Drivers/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 118:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
 119:Drivers/CMSIS/Include/core_cm7.h ****     #endif
 120:Drivers/CMSIS/Include/core_cm7.h ****   #else
 121:Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
 122:Drivers/CMSIS/Include/core_cm7.h ****   #endif
 123:Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 50


 124:Drivers/CMSIS/Include/core_cm7.h **** #elif defined ( __TI_ARM__ )
 125:Drivers/CMSIS/Include/core_cm7.h ****   #if defined __TI_VFP_SUPPORT__
 126:Drivers/CMSIS/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 127:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
 128:Drivers/CMSIS/Include/core_cm7.h ****     #else
 129:Drivers/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 130:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
 131:Drivers/CMSIS/Include/core_cm7.h ****     #endif
 132:Drivers/CMSIS/Include/core_cm7.h ****   #else
 133:Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
 134:Drivers/CMSIS/Include/core_cm7.h ****   #endif
 135:Drivers/CMSIS/Include/core_cm7.h **** 
 136:Drivers/CMSIS/Include/core_cm7.h **** #elif defined ( __TASKING__ )
 137:Drivers/CMSIS/Include/core_cm7.h ****   #if defined __FPU_VFP__
 138:Drivers/CMSIS/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 139:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
 140:Drivers/CMSIS/Include/core_cm7.h ****     #else
 141:Drivers/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 142:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
 143:Drivers/CMSIS/Include/core_cm7.h ****     #endif
 144:Drivers/CMSIS/Include/core_cm7.h ****   #else
 145:Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
 146:Drivers/CMSIS/Include/core_cm7.h ****   #endif
 147:Drivers/CMSIS/Include/core_cm7.h **** 
 148:Drivers/CMSIS/Include/core_cm7.h **** #elif defined ( __CSMC__ )
 149:Drivers/CMSIS/Include/core_cm7.h ****   #if ( __CSMC__ & 0x400U)
 150:Drivers/CMSIS/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 151:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
 152:Drivers/CMSIS/Include/core_cm7.h ****     #else
 153:Drivers/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 154:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
 155:Drivers/CMSIS/Include/core_cm7.h ****     #endif
 156:Drivers/CMSIS/Include/core_cm7.h ****   #else
 157:Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
 158:Drivers/CMSIS/Include/core_cm7.h ****   #endif
 159:Drivers/CMSIS/Include/core_cm7.h **** 
 160:Drivers/CMSIS/Include/core_cm7.h **** #endif
 161:Drivers/CMSIS/Include/core_cm7.h **** 
 162:Drivers/CMSIS/Include/core_cm7.h **** #include "cmsis_compiler.h"               /* CMSIS compiler specific defines */
 163:Drivers/CMSIS/Include/core_cm7.h **** 
 164:Drivers/CMSIS/Include/core_cm7.h **** 
 165:Drivers/CMSIS/Include/core_cm7.h **** #ifdef __cplusplus
 166:Drivers/CMSIS/Include/core_cm7.h **** }
 167:Drivers/CMSIS/Include/core_cm7.h **** #endif
 168:Drivers/CMSIS/Include/core_cm7.h **** 
 169:Drivers/CMSIS/Include/core_cm7.h **** #endif /* __CORE_CM7_H_GENERIC */
 170:Drivers/CMSIS/Include/core_cm7.h **** 
 171:Drivers/CMSIS/Include/core_cm7.h **** #ifndef __CMSIS_GENERIC
 172:Drivers/CMSIS/Include/core_cm7.h **** 
 173:Drivers/CMSIS/Include/core_cm7.h **** #ifndef __CORE_CM7_H_DEPENDANT
 174:Drivers/CMSIS/Include/core_cm7.h **** #define __CORE_CM7_H_DEPENDANT
 175:Drivers/CMSIS/Include/core_cm7.h **** 
 176:Drivers/CMSIS/Include/core_cm7.h **** #ifdef __cplusplus
 177:Drivers/CMSIS/Include/core_cm7.h ****  extern "C" {
 178:Drivers/CMSIS/Include/core_cm7.h **** #endif
 179:Drivers/CMSIS/Include/core_cm7.h **** 
 180:Drivers/CMSIS/Include/core_cm7.h **** /* check device defines and use defaults */
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 51


 181:Drivers/CMSIS/Include/core_cm7.h **** #if defined __CHECK_DEVICE_DEFINES
 182:Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __CM7_REV
 183:Drivers/CMSIS/Include/core_cm7.h ****     #define __CM7_REV               0x0000U
 184:Drivers/CMSIS/Include/core_cm7.h ****     #warning "__CM7_REV not defined in device header file; using default!"
 185:Drivers/CMSIS/Include/core_cm7.h ****   #endif
 186:Drivers/CMSIS/Include/core_cm7.h **** 
 187:Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __FPU_PRESENT
 188:Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_PRESENT             0U
 189:Drivers/CMSIS/Include/core_cm7.h ****     #warning "__FPU_PRESENT not defined in device header file; using default!"
 190:Drivers/CMSIS/Include/core_cm7.h ****   #endif
 191:Drivers/CMSIS/Include/core_cm7.h **** 
 192:Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __MPU_PRESENT
 193:Drivers/CMSIS/Include/core_cm7.h ****     #define __MPU_PRESENT             0U
 194:Drivers/CMSIS/Include/core_cm7.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 195:Drivers/CMSIS/Include/core_cm7.h ****   #endif
 196:Drivers/CMSIS/Include/core_cm7.h **** 
 197:Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __ICACHE_PRESENT
 198:Drivers/CMSIS/Include/core_cm7.h ****     #define __ICACHE_PRESENT          0U
 199:Drivers/CMSIS/Include/core_cm7.h ****     #warning "__ICACHE_PRESENT not defined in device header file; using default!"
 200:Drivers/CMSIS/Include/core_cm7.h ****   #endif
 201:Drivers/CMSIS/Include/core_cm7.h **** 
 202:Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __DCACHE_PRESENT
 203:Drivers/CMSIS/Include/core_cm7.h ****     #define __DCACHE_PRESENT          0U
 204:Drivers/CMSIS/Include/core_cm7.h ****     #warning "__DCACHE_PRESENT not defined in device header file; using default!"
 205:Drivers/CMSIS/Include/core_cm7.h ****   #endif
 206:Drivers/CMSIS/Include/core_cm7.h **** 
 207:Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __DTCM_PRESENT
 208:Drivers/CMSIS/Include/core_cm7.h ****     #define __DTCM_PRESENT            0U
 209:Drivers/CMSIS/Include/core_cm7.h ****     #warning "__DTCM_PRESENT        not defined in device header file; using default!"
 210:Drivers/CMSIS/Include/core_cm7.h ****   #endif
 211:Drivers/CMSIS/Include/core_cm7.h **** 
 212:Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __NVIC_PRIO_BITS
 213:Drivers/CMSIS/Include/core_cm7.h ****     #define __NVIC_PRIO_BITS          3U
 214:Drivers/CMSIS/Include/core_cm7.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 215:Drivers/CMSIS/Include/core_cm7.h ****   #endif
 216:Drivers/CMSIS/Include/core_cm7.h **** 
 217:Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __Vendor_SysTickConfig
 218:Drivers/CMSIS/Include/core_cm7.h ****     #define __Vendor_SysTickConfig    0U
 219:Drivers/CMSIS/Include/core_cm7.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 220:Drivers/CMSIS/Include/core_cm7.h ****   #endif
 221:Drivers/CMSIS/Include/core_cm7.h **** #endif
 222:Drivers/CMSIS/Include/core_cm7.h **** 
 223:Drivers/CMSIS/Include/core_cm7.h **** /* IO definitions (access restrictions to peripheral registers) */
 224:Drivers/CMSIS/Include/core_cm7.h **** /**
 225:Drivers/CMSIS/Include/core_cm7.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 226:Drivers/CMSIS/Include/core_cm7.h **** 
 227:Drivers/CMSIS/Include/core_cm7.h ****     <strong>IO Type Qualifiers</strong> are used
 228:Drivers/CMSIS/Include/core_cm7.h ****     \li to specify the access to peripheral variables.
 229:Drivers/CMSIS/Include/core_cm7.h ****     \li for automatic generation of peripheral register debug information.
 230:Drivers/CMSIS/Include/core_cm7.h **** */
 231:Drivers/CMSIS/Include/core_cm7.h **** #ifdef __cplusplus
 232:Drivers/CMSIS/Include/core_cm7.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 233:Drivers/CMSIS/Include/core_cm7.h **** #else
 234:Drivers/CMSIS/Include/core_cm7.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 235:Drivers/CMSIS/Include/core_cm7.h **** #endif
 236:Drivers/CMSIS/Include/core_cm7.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 237:Drivers/CMSIS/Include/core_cm7.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 52


 238:Drivers/CMSIS/Include/core_cm7.h **** 
 239:Drivers/CMSIS/Include/core_cm7.h **** /* following defines should be used for structure members */
 240:Drivers/CMSIS/Include/core_cm7.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 241:Drivers/CMSIS/Include/core_cm7.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 242:Drivers/CMSIS/Include/core_cm7.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 243:Drivers/CMSIS/Include/core_cm7.h **** 
 244:Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group Cortex_M7 */
 245:Drivers/CMSIS/Include/core_cm7.h **** 
 246:Drivers/CMSIS/Include/core_cm7.h **** 
 247:Drivers/CMSIS/Include/core_cm7.h **** 
 248:Drivers/CMSIS/Include/core_cm7.h **** /*******************************************************************************
 249:Drivers/CMSIS/Include/core_cm7.h ****  *                 Register Abstraction
 250:Drivers/CMSIS/Include/core_cm7.h ****   Core Register contain:
 251:Drivers/CMSIS/Include/core_cm7.h ****   - Core Register
 252:Drivers/CMSIS/Include/core_cm7.h ****   - Core NVIC Register
 253:Drivers/CMSIS/Include/core_cm7.h ****   - Core SCB Register
 254:Drivers/CMSIS/Include/core_cm7.h ****   - Core SysTick Register
 255:Drivers/CMSIS/Include/core_cm7.h ****   - Core Debug Register
 256:Drivers/CMSIS/Include/core_cm7.h ****   - Core MPU Register
 257:Drivers/CMSIS/Include/core_cm7.h ****   - Core FPU Register
 258:Drivers/CMSIS/Include/core_cm7.h ****  ******************************************************************************/
 259:Drivers/CMSIS/Include/core_cm7.h **** /**
 260:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 261:Drivers/CMSIS/Include/core_cm7.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 262:Drivers/CMSIS/Include/core_cm7.h **** */
 263:Drivers/CMSIS/Include/core_cm7.h **** 
 264:Drivers/CMSIS/Include/core_cm7.h **** /**
 265:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup    CMSIS_core_register
 266:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 267:Drivers/CMSIS/Include/core_cm7.h ****   \brief      Core Register type definitions.
 268:Drivers/CMSIS/Include/core_cm7.h ****   @{
 269:Drivers/CMSIS/Include/core_cm7.h ****  */
 270:Drivers/CMSIS/Include/core_cm7.h **** 
 271:Drivers/CMSIS/Include/core_cm7.h **** /**
 272:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 273:Drivers/CMSIS/Include/core_cm7.h ****  */
 274:Drivers/CMSIS/Include/core_cm7.h **** typedef union
 275:Drivers/CMSIS/Include/core_cm7.h **** {
 276:Drivers/CMSIS/Include/core_cm7.h ****   struct
 277:Drivers/CMSIS/Include/core_cm7.h ****   {
 278:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t _reserved0:16;              /*!< bit:  0..15  Reserved */
 279:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 280:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t _reserved1:7;               /*!< bit: 20..26  Reserved */
 281:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 282:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 283:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 284:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 285:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 286:Drivers/CMSIS/Include/core_cm7.h ****   } b;                                   /*!< Structure used for bit  access */
 287:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t w;                            /*!< Type      used for word access */
 288:Drivers/CMSIS/Include/core_cm7.h **** } APSR_Type;
 289:Drivers/CMSIS/Include/core_cm7.h **** 
 290:Drivers/CMSIS/Include/core_cm7.h **** /* APSR Register Definitions */
 291:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 292:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 293:Drivers/CMSIS/Include/core_cm7.h **** 
 294:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 53


 295:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 296:Drivers/CMSIS/Include/core_cm7.h **** 
 297:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 298:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 299:Drivers/CMSIS/Include/core_cm7.h **** 
 300:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 301:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 302:Drivers/CMSIS/Include/core_cm7.h **** 
 303:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_Q_Pos                         27U                                            /*!< APSR
 304:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
 305:Drivers/CMSIS/Include/core_cm7.h **** 
 306:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_GE_Pos                        16U                                            /*!< APSR
 307:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_GE_Msk                        (0xFUL << APSR_GE_Pos)                         /*!< APSR
 308:Drivers/CMSIS/Include/core_cm7.h **** 
 309:Drivers/CMSIS/Include/core_cm7.h **** 
 310:Drivers/CMSIS/Include/core_cm7.h **** /**
 311:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 312:Drivers/CMSIS/Include/core_cm7.h ****  */
 313:Drivers/CMSIS/Include/core_cm7.h **** typedef union
 314:Drivers/CMSIS/Include/core_cm7.h **** {
 315:Drivers/CMSIS/Include/core_cm7.h ****   struct
 316:Drivers/CMSIS/Include/core_cm7.h ****   {
 317:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 318:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 319:Drivers/CMSIS/Include/core_cm7.h ****   } b;                                   /*!< Structure used for bit  access */
 320:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t w;                            /*!< Type      used for word access */
 321:Drivers/CMSIS/Include/core_cm7.h **** } IPSR_Type;
 322:Drivers/CMSIS/Include/core_cm7.h **** 
 323:Drivers/CMSIS/Include/core_cm7.h **** /* IPSR Register Definitions */
 324:Drivers/CMSIS/Include/core_cm7.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 325:Drivers/CMSIS/Include/core_cm7.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 326:Drivers/CMSIS/Include/core_cm7.h **** 
 327:Drivers/CMSIS/Include/core_cm7.h **** 
 328:Drivers/CMSIS/Include/core_cm7.h **** /**
 329:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 330:Drivers/CMSIS/Include/core_cm7.h ****  */
 331:Drivers/CMSIS/Include/core_cm7.h **** typedef union
 332:Drivers/CMSIS/Include/core_cm7.h **** {
 333:Drivers/CMSIS/Include/core_cm7.h ****   struct
 334:Drivers/CMSIS/Include/core_cm7.h ****   {
 335:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 336:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t _reserved0:1;               /*!< bit:      9  Reserved */
 337:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ICI_IT_1:6;                 /*!< bit: 10..15  ICI/IT part 1 */
 338:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 339:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t _reserved1:4;               /*!< bit: 20..23  Reserved */
 340:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit */
 341:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ICI_IT_2:2;                 /*!< bit: 25..26  ICI/IT part 2 */
 342:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 343:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 344:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 345:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 346:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 347:Drivers/CMSIS/Include/core_cm7.h ****   } b;                                   /*!< Structure used for bit  access */
 348:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t w;                            /*!< Type      used for word access */
 349:Drivers/CMSIS/Include/core_cm7.h **** } xPSR_Type;
 350:Drivers/CMSIS/Include/core_cm7.h **** 
 351:Drivers/CMSIS/Include/core_cm7.h **** /* xPSR Register Definitions */
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 54


 352:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 353:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 354:Drivers/CMSIS/Include/core_cm7.h **** 
 355:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 356:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 357:Drivers/CMSIS/Include/core_cm7.h **** 
 358:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 359:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 360:Drivers/CMSIS/Include/core_cm7.h **** 
 361:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 362:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 363:Drivers/CMSIS/Include/core_cm7.h **** 
 364:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_Q_Pos                         27U                                            /*!< xPSR
 365:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
 366:Drivers/CMSIS/Include/core_cm7.h **** 
 367:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_ICI_IT_2_Pos                  25U                                            /*!< xPSR
 368:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_ICI_IT_2_Msk                  (3UL << xPSR_ICI_IT_2_Pos)                     /*!< xPSR
 369:Drivers/CMSIS/Include/core_cm7.h **** 
 370:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 371:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 372:Drivers/CMSIS/Include/core_cm7.h **** 
 373:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_GE_Pos                        16U                                            /*!< xPSR
 374:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_GE_Msk                        (0xFUL << xPSR_GE_Pos)                         /*!< xPSR
 375:Drivers/CMSIS/Include/core_cm7.h **** 
 376:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_ICI_IT_1_Pos                  10U                                            /*!< xPSR
 377:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_ICI_IT_1_Msk                  (0x3FUL << xPSR_ICI_IT_1_Pos)                  /*!< xPSR
 378:Drivers/CMSIS/Include/core_cm7.h **** 
 379:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 380:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 381:Drivers/CMSIS/Include/core_cm7.h **** 
 382:Drivers/CMSIS/Include/core_cm7.h **** 
 383:Drivers/CMSIS/Include/core_cm7.h **** /**
 384:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Union type to access the Control Registers (CONTROL).
 385:Drivers/CMSIS/Include/core_cm7.h ****  */
 386:Drivers/CMSIS/Include/core_cm7.h **** typedef union
 387:Drivers/CMSIS/Include/core_cm7.h **** {
 388:Drivers/CMSIS/Include/core_cm7.h ****   struct
 389:Drivers/CMSIS/Include/core_cm7.h ****   {
 390:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 391:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 392:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t FPCA:1;                     /*!< bit:      2  FP extension active flag */
 393:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t _reserved0:29;              /*!< bit:  3..31  Reserved */
 394:Drivers/CMSIS/Include/core_cm7.h ****   } b;                                   /*!< Structure used for bit  access */
 395:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t w;                            /*!< Type      used for word access */
 396:Drivers/CMSIS/Include/core_cm7.h **** } CONTROL_Type;
 397:Drivers/CMSIS/Include/core_cm7.h **** 
 398:Drivers/CMSIS/Include/core_cm7.h **** /* CONTROL Register Definitions */
 399:Drivers/CMSIS/Include/core_cm7.h **** #define CONTROL_FPCA_Pos                    2U                                            /*!< CONT
 400:Drivers/CMSIS/Include/core_cm7.h **** #define CONTROL_FPCA_Msk                   (1UL << CONTROL_FPCA_Pos)                      /*!< CONT
 401:Drivers/CMSIS/Include/core_cm7.h **** 
 402:Drivers/CMSIS/Include/core_cm7.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 403:Drivers/CMSIS/Include/core_cm7.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 404:Drivers/CMSIS/Include/core_cm7.h **** 
 405:Drivers/CMSIS/Include/core_cm7.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 406:Drivers/CMSIS/Include/core_cm7.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 407:Drivers/CMSIS/Include/core_cm7.h **** 
 408:Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_CORE */
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 55


 409:Drivers/CMSIS/Include/core_cm7.h **** 
 410:Drivers/CMSIS/Include/core_cm7.h **** 
 411:Drivers/CMSIS/Include/core_cm7.h **** /**
 412:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup    CMSIS_core_register
 413:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 414:Drivers/CMSIS/Include/core_cm7.h ****   \brief      Type definitions for the NVIC Registers
 415:Drivers/CMSIS/Include/core_cm7.h ****   @{
 416:Drivers/CMSIS/Include/core_cm7.h ****  */
 417:Drivers/CMSIS/Include/core_cm7.h **** 
 418:Drivers/CMSIS/Include/core_cm7.h **** /**
 419:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 420:Drivers/CMSIS/Include/core_cm7.h ****  */
 421:Drivers/CMSIS/Include/core_cm7.h **** typedef struct
 422:Drivers/CMSIS/Include/core_cm7.h **** {
 423:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ISER[8U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 424:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[24U];
 425:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ICER[8U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 426:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RSERVED1[24U];
 427:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ISPR[8U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 428:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED2[24U];
 429:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ICPR[8U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 430:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED3[24U];
 431:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t IABR[8U];               /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register */
 432:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED4[56U];
 433:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint8_t  IP[240U];               /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 434:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED5[644U];
 435:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 436:Drivers/CMSIS/Include/core_cm7.h **** }  NVIC_Type;
 437:Drivers/CMSIS/Include/core_cm7.h **** 
 438:Drivers/CMSIS/Include/core_cm7.h **** /* Software Triggered Interrupt Register Definitions */
 439:Drivers/CMSIS/Include/core_cm7.h **** #define NVIC_STIR_INTID_Pos                 0U                                         /*!< STIR: I
 440:Drivers/CMSIS/Include/core_cm7.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
 441:Drivers/CMSIS/Include/core_cm7.h **** 
 442:Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_NVIC */
 443:Drivers/CMSIS/Include/core_cm7.h **** 
 444:Drivers/CMSIS/Include/core_cm7.h **** 
 445:Drivers/CMSIS/Include/core_cm7.h **** /**
 446:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
 447:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 448:Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the System Control Block Registers
 449:Drivers/CMSIS/Include/core_cm7.h ****   @{
 450:Drivers/CMSIS/Include/core_cm7.h ****  */
 451:Drivers/CMSIS/Include/core_cm7.h **** 
 452:Drivers/CMSIS/Include/core_cm7.h **** /**
 453:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the System Control Block (SCB).
 454:Drivers/CMSIS/Include/core_cm7.h ****  */
 455:Drivers/CMSIS/Include/core_cm7.h **** typedef struct
 456:Drivers/CMSIS/Include/core_cm7.h **** {
 457:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 458:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 459:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 460:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 461:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 462:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 463:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint8_t  SHPR[12U];              /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 464:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 465:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CFSR;                   /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 56


 466:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t HFSR;                   /*!< Offset: 0x02C (R/W)  HardFault Status Register */
 467:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t DFSR;                   /*!< Offset: 0x030 (R/W)  Debug Fault Status Register */
 468:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t MMFAR;                  /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 469:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t BFAR;                   /*!< Offset: 0x038 (R/W)  BusFault Address Register */
 470:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t AFSR;                   /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 471:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ID_PFR[2U];             /*!< Offset: 0x040 (R/ )  Processor Feature Register */
 472:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ID_DFR;                 /*!< Offset: 0x048 (R/ )  Debug Feature Register */
 473:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ID_AFR;                 /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register */
 474:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ID_MFR[4U];             /*!< Offset: 0x050 (R/ )  Memory Model Feature Register */
 475:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ID_ISAR[5U];            /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 476:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[1U];
 477:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CLIDR;                  /*!< Offset: 0x078 (R/ )  Cache Level ID register */
 478:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CTR;                    /*!< Offset: 0x07C (R/ )  Cache Type register */
 479:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CCSIDR;                 /*!< Offset: 0x080 (R/ )  Cache Size ID Register */
 480:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CSSELR;                 /*!< Offset: 0x084 (R/W)  Cache Size Selection Register */
 481:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CPACR;                  /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 482:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED3[93U];
 483:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0x200 ( /W)  Software Triggered Interrupt Reg
 484:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED4[15U];
 485:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR0;                  /*!< Offset: 0x240 (R/ )  Media and VFP Feature Register 0
 486:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR1;                  /*!< Offset: 0x244 (R/ )  Media and VFP Feature Register 1
 487:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR2;                  /*!< Offset: 0x248 (R/ )  Media and VFP Feature Register 2
 488:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED5[1U];
 489:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t ICIALLU;                /*!< Offset: 0x250 ( /W)  I-Cache Invalidate All to PoU */
 490:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED6[1U];
 491:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t ICIMVAU;                /*!< Offset: 0x258 ( /W)  I-Cache Invalidate by MVA to PoU
 492:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCIMVAC;                /*!< Offset: 0x25C ( /W)  D-Cache Invalidate by MVA to PoC
 493:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCISW;                  /*!< Offset: 0x260 ( /W)  D-Cache Invalidate by Set-way */
 494:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCCMVAU;                /*!< Offset: 0x264 ( /W)  D-Cache Clean by MVA to PoU */
 495:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCCMVAC;                /*!< Offset: 0x268 ( /W)  D-Cache Clean by MVA to PoC */
 496:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCCSW;                  /*!< Offset: 0x26C ( /W)  D-Cache Clean by Set-way */
 497:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCCIMVAC;               /*!< Offset: 0x270 ( /W)  D-Cache Clean and Invalidate by 
 498:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCCISW;                 /*!< Offset: 0x274 ( /W)  D-Cache Clean and Invalidate by 
 499:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED7[6U];
 500:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ITCMCR;                 /*!< Offset: 0x290 (R/W)  Instruction Tightly-Coupled Memo
 501:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t DTCMCR;                 /*!< Offset: 0x294 (R/W)  Data Tightly-Coupled Memory Cont
 502:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t AHBPCR;                 /*!< Offset: 0x298 (R/W)  AHBP Control Register */
 503:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CACR;                   /*!< Offset: 0x29C (R/W)  L1 Cache Control Register */
 504:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t AHBSCR;                 /*!< Offset: 0x2A0 (R/W)  AHB Slave Control Register */
 505:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED8[1U];
 506:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ABFSR;                  /*!< Offset: 0x2A8 (R/W)  Auxiliary Bus Fault Status Regis
 507:Drivers/CMSIS/Include/core_cm7.h **** } SCB_Type;
 508:Drivers/CMSIS/Include/core_cm7.h **** 
 509:Drivers/CMSIS/Include/core_cm7.h **** /* SCB CPUID Register Definitions */
 510:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 511:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 512:Drivers/CMSIS/Include/core_cm7.h **** 
 513:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 514:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 515:Drivers/CMSIS/Include/core_cm7.h **** 
 516:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 517:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 518:Drivers/CMSIS/Include/core_cm7.h **** 
 519:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 520:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 521:Drivers/CMSIS/Include/core_cm7.h **** 
 522:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 57


 523:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 524:Drivers/CMSIS/Include/core_cm7.h **** 
 525:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Interrupt Control State Register Definitions */
 526:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 527:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 528:Drivers/CMSIS/Include/core_cm7.h **** 
 529:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 530:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 531:Drivers/CMSIS/Include/core_cm7.h **** 
 532:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 533:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 534:Drivers/CMSIS/Include/core_cm7.h **** 
 535:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 536:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 537:Drivers/CMSIS/Include/core_cm7.h **** 
 538:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 539:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 540:Drivers/CMSIS/Include/core_cm7.h **** 
 541:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 542:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 543:Drivers/CMSIS/Include/core_cm7.h **** 
 544:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 545:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 546:Drivers/CMSIS/Include/core_cm7.h **** 
 547:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 548:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 549:Drivers/CMSIS/Include/core_cm7.h **** 
 550:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_RETTOBASE_Pos             11U                                            /*!< SCB 
 551:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 552:Drivers/CMSIS/Include/core_cm7.h **** 
 553:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 554:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 555:Drivers/CMSIS/Include/core_cm7.h **** 
 556:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Vector Table Offset Register Definitions */
 557:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 558:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 559:Drivers/CMSIS/Include/core_cm7.h **** 
 560:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 561:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 562:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 563:Drivers/CMSIS/Include/core_cm7.h **** 
 564:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 565:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 566:Drivers/CMSIS/Include/core_cm7.h **** 
 567:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 568:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 569:Drivers/CMSIS/Include/core_cm7.h **** 
 570:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_PRIGROUP_Pos              8U                                            /*!< SCB 
 571:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 572:Drivers/CMSIS/Include/core_cm7.h **** 
 573:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 574:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 575:Drivers/CMSIS/Include/core_cm7.h **** 
 576:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 577:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 578:Drivers/CMSIS/Include/core_cm7.h **** 
 579:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTRESET_Pos             0U                                            /*!< SCB 
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 58


 580:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/)           /*!< SCB 
 581:Drivers/CMSIS/Include/core_cm7.h **** 
 582:Drivers/CMSIS/Include/core_cm7.h **** /* SCB System Control Register Definitions */
 583:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 584:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 585:Drivers/CMSIS/Include/core_cm7.h **** 
 586:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 587:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 588:Drivers/CMSIS/Include/core_cm7.h **** 
 589:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 590:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 591:Drivers/CMSIS/Include/core_cm7.h **** 
 592:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Configuration Control Register Definitions */
 593:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_BP_Pos                      18U                                           /*!< SCB 
 594:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_BP_Msk                     (1UL << SCB_CCR_BP_Pos)                        /*!< SCB 
 595:Drivers/CMSIS/Include/core_cm7.h **** 
 596:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_IC_Pos                      17U                                           /*!< SCB 
 597:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_IC_Msk                     (1UL << SCB_CCR_IC_Pos)                        /*!< SCB 
 598:Drivers/CMSIS/Include/core_cm7.h **** 
 599:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_DC_Pos                      16U                                           /*!< SCB 
 600:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_DC_Msk                     (1UL << SCB_CCR_DC_Pos)                        /*!< SCB 
 601:Drivers/CMSIS/Include/core_cm7.h **** 
 602:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 603:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 604:Drivers/CMSIS/Include/core_cm7.h **** 
 605:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_BFHFNMIGN_Pos               8U                                            /*!< SCB 
 606:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 607:Drivers/CMSIS/Include/core_cm7.h **** 
 608:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_DIV_0_TRP_Pos               4U                                            /*!< SCB 
 609:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 610:Drivers/CMSIS/Include/core_cm7.h **** 
 611:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 612:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 613:Drivers/CMSIS/Include/core_cm7.h **** 
 614:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_USERSETMPEND_Pos            1U                                            /*!< SCB 
 615:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 616:Drivers/CMSIS/Include/core_cm7.h **** 
 617:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0U                                            /*!< SCB 
 618:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/)        /*!< SCB 
 619:Drivers/CMSIS/Include/core_cm7.h **** 
 620:Drivers/CMSIS/Include/core_cm7.h **** /* SCB System Handler Control and State Register Definitions */
 621:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18U                                            /*!< SCB 
 622:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 623:Drivers/CMSIS/Include/core_cm7.h **** 
 624:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17U                                            /*!< SCB 
 625:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 626:Drivers/CMSIS/Include/core_cm7.h **** 
 627:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16U                                            /*!< SCB 
 628:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 629:Drivers/CMSIS/Include/core_cm7.h **** 
 630:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 631:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 632:Drivers/CMSIS/Include/core_cm7.h **** 
 633:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14U                                            /*!< SCB 
 634:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 635:Drivers/CMSIS/Include/core_cm7.h **** 
 636:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13U                                            /*!< SCB 
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 59


 637:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 638:Drivers/CMSIS/Include/core_cm7.h **** 
 639:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12U                                            /*!< SCB 
 640:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 641:Drivers/CMSIS/Include/core_cm7.h **** 
 642:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11U                                            /*!< SCB 
 643:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 644:Drivers/CMSIS/Include/core_cm7.h **** 
 645:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_PENDSVACT_Pos            10U                                            /*!< SCB 
 646:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 647:Drivers/CMSIS/Include/core_cm7.h **** 
 648:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MONITORACT_Pos            8U                                            /*!< SCB 
 649:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 650:Drivers/CMSIS/Include/core_cm7.h **** 
 651:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SVCALLACT_Pos             7U                                            /*!< SCB 
 652:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 653:Drivers/CMSIS/Include/core_cm7.h **** 
 654:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3U                                            /*!< SCB 
 655:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 656:Drivers/CMSIS/Include/core_cm7.h **** 
 657:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1U                                            /*!< SCB 
 658:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 659:Drivers/CMSIS/Include/core_cm7.h **** 
 660:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0U                                            /*!< SCB 
 661:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
 662:Drivers/CMSIS/Include/core_cm7.h **** 
 663:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Configurable Fault Status Register Definitions */
 664:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_USGFAULTSR_Pos            16U                                            /*!< SCB 
 665:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 666:Drivers/CMSIS/Include/core_cm7.h **** 
 667:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8U                                            /*!< SCB 
 668:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 669:Drivers/CMSIS/Include/core_cm7.h **** 
 670:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0U                                            /*!< SCB 
 671:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 672:Drivers/CMSIS/Include/core_cm7.h **** 
 673:Drivers/CMSIS/Include/core_cm7.h **** /* MemManage Fault Status Register (part of SCB Configurable Fault Status Register) */
 674:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MMARVALID_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 7U)               /*!< SCB 
 675:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MMARVALID_Msk             (1UL << SCB_CFSR_MMARVALID_Pos)                /*!< SCB 
 676:Drivers/CMSIS/Include/core_cm7.h **** 
 677:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MLSPERR_Pos               (SCB_SHCSR_MEMFAULTACT_Pos + 5U)               /*!< SCB 
 678:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MLSPERR_Msk               (1UL << SCB_CFSR_MLSPERR_Pos)                  /*!< SCB 
 679:Drivers/CMSIS/Include/core_cm7.h **** 
 680:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MSTKERR_Pos               (SCB_SHCSR_MEMFAULTACT_Pos + 4U)               /*!< SCB 
 681:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MSTKERR_Msk               (1UL << SCB_CFSR_MSTKERR_Pos)                  /*!< SCB 
 682:Drivers/CMSIS/Include/core_cm7.h **** 
 683:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MUNSTKERR_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 3U)               /*!< SCB 
 684:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MUNSTKERR_Msk             (1UL << SCB_CFSR_MUNSTKERR_Pos)                /*!< SCB 
 685:Drivers/CMSIS/Include/core_cm7.h **** 
 686:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_DACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 1U)               /*!< SCB 
 687:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_DACCVIOL_Msk              (1UL << SCB_CFSR_DACCVIOL_Pos)                 /*!< SCB 
 688:Drivers/CMSIS/Include/core_cm7.h **** 
 689:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_IACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 0U)               /*!< SCB 
 690:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_IACCVIOL_Msk              (1UL /*<< SCB_CFSR_IACCVIOL_Pos*/)             /*!< SCB 
 691:Drivers/CMSIS/Include/core_cm7.h **** 
 692:Drivers/CMSIS/Include/core_cm7.h **** /* BusFault Status Register (part of SCB Configurable Fault Status Register) */
 693:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_BFARVALID_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 7U)                  /*!< SCB 
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 60


 694:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_BFARVALID_Msk            (1UL << SCB_CFSR_BFARVALID_Pos)                 /*!< SCB 
 695:Drivers/CMSIS/Include/core_cm7.h **** 
 696:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_LSPERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 5U)                  /*!< SCB 
 697:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_LSPERR_Msk               (1UL << SCB_CFSR_LSPERR_Pos)                    /*!< SCB 
 698:Drivers/CMSIS/Include/core_cm7.h **** 
 699:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_STKERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 4U)                  /*!< SCB 
 700:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_STKERR_Msk               (1UL << SCB_CFSR_STKERR_Pos)                    /*!< SCB 
 701:Drivers/CMSIS/Include/core_cm7.h **** 
 702:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_UNSTKERR_Pos             (SCB_CFSR_BUSFAULTSR_Pos + 3U)                  /*!< SCB 
 703:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_UNSTKERR_Msk             (1UL << SCB_CFSR_UNSTKERR_Pos)                  /*!< SCB 
 704:Drivers/CMSIS/Include/core_cm7.h **** 
 705:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_IMPRECISERR_Pos          (SCB_CFSR_BUSFAULTSR_Pos + 2U)                  /*!< SCB 
 706:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_IMPRECISERR_Msk          (1UL << SCB_CFSR_IMPRECISERR_Pos)               /*!< SCB 
 707:Drivers/CMSIS/Include/core_cm7.h **** 
 708:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_PRECISERR_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 1U)                  /*!< SCB 
 709:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_PRECISERR_Msk            (1UL << SCB_CFSR_PRECISERR_Pos)                 /*!< SCB 
 710:Drivers/CMSIS/Include/core_cm7.h **** 
 711:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_IBUSERR_Pos              (SCB_CFSR_BUSFAULTSR_Pos + 0U)                  /*!< SCB 
 712:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_IBUSERR_Msk              (1UL << SCB_CFSR_IBUSERR_Pos)                   /*!< SCB 
 713:Drivers/CMSIS/Include/core_cm7.h **** 
 714:Drivers/CMSIS/Include/core_cm7.h **** /* UsageFault Status Register (part of SCB Configurable Fault Status Register) */
 715:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_DIVBYZERO_Pos            (SCB_CFSR_USGFAULTSR_Pos + 9U)                  /*!< SCB 
 716:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_DIVBYZERO_Msk            (1UL << SCB_CFSR_DIVBYZERO_Pos)                 /*!< SCB 
 717:Drivers/CMSIS/Include/core_cm7.h **** 
 718:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_UNALIGNED_Pos            (SCB_CFSR_USGFAULTSR_Pos + 8U)                  /*!< SCB 
 719:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_UNALIGNED_Msk            (1UL << SCB_CFSR_UNALIGNED_Pos)                 /*!< SCB 
 720:Drivers/CMSIS/Include/core_cm7.h **** 
 721:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_NOCP_Pos                 (SCB_CFSR_USGFAULTSR_Pos + 3U)                  /*!< SCB 
 722:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_NOCP_Msk                 (1UL << SCB_CFSR_NOCP_Pos)                      /*!< SCB 
 723:Drivers/CMSIS/Include/core_cm7.h **** 
 724:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_INVPC_Pos                (SCB_CFSR_USGFAULTSR_Pos + 2U)                  /*!< SCB 
 725:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_INVPC_Msk                (1UL << SCB_CFSR_INVPC_Pos)                     /*!< SCB 
 726:Drivers/CMSIS/Include/core_cm7.h **** 
 727:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_INVSTATE_Pos             (SCB_CFSR_USGFAULTSR_Pos + 1U)                  /*!< SCB 
 728:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_INVSTATE_Msk             (1UL << SCB_CFSR_INVSTATE_Pos)                  /*!< SCB 
 729:Drivers/CMSIS/Include/core_cm7.h **** 
 730:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_UNDEFINSTR_Pos           (SCB_CFSR_USGFAULTSR_Pos + 0U)                  /*!< SCB 
 731:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_UNDEFINSTR_Msk           (1UL << SCB_CFSR_UNDEFINSTR_Pos)                /*!< SCB 
 732:Drivers/CMSIS/Include/core_cm7.h **** 
 733:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Hard Fault Status Register Definitions */
 734:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_DEBUGEVT_Pos              31U                                            /*!< SCB 
 735:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 736:Drivers/CMSIS/Include/core_cm7.h **** 
 737:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_FORCED_Pos                30U                                            /*!< SCB 
 738:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 739:Drivers/CMSIS/Include/core_cm7.h **** 
 740:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_VECTTBL_Pos                1U                                            /*!< SCB 
 741:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 742:Drivers/CMSIS/Include/core_cm7.h **** 
 743:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Debug Fault Status Register Definitions */
 744:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_EXTERNAL_Pos               4U                                            /*!< SCB 
 745:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 746:Drivers/CMSIS/Include/core_cm7.h **** 
 747:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_VCATCH_Pos                 3U                                            /*!< SCB 
 748:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 749:Drivers/CMSIS/Include/core_cm7.h **** 
 750:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_DWTTRAP_Pos                2U                                            /*!< SCB 
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 61


 751:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 752:Drivers/CMSIS/Include/core_cm7.h **** 
 753:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_BKPT_Pos                   1U                                            /*!< SCB 
 754:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 755:Drivers/CMSIS/Include/core_cm7.h **** 
 756:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_HALTED_Pos                 0U                                            /*!< SCB 
 757:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
 758:Drivers/CMSIS/Include/core_cm7.h **** 
 759:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Cache Level ID Register Definitions */
 760:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CLIDR_LOUU_Pos                 27U                                            /*!< SCB 
 761:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CLIDR_LOUU_Msk                 (7UL << SCB_CLIDR_LOUU_Pos)                    /*!< SCB 
 762:Drivers/CMSIS/Include/core_cm7.h **** 
 763:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CLIDR_LOC_Pos                  24U                                            /*!< SCB 
 764:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CLIDR_LOC_Msk                  (7UL << SCB_CLIDR_LOC_Pos)                     /*!< SCB 
 765:Drivers/CMSIS/Include/core_cm7.h **** 
 766:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Cache Type Register Definitions */
 767:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_FORMAT_Pos                 29U                                            /*!< SCB 
 768:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_FORMAT_Msk                 (7UL << SCB_CTR_FORMAT_Pos)                    /*!< SCB 
 769:Drivers/CMSIS/Include/core_cm7.h **** 
 770:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_CWG_Pos                    24U                                            /*!< SCB 
 771:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_CWG_Msk                    (0xFUL << SCB_CTR_CWG_Pos)                     /*!< SCB 
 772:Drivers/CMSIS/Include/core_cm7.h **** 
 773:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_ERG_Pos                    20U                                            /*!< SCB 
 774:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_ERG_Msk                    (0xFUL << SCB_CTR_ERG_Pos)                     /*!< SCB 
 775:Drivers/CMSIS/Include/core_cm7.h **** 
 776:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_DMINLINE_Pos               16U                                            /*!< SCB 
 777:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_DMINLINE_Msk               (0xFUL << SCB_CTR_DMINLINE_Pos)                /*!< SCB 
 778:Drivers/CMSIS/Include/core_cm7.h **** 
 779:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_IMINLINE_Pos                0U                                            /*!< SCB 
 780:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_IMINLINE_Msk               (0xFUL /*<< SCB_CTR_IMINLINE_Pos*/)            /*!< SCB 
 781:Drivers/CMSIS/Include/core_cm7.h **** 
 782:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Cache Size ID Register Definitions */
 783:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WT_Pos                  31U                                            /*!< SCB 
 784:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WT_Msk                  (1UL << SCB_CCSIDR_WT_Pos)                     /*!< SCB 
 785:Drivers/CMSIS/Include/core_cm7.h **** 
 786:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WB_Pos                  30U                                            /*!< SCB 
 787:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WB_Msk                  (1UL << SCB_CCSIDR_WB_Pos)                     /*!< SCB 
 788:Drivers/CMSIS/Include/core_cm7.h **** 
 789:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_RA_Pos                  29U                                            /*!< SCB 
 790:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_RA_Msk                  (1UL << SCB_CCSIDR_RA_Pos)                     /*!< SCB 
 791:Drivers/CMSIS/Include/core_cm7.h **** 
 792:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WA_Pos                  28U                                            /*!< SCB 
 793:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WA_Msk                  (1UL << SCB_CCSIDR_WA_Pos)                     /*!< SCB 
 794:Drivers/CMSIS/Include/core_cm7.h **** 
 795:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_NUMSETS_Pos             13U                                            /*!< SCB 
 796:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_NUMSETS_Msk             (0x7FFFUL << SCB_CCSIDR_NUMSETS_Pos)           /*!< SCB 
 797:Drivers/CMSIS/Include/core_cm7.h **** 
 798:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_ASSOCIATIVITY_Pos        3U                                            /*!< SCB 
 799:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_ASSOCIATIVITY_Msk       (0x3FFUL << SCB_CCSIDR_ASSOCIATIVITY_Pos)      /*!< SCB 
 800:Drivers/CMSIS/Include/core_cm7.h **** 
 801:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_LINESIZE_Pos             0U                                            /*!< SCB 
 802:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_LINESIZE_Msk            (7UL /*<< SCB_CCSIDR_LINESIZE_Pos*/)           /*!< SCB 
 803:Drivers/CMSIS/Include/core_cm7.h **** 
 804:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Cache Size Selection Register Definitions */
 805:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CSSELR_LEVEL_Pos                1U                                            /*!< SCB 
 806:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CSSELR_LEVEL_Msk               (7UL << SCB_CSSELR_LEVEL_Pos)                  /*!< SCB 
 807:Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 62


 808:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CSSELR_IND_Pos                  0U                                            /*!< SCB 
 809:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CSSELR_IND_Msk                 (1UL /*<< SCB_CSSELR_IND_Pos*/)                /*!< SCB 
 810:Drivers/CMSIS/Include/core_cm7.h **** 
 811:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Software Triggered Interrupt Register Definitions */
 812:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_STIR_INTID_Pos                  0U                                            /*!< SCB 
 813:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_STIR_INTID_Msk                 (0x1FFUL /*<< SCB_STIR_INTID_Pos*/)            /*!< SCB 
 814:Drivers/CMSIS/Include/core_cm7.h **** 
 815:Drivers/CMSIS/Include/core_cm7.h **** /* SCB D-Cache Invalidate by Set-way Register Definitions */
 816:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCISW_WAY_Pos                  30U                                            /*!< SCB 
 817:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCISW_WAY_Msk                  (3UL << SCB_DCISW_WAY_Pos)                     /*!< SCB 
 818:Drivers/CMSIS/Include/core_cm7.h **** 
 819:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCISW_SET_Pos                   5U                                            /*!< SCB 
 820:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCISW_SET_Msk                  (0x1FFUL << SCB_DCISW_SET_Pos)                 /*!< SCB 
 821:Drivers/CMSIS/Include/core_cm7.h **** 
 822:Drivers/CMSIS/Include/core_cm7.h **** /* SCB D-Cache Clean by Set-way Register Definitions */
 823:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCSW_WAY_Pos                  30U                                            /*!< SCB 
 824:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCSW_WAY_Msk                  (3UL << SCB_DCCSW_WAY_Pos)                     /*!< SCB 
 825:Drivers/CMSIS/Include/core_cm7.h **** 
 826:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCSW_SET_Pos                   5U                                            /*!< SCB 
 827:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCSW_SET_Msk                  (0x1FFUL << SCB_DCCSW_SET_Pos)                 /*!< SCB 
 828:Drivers/CMSIS/Include/core_cm7.h **** 
 829:Drivers/CMSIS/Include/core_cm7.h **** /* SCB D-Cache Clean and Invalidate by Set-way Register Definitions */
 830:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCISW_WAY_Pos                 30U                                            /*!< SCB 
 831:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCISW_WAY_Msk                 (3UL << SCB_DCCISW_WAY_Pos)                    /*!< SCB 
 832:Drivers/CMSIS/Include/core_cm7.h **** 
 833:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCISW_SET_Pos                  5U                                            /*!< SCB 
 834:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCISW_SET_Msk                 (0x1FFUL << SCB_DCCISW_SET_Pos)                /*!< SCB 
 835:Drivers/CMSIS/Include/core_cm7.h **** 
 836:Drivers/CMSIS/Include/core_cm7.h **** /* Instruction Tightly-Coupled Memory Control Register Definitions */
 837:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_SZ_Pos                   3U                                            /*!< SCB 
 838:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_SZ_Msk                  (0xFUL << SCB_ITCMCR_SZ_Pos)                   /*!< SCB 
 839:Drivers/CMSIS/Include/core_cm7.h **** 
 840:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_RETEN_Pos                2U                                            /*!< SCB 
 841:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_RETEN_Msk               (1UL << SCB_ITCMCR_RETEN_Pos)                  /*!< SCB 
 842:Drivers/CMSIS/Include/core_cm7.h **** 
 843:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_RMW_Pos                  1U                                            /*!< SCB 
 844:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_RMW_Msk                 (1UL << SCB_ITCMCR_RMW_Pos)                    /*!< SCB 
 845:Drivers/CMSIS/Include/core_cm7.h **** 
 846:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_EN_Pos                   0U                                            /*!< SCB 
 847:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_EN_Msk                  (1UL /*<< SCB_ITCMCR_EN_Pos*/)                 /*!< SCB 
 848:Drivers/CMSIS/Include/core_cm7.h **** 
 849:Drivers/CMSIS/Include/core_cm7.h **** /* Data Tightly-Coupled Memory Control Register Definitions */
 850:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_SZ_Pos                   3U                                            /*!< SCB 
 851:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_SZ_Msk                  (0xFUL << SCB_DTCMCR_SZ_Pos)                   /*!< SCB 
 852:Drivers/CMSIS/Include/core_cm7.h **** 
 853:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_RETEN_Pos                2U                                            /*!< SCB 
 854:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_RETEN_Msk               (1UL << SCB_DTCMCR_RETEN_Pos)                   /*!< SCB
 855:Drivers/CMSIS/Include/core_cm7.h **** 
 856:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_RMW_Pos                  1U                                            /*!< SCB 
 857:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_RMW_Msk                 (1UL << SCB_DTCMCR_RMW_Pos)                    /*!< SCB 
 858:Drivers/CMSIS/Include/core_cm7.h **** 
 859:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_EN_Pos                   0U                                            /*!< SCB 
 860:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_EN_Msk                  (1UL /*<< SCB_DTCMCR_EN_Pos*/)                 /*!< SCB 
 861:Drivers/CMSIS/Include/core_cm7.h **** 
 862:Drivers/CMSIS/Include/core_cm7.h **** /* AHBP Control Register Definitions */
 863:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBPCR_SZ_Pos                   1U                                            /*!< SCB 
 864:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBPCR_SZ_Msk                  (7UL << SCB_AHBPCR_SZ_Pos)                     /*!< SCB 
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 63


 865:Drivers/CMSIS/Include/core_cm7.h **** 
 866:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBPCR_EN_Pos                   0U                                            /*!< SCB 
 867:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBPCR_EN_Msk                  (1UL /*<< SCB_AHBPCR_EN_Pos*/)                 /*!< SCB 
 868:Drivers/CMSIS/Include/core_cm7.h **** 
 869:Drivers/CMSIS/Include/core_cm7.h **** /* L1 Cache Control Register Definitions */
 870:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CACR_FORCEWT_Pos                2U                                            /*!< SCB 
 871:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CACR_FORCEWT_Msk               (1UL << SCB_CACR_FORCEWT_Pos)                  /*!< SCB 
 872:Drivers/CMSIS/Include/core_cm7.h **** 
 873:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CACR_ECCEN_Pos                  1U                                            /*!< SCB 
 874:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CACR_ECCEN_Msk                 (1UL << SCB_CACR_ECCEN_Pos)                    /*!< SCB 
 875:Drivers/CMSIS/Include/core_cm7.h **** 
 876:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CACR_SIWT_Pos                   0U                                            /*!< SCB 
 877:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CACR_SIWT_Msk                  (1UL /*<< SCB_CACR_SIWT_Pos*/)                 /*!< SCB 
 878:Drivers/CMSIS/Include/core_cm7.h **** 
 879:Drivers/CMSIS/Include/core_cm7.h **** /* AHBS Control Register Definitions */
 880:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_INITCOUNT_Pos           11U                                            /*!< SCB 
 881:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_INITCOUNT_Msk           (0x1FUL << SCB_AHBPCR_INITCOUNT_Pos)           /*!< SCB 
 882:Drivers/CMSIS/Include/core_cm7.h **** 
 883:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_TPRI_Pos                 2U                                            /*!< SCB 
 884:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_TPRI_Msk                (0x1FFUL << SCB_AHBPCR_TPRI_Pos)               /*!< SCB 
 885:Drivers/CMSIS/Include/core_cm7.h **** 
 886:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_CTL_Pos                  0U                                            /*!< SCB 
 887:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_CTL_Msk                 (3UL /*<< SCB_AHBPCR_CTL_Pos*/)                /*!< SCB 
 888:Drivers/CMSIS/Include/core_cm7.h **** 
 889:Drivers/CMSIS/Include/core_cm7.h **** /* Auxiliary Bus Fault Status Register Definitions */
 890:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AXIMTYPE_Pos              8U                                            /*!< SCB 
 891:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AXIMTYPE_Msk             (3UL << SCB_ABFSR_AXIMTYPE_Pos)                /*!< SCB 
 892:Drivers/CMSIS/Include/core_cm7.h **** 
 893:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_EPPB_Pos                  4U                                            /*!< SCB 
 894:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_EPPB_Msk                 (1UL << SCB_ABFSR_EPPB_Pos)                    /*!< SCB 
 895:Drivers/CMSIS/Include/core_cm7.h **** 
 896:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AXIM_Pos                  3U                                            /*!< SCB 
 897:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AXIM_Msk                 (1UL << SCB_ABFSR_AXIM_Pos)                    /*!< SCB 
 898:Drivers/CMSIS/Include/core_cm7.h **** 
 899:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AHBP_Pos                  2U                                            /*!< SCB 
 900:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AHBP_Msk                 (1UL << SCB_ABFSR_AHBP_Pos)                    /*!< SCB 
 901:Drivers/CMSIS/Include/core_cm7.h **** 
 902:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_DTCM_Pos                  1U                                            /*!< SCB 
 903:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_DTCM_Msk                 (1UL << SCB_ABFSR_DTCM_Pos)                    /*!< SCB 
 904:Drivers/CMSIS/Include/core_cm7.h **** 
 905:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_ITCM_Pos                  0U                                            /*!< SCB 
 906:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_ITCM_Msk                 (1UL /*<< SCB_ABFSR_ITCM_Pos*/)                /*!< SCB 
 907:Drivers/CMSIS/Include/core_cm7.h **** 
 908:Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_SCB */
 909:Drivers/CMSIS/Include/core_cm7.h **** 
 910:Drivers/CMSIS/Include/core_cm7.h **** 
 911:Drivers/CMSIS/Include/core_cm7.h **** /**
 912:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
 913:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 914:Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the System Control and ID Register not in the SCB
 915:Drivers/CMSIS/Include/core_cm7.h ****   @{
 916:Drivers/CMSIS/Include/core_cm7.h ****  */
 917:Drivers/CMSIS/Include/core_cm7.h **** 
 918:Drivers/CMSIS/Include/core_cm7.h **** /**
 919:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the System Control and ID Register not in the SCB.
 920:Drivers/CMSIS/Include/core_cm7.h ****  */
 921:Drivers/CMSIS/Include/core_cm7.h **** typedef struct
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 64


 922:Drivers/CMSIS/Include/core_cm7.h **** {
 923:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[1U];
 924:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ICTR;                   /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 925:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ACTLR;                  /*!< Offset: 0x008 (R/W)  Auxiliary Control Register */
 926:Drivers/CMSIS/Include/core_cm7.h **** } SCnSCB_Type;
 927:Drivers/CMSIS/Include/core_cm7.h **** 
 928:Drivers/CMSIS/Include/core_cm7.h **** /* Interrupt Controller Type Register Definitions */
 929:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0U                                         /*!< ICTR: I
 930:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 931:Drivers/CMSIS/Include/core_cm7.h **** 
 932:Drivers/CMSIS/Include/core_cm7.h **** /* Auxiliary Control Register Definitions */
 933:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISITMATBFLUSH_Pos    12U                                         /*!< ACTLR: 
 934:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISITMATBFLUSH_Msk    (1UL << SCnSCB_ACTLR_DISITMATBFLUSH_Pos)    /*!< ACTLR: 
 935:Drivers/CMSIS/Include/core_cm7.h **** 
 936:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISRAMODE_Pos         11U                                         /*!< ACTLR: 
 937:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISRAMODE_Msk         (1UL << SCnSCB_ACTLR_DISRAMODE_Pos)         /*!< ACTLR: 
 938:Drivers/CMSIS/Include/core_cm7.h **** 
 939:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_FPEXCODIS_Pos         10U                                         /*!< ACTLR: 
 940:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_FPEXCODIS_Msk         (1UL << SCnSCB_ACTLR_FPEXCODIS_Pos)         /*!< ACTLR: 
 941:Drivers/CMSIS/Include/core_cm7.h **** 
 942:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2U                                         /*!< ACTLR: 
 943:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 944:Drivers/CMSIS/Include/core_cm7.h **** 
 945:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0U                                         /*!< ACTLR: 
 946:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/)    /*!< ACTLR: 
 947:Drivers/CMSIS/Include/core_cm7.h **** 
 948:Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_SCnotSCB */
 949:Drivers/CMSIS/Include/core_cm7.h **** 
 950:Drivers/CMSIS/Include/core_cm7.h **** 
 951:Drivers/CMSIS/Include/core_cm7.h **** /**
 952:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
 953:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 954:Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the System Timer Registers.
 955:Drivers/CMSIS/Include/core_cm7.h ****   @{
 956:Drivers/CMSIS/Include/core_cm7.h ****  */
 957:Drivers/CMSIS/Include/core_cm7.h **** 
 958:Drivers/CMSIS/Include/core_cm7.h **** /**
 959:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the System Timer (SysTick).
 960:Drivers/CMSIS/Include/core_cm7.h ****  */
 961:Drivers/CMSIS/Include/core_cm7.h **** typedef struct
 962:Drivers/CMSIS/Include/core_cm7.h **** {
 963:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 964:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 965:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 966:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 967:Drivers/CMSIS/Include/core_cm7.h **** } SysTick_Type;
 968:Drivers/CMSIS/Include/core_cm7.h **** 
 969:Drivers/CMSIS/Include/core_cm7.h **** /* SysTick Control / Status Register Definitions */
 970:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 971:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 972:Drivers/CMSIS/Include/core_cm7.h **** 
 973:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 974:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 975:Drivers/CMSIS/Include/core_cm7.h **** 
 976:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 977:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 978:Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 65


 979:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 980:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 981:Drivers/CMSIS/Include/core_cm7.h **** 
 982:Drivers/CMSIS/Include/core_cm7.h **** /* SysTick Reload Register Definitions */
 983:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 984:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 985:Drivers/CMSIS/Include/core_cm7.h **** 
 986:Drivers/CMSIS/Include/core_cm7.h **** /* SysTick Current Register Definitions */
 987:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 988:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 989:Drivers/CMSIS/Include/core_cm7.h **** 
 990:Drivers/CMSIS/Include/core_cm7.h **** /* SysTick Calibration Register Definitions */
 991:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 992:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 993:Drivers/CMSIS/Include/core_cm7.h **** 
 994:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 995:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 996:Drivers/CMSIS/Include/core_cm7.h **** 
 997:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 998:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 999:Drivers/CMSIS/Include/core_cm7.h **** 
1000:Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_SysTick */
1001:Drivers/CMSIS/Include/core_cm7.h **** 
1002:Drivers/CMSIS/Include/core_cm7.h **** 
1003:Drivers/CMSIS/Include/core_cm7.h **** /**
1004:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1005:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
1006:Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Instrumentation Trace Macrocell (ITM)
1007:Drivers/CMSIS/Include/core_cm7.h ****   @{
1008:Drivers/CMSIS/Include/core_cm7.h ****  */
1009:Drivers/CMSIS/Include/core_cm7.h **** 
1010:Drivers/CMSIS/Include/core_cm7.h **** /**
1011:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
1012:Drivers/CMSIS/Include/core_cm7.h ****  */
1013:Drivers/CMSIS/Include/core_cm7.h **** typedef struct
1014:Drivers/CMSIS/Include/core_cm7.h **** {
1015:Drivers/CMSIS/Include/core_cm7.h ****   __OM  union
1016:Drivers/CMSIS/Include/core_cm7.h ****   {
1017:Drivers/CMSIS/Include/core_cm7.h ****     __OM  uint8_t    u8;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit */
1018:Drivers/CMSIS/Include/core_cm7.h ****     __OM  uint16_t   u16;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit */
1019:Drivers/CMSIS/Include/core_cm7.h ****     __OM  uint32_t   u32;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit */
1020:Drivers/CMSIS/Include/core_cm7.h ****   }  PORT [32U];                         /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers */
1021:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[864U];
1022:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t TER;                    /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register */
1023:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED1[15U];
1024:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t TPR;                    /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register */
1025:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED2[15U];
1026:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t TCR;                    /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register */
1027:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED3[29U];
1028:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t IWR;                    /*!< Offset: 0xEF8 ( /W)  ITM Integration Write Register *
1029:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t IRR;                    /*!< Offset: 0xEFC (R/ )  ITM Integration Read Register */
1030:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t IMCR;                   /*!< Offset: 0xF00 (R/W)  ITM Integration Mode Control Reg
1031:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED4[43U];
1032:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register */
1033:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register */
1034:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED5[6U];
1035:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID4;                   /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 66


1036:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID5;                   /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
1037:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID6;                   /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
1038:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID7;                   /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
1039:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID0;                   /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
1040:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID1;                   /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
1041:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID2;                   /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
1042:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID3;                   /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
1043:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CID0;                   /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
1044:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CID1;                   /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
1045:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CID2;                   /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
1046:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CID3;                   /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
1047:Drivers/CMSIS/Include/core_cm7.h **** } ITM_Type;
1048:Drivers/CMSIS/Include/core_cm7.h **** 
1049:Drivers/CMSIS/Include/core_cm7.h **** /* ITM Trace Privilege Register Definitions */
1050:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TPR_PRIVMASK_Pos                0U                                            /*!< ITM 
1051:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFFFFFFFFUL /*<< ITM_TPR_PRIVMASK_Pos*/)     /*!< ITM 
1052:Drivers/CMSIS/Include/core_cm7.h **** 
1053:Drivers/CMSIS/Include/core_cm7.h **** /* ITM Trace Control Register Definitions */
1054:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_BUSY_Pos                   23U                                            /*!< ITM 
1055:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
1056:Drivers/CMSIS/Include/core_cm7.h **** 
1057:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TraceBusID_Pos             16U                                            /*!< ITM 
1058:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
1059:Drivers/CMSIS/Include/core_cm7.h **** 
1060:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_GTSFREQ_Pos                10U                                            /*!< ITM 
1061:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
1062:Drivers/CMSIS/Include/core_cm7.h **** 
1063:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TSPrescale_Pos              8U                                            /*!< ITM 
1064:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
1065:Drivers/CMSIS/Include/core_cm7.h **** 
1066:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_SWOENA_Pos                  4U                                            /*!< ITM 
1067:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
1068:Drivers/CMSIS/Include/core_cm7.h **** 
1069:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_DWTENA_Pos                  3U                                            /*!< ITM 
1070:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
1071:Drivers/CMSIS/Include/core_cm7.h **** 
1072:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_SYNCENA_Pos                 2U                                            /*!< ITM 
1073:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
1074:Drivers/CMSIS/Include/core_cm7.h **** 
1075:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TSENA_Pos                   1U                                            /*!< ITM 
1076:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
1077:Drivers/CMSIS/Include/core_cm7.h **** 
1078:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_ITMENA_Pos                  0U                                            /*!< ITM 
1079:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
1080:Drivers/CMSIS/Include/core_cm7.h **** 
1081:Drivers/CMSIS/Include/core_cm7.h **** /* ITM Integration Write Register Definitions */
1082:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_IWR_ATVALIDM_Pos                0U                                            /*!< ITM 
1083:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_IWR_ATVALIDM_Msk               (1UL /*<< ITM_IWR_ATVALIDM_Pos*/)              /*!< ITM 
1084:Drivers/CMSIS/Include/core_cm7.h **** 
1085:Drivers/CMSIS/Include/core_cm7.h **** /* ITM Integration Read Register Definitions */
1086:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_IRR_ATREADYM_Pos                0U                                            /*!< ITM 
1087:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_IRR_ATREADYM_Msk               (1UL /*<< ITM_IRR_ATREADYM_Pos*/)              /*!< ITM 
1088:Drivers/CMSIS/Include/core_cm7.h **** 
1089:Drivers/CMSIS/Include/core_cm7.h **** /* ITM Integration Mode Control Register Definitions */
1090:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_IMCR_INTEGRATION_Pos            0U                                            /*!< ITM 
1091:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_IMCR_INTEGRATION_Msk           (1UL /*<< ITM_IMCR_INTEGRATION_Pos*/)          /*!< ITM 
1092:Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 67


1093:Drivers/CMSIS/Include/core_cm7.h **** /* ITM Lock Status Register Definitions */
1094:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_LSR_ByteAcc_Pos                 2U                                            /*!< ITM 
1095:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
1096:Drivers/CMSIS/Include/core_cm7.h **** 
1097:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_LSR_Access_Pos                  1U                                            /*!< ITM 
1098:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
1099:Drivers/CMSIS/Include/core_cm7.h **** 
1100:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_LSR_Present_Pos                 0U                                            /*!< ITM 
1101:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_LSR_Present_Msk                (1UL /*<< ITM_LSR_Present_Pos*/)               /*!< ITM 
1102:Drivers/CMSIS/Include/core_cm7.h **** 
1103:Drivers/CMSIS/Include/core_cm7.h **** /*@}*/ /* end of group CMSIS_ITM */
1104:Drivers/CMSIS/Include/core_cm7.h **** 
1105:Drivers/CMSIS/Include/core_cm7.h **** 
1106:Drivers/CMSIS/Include/core_cm7.h **** /**
1107:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1108:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
1109:Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Data Watchpoint and Trace (DWT)
1110:Drivers/CMSIS/Include/core_cm7.h ****   @{
1111:Drivers/CMSIS/Include/core_cm7.h ****  */
1112:Drivers/CMSIS/Include/core_cm7.h **** 
1113:Drivers/CMSIS/Include/core_cm7.h **** /**
1114:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
1115:Drivers/CMSIS/Include/core_cm7.h ****  */
1116:Drivers/CMSIS/Include/core_cm7.h **** typedef struct
1117:Drivers/CMSIS/Include/core_cm7.h **** {
1118:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  Control Register */
1119:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CYCCNT;                 /*!< Offset: 0x004 (R/W)  Cycle Count Register */
1120:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CPICNT;                 /*!< Offset: 0x008 (R/W)  CPI Count Register */
1121:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t EXCCNT;                 /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
1122:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t SLEEPCNT;               /*!< Offset: 0x010 (R/W)  Sleep Count Register */
1123:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t LSUCNT;                 /*!< Offset: 0x014 (R/W)  LSU Count Register */
1124:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FOLDCNT;                /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
1125:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PCSR;                   /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
1126:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t COMP0;                  /*!< Offset: 0x020 (R/W)  Comparator Register 0 */
1127:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t MASK0;                  /*!< Offset: 0x024 (R/W)  Mask Register 0 */
1128:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FUNCTION0;              /*!< Offset: 0x028 (R/W)  Function Register 0 */
1129:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[1U];
1130:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t COMP1;                  /*!< Offset: 0x030 (R/W)  Comparator Register 1 */
1131:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t MASK1;                  /*!< Offset: 0x034 (R/W)  Mask Register 1 */
1132:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FUNCTION1;              /*!< Offset: 0x038 (R/W)  Function Register 1 */
1133:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED1[1U];
1134:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t COMP2;                  /*!< Offset: 0x040 (R/W)  Comparator Register 2 */
1135:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t MASK2;                  /*!< Offset: 0x044 (R/W)  Mask Register 2 */
1136:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FUNCTION2;              /*!< Offset: 0x048 (R/W)  Function Register 2 */
1137:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED2[1U];
1138:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t COMP3;                  /*!< Offset: 0x050 (R/W)  Comparator Register 3 */
1139:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t MASK3;                  /*!< Offset: 0x054 (R/W)  Mask Register 3 */
1140:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FUNCTION3;              /*!< Offset: 0x058 (R/W)  Function Register 3 */
1141:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED3[981U];
1142:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 (  W)  Lock Access Register */
1143:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R  )  Lock Status Register */
1144:Drivers/CMSIS/Include/core_cm7.h **** } DWT_Type;
1145:Drivers/CMSIS/Include/core_cm7.h **** 
1146:Drivers/CMSIS/Include/core_cm7.h **** /* DWT Control Register Definitions */
1147:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NUMCOMP_Pos               28U                                         /*!< DWT CTR
1148:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
1149:Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 68


1150:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOTRCPKT_Pos              27U                                         /*!< DWT CTR
1151:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
1152:Drivers/CMSIS/Include/core_cm7.h **** 
1153:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26U                                         /*!< DWT CTR
1154:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
1155:Drivers/CMSIS/Include/core_cm7.h **** 
1156:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOCYCCNT_Pos              25U                                         /*!< DWT CTR
1157:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
1158:Drivers/CMSIS/Include/core_cm7.h **** 
1159:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOPRFCNT_Pos              24U                                         /*!< DWT CTR
1160:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
1161:Drivers/CMSIS/Include/core_cm7.h **** 
1162:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCEVTENA_Pos             22U                                         /*!< DWT CTR
1163:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
1164:Drivers/CMSIS/Include/core_cm7.h **** 
1165:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21U                                         /*!< DWT CTR
1166:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
1167:Drivers/CMSIS/Include/core_cm7.h **** 
1168:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_LSUEVTENA_Pos             20U                                         /*!< DWT CTR
1169:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
1170:Drivers/CMSIS/Include/core_cm7.h **** 
1171:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19U                                         /*!< DWT CTR
1172:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
1173:Drivers/CMSIS/Include/core_cm7.h **** 
1174:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_EXCEVTENA_Pos             18U                                         /*!< DWT CTR
1175:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
1176:Drivers/CMSIS/Include/core_cm7.h **** 
1177:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CPIEVTENA_Pos             17U                                         /*!< DWT CTR
1178:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
1179:Drivers/CMSIS/Include/core_cm7.h **** 
1180:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_EXCTRCENA_Pos             16U                                         /*!< DWT CTR
1181:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
1182:Drivers/CMSIS/Include/core_cm7.h **** 
1183:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12U                                         /*!< DWT CTR
1184:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
1185:Drivers/CMSIS/Include/core_cm7.h **** 
1186:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_SYNCTAP_Pos               10U                                         /*!< DWT CTR
1187:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
1188:Drivers/CMSIS/Include/core_cm7.h **** 
1189:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCTAP_Pos                 9U                                         /*!< DWT CTR
1190:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
1191:Drivers/CMSIS/Include/core_cm7.h **** 
1192:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_POSTINIT_Pos               5U                                         /*!< DWT CTR
1193:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
1194:Drivers/CMSIS/Include/core_cm7.h **** 
1195:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_POSTPRESET_Pos             1U                                         /*!< DWT CTR
1196:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
1197:Drivers/CMSIS/Include/core_cm7.h **** 
1198:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCCNTENA_Pos              0U                                         /*!< DWT CTR
1199:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
1200:Drivers/CMSIS/Include/core_cm7.h **** 
1201:Drivers/CMSIS/Include/core_cm7.h **** /* DWT CPI Count Register Definitions */
1202:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CPICNT_CPICNT_Pos               0U                                         /*!< DWT CPI
1203:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
1204:Drivers/CMSIS/Include/core_cm7.h **** 
1205:Drivers/CMSIS/Include/core_cm7.h **** /* DWT Exception Overhead Count Register Definitions */
1206:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_EXCCNT_EXCCNT_Pos               0U                                         /*!< DWT EXC
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 69


1207:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
1208:Drivers/CMSIS/Include/core_cm7.h **** 
1209:Drivers/CMSIS/Include/core_cm7.h **** /* DWT Sleep Count Register Definitions */
1210:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0U                                         /*!< DWT SLE
1211:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
1212:Drivers/CMSIS/Include/core_cm7.h **** 
1213:Drivers/CMSIS/Include/core_cm7.h **** /* DWT LSU Count Register Definitions */
1214:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_LSUCNT_LSUCNT_Pos               0U                                         /*!< DWT LSU
1215:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
1216:Drivers/CMSIS/Include/core_cm7.h **** 
1217:Drivers/CMSIS/Include/core_cm7.h **** /* DWT Folded-instruction Count Register Definitions */
1218:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0U                                         /*!< DWT FOL
1219:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
1220:Drivers/CMSIS/Include/core_cm7.h **** 
1221:Drivers/CMSIS/Include/core_cm7.h **** /* DWT Comparator Mask Register Definitions */
1222:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_MASK_MASK_Pos                   0U                                         /*!< DWT MAS
1223:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL /*<< DWT_MASK_MASK_Pos*/)           /*!< DWT MAS
1224:Drivers/CMSIS/Include/core_cm7.h **** 
1225:Drivers/CMSIS/Include/core_cm7.h **** /* DWT Comparator Function Register Definitions */
1226:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_MATCHED_Pos           24U                                         /*!< DWT FUN
1227:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
1228:Drivers/CMSIS/Include/core_cm7.h **** 
1229:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16U                                         /*!< DWT FUN
1230:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
1231:Drivers/CMSIS/Include/core_cm7.h **** 
1232:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12U                                         /*!< DWT FUN
1233:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
1234:Drivers/CMSIS/Include/core_cm7.h **** 
1235:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10U                                         /*!< DWT FUN
1236:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
1237:Drivers/CMSIS/Include/core_cm7.h **** 
1238:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9U                                         /*!< DWT FUN
1239:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
1240:Drivers/CMSIS/Include/core_cm7.h **** 
1241:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8U                                         /*!< DWT FUN
1242:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
1243:Drivers/CMSIS/Include/core_cm7.h **** 
1244:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7U                                         /*!< DWT FUN
1245:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
1246:Drivers/CMSIS/Include/core_cm7.h **** 
1247:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5U                                         /*!< DWT FUN
1248:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
1249:Drivers/CMSIS/Include/core_cm7.h **** 
1250:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_FUNCTION_Pos           0U                                         /*!< DWT FUN
1251:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/)    /*!< DWT FUN
1252:Drivers/CMSIS/Include/core_cm7.h **** 
1253:Drivers/CMSIS/Include/core_cm7.h **** /*@}*/ /* end of group CMSIS_DWT */
1254:Drivers/CMSIS/Include/core_cm7.h **** 
1255:Drivers/CMSIS/Include/core_cm7.h **** 
1256:Drivers/CMSIS/Include/core_cm7.h **** /**
1257:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1258:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_TPI     Trace Port Interface (TPI)
1259:Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Trace Port Interface (TPI)
1260:Drivers/CMSIS/Include/core_cm7.h ****   @{
1261:Drivers/CMSIS/Include/core_cm7.h ****  */
1262:Drivers/CMSIS/Include/core_cm7.h **** 
1263:Drivers/CMSIS/Include/core_cm7.h **** /**
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 70


1264:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Trace Port Interface Register (TPI).
1265:Drivers/CMSIS/Include/core_cm7.h ****  */
1266:Drivers/CMSIS/Include/core_cm7.h **** typedef struct
1267:Drivers/CMSIS/Include/core_cm7.h **** {
1268:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t SSPSR;                  /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
1269:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CSPSR;                  /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
1270:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[2U];
1271:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ACPR;                   /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
1272:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED1[55U];
1273:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t SPPR;                   /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
1274:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED2[131U];
1275:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t FFSR;                   /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
1276:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FFCR;                   /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
1277:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t FSCR;                   /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
1278:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED3[759U];
1279:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t TRIGGER;                /*!< Offset: 0xEE8 (R/ )  TRIGGER Register */
1280:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t FIFO0;                  /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1281:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ITATBCTR2;              /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
1282:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED4[1U];
1283:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ITATBCTR0;              /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
1284:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t FIFO1;                  /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1285:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ITCTRL;                 /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1286:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED5[39U];
1287:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CLAIMSET;               /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1288:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CLAIMCLR;               /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
1289:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED7[8U];
1290:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t DEVID;                  /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1291:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t DEVTYPE;                /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1292:Drivers/CMSIS/Include/core_cm7.h **** } TPI_Type;
1293:Drivers/CMSIS/Include/core_cm7.h **** 
1294:Drivers/CMSIS/Include/core_cm7.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1295:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ACPR_PRESCALER_Pos              0U                                         /*!< TPI ACP
1296:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< TPI ACP
1297:Drivers/CMSIS/Include/core_cm7.h **** 
1298:Drivers/CMSIS/Include/core_cm7.h **** /* TPI Selected Pin Protocol Register Definitions */
1299:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_SPPR_TXMODE_Pos                 0U                                         /*!< TPI SPP
1300:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
1301:Drivers/CMSIS/Include/core_cm7.h **** 
1302:Drivers/CMSIS/Include/core_cm7.h **** /* TPI Formatter and Flush Status Register Definitions */
1303:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FtNonStop_Pos              3U                                         /*!< TPI FFS
1304:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
1305:Drivers/CMSIS/Include/core_cm7.h **** 
1306:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_TCPresent_Pos              2U                                         /*!< TPI FFS
1307:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
1308:Drivers/CMSIS/Include/core_cm7.h **** 
1309:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FtStopped_Pos              1U                                         /*!< TPI FFS
1310:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
1311:Drivers/CMSIS/Include/core_cm7.h **** 
1312:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FlInProg_Pos               0U                                         /*!< TPI FFS
1313:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
1314:Drivers/CMSIS/Include/core_cm7.h **** 
1315:Drivers/CMSIS/Include/core_cm7.h **** /* TPI Formatter and Flush Control Register Definitions */
1316:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFCR_TrigIn_Pos                 8U                                         /*!< TPI FFC
1317:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
1318:Drivers/CMSIS/Include/core_cm7.h **** 
1319:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFCR_EnFCont_Pos                1U                                         /*!< TPI FFC
1320:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 71


1321:Drivers/CMSIS/Include/core_cm7.h **** 
1322:Drivers/CMSIS/Include/core_cm7.h **** /* TPI TRIGGER Register Definitions */
1323:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_TRIGGER_TRIGGER_Pos             0U                                         /*!< TPI TRI
1324:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
1325:Drivers/CMSIS/Include/core_cm7.h **** 
1326:Drivers/CMSIS/Include/core_cm7.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1327:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1328:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
1329:Drivers/CMSIS/Include/core_cm7.h **** 
1330:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1331:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1332:Drivers/CMSIS/Include/core_cm7.h **** 
1333:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1334:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1335:Drivers/CMSIS/Include/core_cm7.h **** 
1336:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1337:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1338:Drivers/CMSIS/Include/core_cm7.h **** 
1339:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM2_Pos                 16U                                         /*!< TPI FIF
1340:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
1341:Drivers/CMSIS/Include/core_cm7.h **** 
1342:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM1_Pos                  8U                                         /*!< TPI FIF
1343:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
1344:Drivers/CMSIS/Include/core_cm7.h **** 
1345:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM0_Pos                  0U                                         /*!< TPI FIF
1346:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
1347:Drivers/CMSIS/Include/core_cm7.h **** 
1348:Drivers/CMSIS/Include/core_cm7.h **** /* TPI ITATBCTR2 Register Definitions */
1349:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR2_ATREADY2_Pos          0U                                         /*!< TPI ITA
1350:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR2_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY2_Pos*/)   /*!< TPI ITA
1351:Drivers/CMSIS/Include/core_cm7.h **** 
1352:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR2_ATREADY1_Pos          0U                                         /*!< TPI ITA
1353:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR2_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY1_Pos*/)   /*!< TPI ITA
1354:Drivers/CMSIS/Include/core_cm7.h **** 
1355:Drivers/CMSIS/Include/core_cm7.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1356:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1357:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1358:Drivers/CMSIS/Include/core_cm7.h **** 
1359:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1360:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1361:Drivers/CMSIS/Include/core_cm7.h **** 
1362:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1363:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1364:Drivers/CMSIS/Include/core_cm7.h **** 
1365:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1366:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1367:Drivers/CMSIS/Include/core_cm7.h **** 
1368:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM2_Pos                 16U                                         /*!< TPI FIF
1369:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1370:Drivers/CMSIS/Include/core_cm7.h **** 
1371:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM1_Pos                  8U                                         /*!< TPI FIF
1372:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1373:Drivers/CMSIS/Include/core_cm7.h **** 
1374:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM0_Pos                  0U                                         /*!< TPI FIF
1375:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
1376:Drivers/CMSIS/Include/core_cm7.h **** 
1377:Drivers/CMSIS/Include/core_cm7.h **** /* TPI ITATBCTR0 Register Definitions */
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 72


1378:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR0_ATREADY2_Pos          0U                                         /*!< TPI ITA
1379:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR0_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY2_Pos*/)   /*!< TPI ITA
1380:Drivers/CMSIS/Include/core_cm7.h **** 
1381:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR0_ATREADY1_Pos          0U                                         /*!< TPI ITA
1382:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR0_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY1_Pos*/)   /*!< TPI ITA
1383:Drivers/CMSIS/Include/core_cm7.h **** 
1384:Drivers/CMSIS/Include/core_cm7.h **** /* TPI Integration Mode Control Register Definitions */
1385:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITCTRL_Mode_Pos                 0U                                         /*!< TPI ITC
1386:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITCTRL_Mode_Msk                (0x3UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
1387:Drivers/CMSIS/Include/core_cm7.h **** 
1388:Drivers/CMSIS/Include/core_cm7.h **** /* TPI DEVID Register Definitions */
1389:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_NRZVALID_Pos             11U                                         /*!< TPI DEV
1390:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1391:Drivers/CMSIS/Include/core_cm7.h **** 
1392:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_MANCVALID_Pos            10U                                         /*!< TPI DEV
1393:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1394:Drivers/CMSIS/Include/core_cm7.h **** 
1395:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_PTINVALID_Pos             9U                                         /*!< TPI DEV
1396:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1397:Drivers/CMSIS/Include/core_cm7.h **** 
1398:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_MinBufSz_Pos              6U                                         /*!< TPI DEV
1399:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1400:Drivers/CMSIS/Include/core_cm7.h **** 
1401:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_AsynClkIn_Pos             5U                                         /*!< TPI DEV
1402:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1403:Drivers/CMSIS/Include/core_cm7.h **** 
1404:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_NrTraceInput_Pos          0U                                         /*!< TPI DEV
1405:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1406:Drivers/CMSIS/Include/core_cm7.h **** 
1407:Drivers/CMSIS/Include/core_cm7.h **** /* TPI DEVTYPE Register Definitions */
1408:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVTYPE_SubType_Pos             4U                                         /*!< TPI DEV
1409:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1410:Drivers/CMSIS/Include/core_cm7.h **** 
1411:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVTYPE_MajorType_Pos           0U                                         /*!< TPI DEV
1412:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1413:Drivers/CMSIS/Include/core_cm7.h **** 
1414:Drivers/CMSIS/Include/core_cm7.h **** /*@}*/ /* end of group CMSIS_TPI */
1415:Drivers/CMSIS/Include/core_cm7.h **** 
1416:Drivers/CMSIS/Include/core_cm7.h **** 
1417:Drivers/CMSIS/Include/core_cm7.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1418:Drivers/CMSIS/Include/core_cm7.h **** /**
1419:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1420:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1421:Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
1422:Drivers/CMSIS/Include/core_cm7.h ****   @{
1423:Drivers/CMSIS/Include/core_cm7.h ****  */
1424:Drivers/CMSIS/Include/core_cm7.h **** 
1425:Drivers/CMSIS/Include/core_cm7.h **** /**
1426:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
1427:Drivers/CMSIS/Include/core_cm7.h ****  */
1428:Drivers/CMSIS/Include/core_cm7.h **** typedef struct
1429:Drivers/CMSIS/Include/core_cm7.h **** {
1430:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
1431:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
1432:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
1433:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1434:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RASR;                   /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 73


1435:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RBAR_A1;                /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1436:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RASR_A1;                /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1437:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RBAR_A2;                /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1438:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RASR_A2;                /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1439:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RBAR_A3;                /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1440:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RASR_A3;                /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1441:Drivers/CMSIS/Include/core_cm7.h **** } MPU_Type;
1442:Drivers/CMSIS/Include/core_cm7.h **** 
1443:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_RALIASES                  4U
1444:Drivers/CMSIS/Include/core_cm7.h **** 
1445:Drivers/CMSIS/Include/core_cm7.h **** /* MPU Type Register Definitions */
1446:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
1447:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1448:Drivers/CMSIS/Include/core_cm7.h **** 
1449:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
1450:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1451:Drivers/CMSIS/Include/core_cm7.h **** 
1452:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
1453:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
1454:Drivers/CMSIS/Include/core_cm7.h **** 
1455:Drivers/CMSIS/Include/core_cm7.h **** /* MPU Control Register Definitions */
1456:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
1457:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1458:Drivers/CMSIS/Include/core_cm7.h **** 
1459:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
1460:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1461:Drivers/CMSIS/Include/core_cm7.h **** 
1462:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
1463:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
1464:Drivers/CMSIS/Include/core_cm7.h **** 
1465:Drivers/CMSIS/Include/core_cm7.h **** /* MPU Region Number Register Definitions */
1466:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
1467:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
1468:Drivers/CMSIS/Include/core_cm7.h **** 
1469:Drivers/CMSIS/Include/core_cm7.h **** /* MPU Region Base Address Register Definitions */
1470:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_ADDR_Pos                   5U                                            /*!< MPU 
1471:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1472:Drivers/CMSIS/Include/core_cm7.h **** 
1473:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
1474:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1475:Drivers/CMSIS/Include/core_cm7.h **** 
1476:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
1477:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
1478:Drivers/CMSIS/Include/core_cm7.h **** 
1479:Drivers/CMSIS/Include/core_cm7.h **** /* MPU Region Attribute and Size Register Definitions */
1480:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
1481:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1482:Drivers/CMSIS/Include/core_cm7.h **** 
1483:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
1484:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1485:Drivers/CMSIS/Include/core_cm7.h **** 
1486:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
1487:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1488:Drivers/CMSIS/Include/core_cm7.h **** 
1489:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
1490:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1491:Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 74


1492:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
1493:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1494:Drivers/CMSIS/Include/core_cm7.h **** 
1495:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
1496:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1497:Drivers/CMSIS/Include/core_cm7.h **** 
1498:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
1499:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1500:Drivers/CMSIS/Include/core_cm7.h **** 
1501:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
1502:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1503:Drivers/CMSIS/Include/core_cm7.h **** 
1504:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
1505:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1506:Drivers/CMSIS/Include/core_cm7.h **** 
1507:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
1508:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
1509:Drivers/CMSIS/Include/core_cm7.h **** 
1510:Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_MPU */
1511:Drivers/CMSIS/Include/core_cm7.h **** #endif /* defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U) */
1512:Drivers/CMSIS/Include/core_cm7.h **** 
1513:Drivers/CMSIS/Include/core_cm7.h **** 
1514:Drivers/CMSIS/Include/core_cm7.h **** /**
1515:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1516:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_FPU     Floating Point Unit (FPU)
1517:Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Floating Point Unit (FPU)
1518:Drivers/CMSIS/Include/core_cm7.h ****   @{
1519:Drivers/CMSIS/Include/core_cm7.h ****  */
1520:Drivers/CMSIS/Include/core_cm7.h **** 
1521:Drivers/CMSIS/Include/core_cm7.h **** /**
1522:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Floating Point Unit (FPU).
1523:Drivers/CMSIS/Include/core_cm7.h ****  */
1524:Drivers/CMSIS/Include/core_cm7.h **** typedef struct
1525:Drivers/CMSIS/Include/core_cm7.h **** {
1526:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[1U];
1527:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FPCCR;                  /*!< Offset: 0x004 (R/W)  Floating-Point Context Control R
1528:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FPCAR;                  /*!< Offset: 0x008 (R/W)  Floating-Point Context Address R
1529:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FPDSCR;                 /*!< Offset: 0x00C (R/W)  Floating-Point Default Status Co
1530:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR0;                  /*!< Offset: 0x010 (R/ )  Media and FP Feature Register 0 
1531:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR1;                  /*!< Offset: 0x014 (R/ )  Media and FP Feature Register 1 
1532:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR2;                  /*!< Offset: 0x018 (R/ )  Media and FP Feature Register 2 
1533:Drivers/CMSIS/Include/core_cm7.h **** } FPU_Type;
1534:Drivers/CMSIS/Include/core_cm7.h **** 
1535:Drivers/CMSIS/Include/core_cm7.h **** /* Floating-Point Context Control Register Definitions */
1536:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_ASPEN_Pos                31U                                            /*!< FPCC
1537:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_ASPEN_Msk                (1UL << FPU_FPCCR_ASPEN_Pos)                   /*!< FPCC
1538:Drivers/CMSIS/Include/core_cm7.h **** 
1539:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_LSPEN_Pos                30U                                            /*!< FPCC
1540:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_LSPEN_Msk                (1UL << FPU_FPCCR_LSPEN_Pos)                   /*!< FPCC
1541:Drivers/CMSIS/Include/core_cm7.h **** 
1542:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_MONRDY_Pos                8U                                            /*!< FPCC
1543:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_MONRDY_Msk               (1UL << FPU_FPCCR_MONRDY_Pos)                  /*!< FPCC
1544:Drivers/CMSIS/Include/core_cm7.h **** 
1545:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_BFRDY_Pos                 6U                                            /*!< FPCC
1546:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_BFRDY_Msk                (1UL << FPU_FPCCR_BFRDY_Pos)                   /*!< FPCC
1547:Drivers/CMSIS/Include/core_cm7.h **** 
1548:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_MMRDY_Pos                 5U                                            /*!< FPCC
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 75


1549:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_MMRDY_Msk                (1UL << FPU_FPCCR_MMRDY_Pos)                   /*!< FPCC
1550:Drivers/CMSIS/Include/core_cm7.h **** 
1551:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_HFRDY_Pos                 4U                                            /*!< FPCC
1552:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_HFRDY_Msk                (1UL << FPU_FPCCR_HFRDY_Pos)                   /*!< FPCC
1553:Drivers/CMSIS/Include/core_cm7.h **** 
1554:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_THREAD_Pos                3U                                            /*!< FPCC
1555:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_THREAD_Msk               (1UL << FPU_FPCCR_THREAD_Pos)                  /*!< FPCC
1556:Drivers/CMSIS/Include/core_cm7.h **** 
1557:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_USER_Pos                  1U                                            /*!< FPCC
1558:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_USER_Msk                 (1UL << FPU_FPCCR_USER_Pos)                    /*!< FPCC
1559:Drivers/CMSIS/Include/core_cm7.h **** 
1560:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_LSPACT_Pos                0U                                            /*!< FPCC
1561:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_LSPACT_Msk               (1UL /*<< FPU_FPCCR_LSPACT_Pos*/)              /*!< FPCC
1562:Drivers/CMSIS/Include/core_cm7.h **** 
1563:Drivers/CMSIS/Include/core_cm7.h **** /* Floating-Point Context Address Register Definitions */
1564:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCAR_ADDRESS_Pos               3U                                            /*!< FPCA
1565:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCAR_ADDRESS_Msk              (0x1FFFFFFFUL << FPU_FPCAR_ADDRESS_Pos)        /*!< FPCA
1566:Drivers/CMSIS/Include/core_cm7.h **** 
1567:Drivers/CMSIS/Include/core_cm7.h **** /* Floating-Point Default Status Control Register Definitions */
1568:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_AHP_Pos                 26U                                            /*!< FPDS
1569:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_AHP_Msk                 (1UL << FPU_FPDSCR_AHP_Pos)                    /*!< FPDS
1570:Drivers/CMSIS/Include/core_cm7.h **** 
1571:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_DN_Pos                  25U                                            /*!< FPDS
1572:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_DN_Msk                  (1UL << FPU_FPDSCR_DN_Pos)                     /*!< FPDS
1573:Drivers/CMSIS/Include/core_cm7.h **** 
1574:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_FZ_Pos                  24U                                            /*!< FPDS
1575:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_FZ_Msk                  (1UL << FPU_FPDSCR_FZ_Pos)                     /*!< FPDS
1576:Drivers/CMSIS/Include/core_cm7.h **** 
1577:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_RMode_Pos               22U                                            /*!< FPDS
1578:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_RMode_Msk               (3UL << FPU_FPDSCR_RMode_Pos)                  /*!< FPDS
1579:Drivers/CMSIS/Include/core_cm7.h **** 
1580:Drivers/CMSIS/Include/core_cm7.h **** /* Media and FP Feature Register 0 Definitions */
1581:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_FP_rounding_modes_Pos    28U                                            /*!< MVFR
1582:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_FP_rounding_modes_Msk    (0xFUL << FPU_MVFR0_FP_rounding_modes_Pos)     /*!< MVFR
1583:Drivers/CMSIS/Include/core_cm7.h **** 
1584:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Short_vectors_Pos        24U                                            /*!< MVFR
1585:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Short_vectors_Msk        (0xFUL << FPU_MVFR0_Short_vectors_Pos)         /*!< MVFR
1586:Drivers/CMSIS/Include/core_cm7.h **** 
1587:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Square_root_Pos          20U                                            /*!< MVFR
1588:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Square_root_Msk          (0xFUL << FPU_MVFR0_Square_root_Pos)           /*!< MVFR
1589:Drivers/CMSIS/Include/core_cm7.h **** 
1590:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Divide_Pos               16U                                            /*!< MVFR
1591:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Divide_Msk               (0xFUL << FPU_MVFR0_Divide_Pos)                /*!< MVFR
1592:Drivers/CMSIS/Include/core_cm7.h **** 
1593:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_FP_excep_trapping_Pos    12U                                            /*!< MVFR
1594:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_FP_excep_trapping_Msk    (0xFUL << FPU_MVFR0_FP_excep_trapping_Pos)     /*!< MVFR
1595:Drivers/CMSIS/Include/core_cm7.h **** 
1596:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Double_precision_Pos      8U                                            /*!< MVFR
1597:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Double_precision_Msk     (0xFUL << FPU_MVFR0_Double_precision_Pos)      /*!< MVFR
1598:Drivers/CMSIS/Include/core_cm7.h **** 
1599:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Single_precision_Pos      4U                                            /*!< MVFR
1600:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Single_precision_Msk     (0xFUL << FPU_MVFR0_Single_precision_Pos)      /*!< MVFR
1601:Drivers/CMSIS/Include/core_cm7.h **** 
1602:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_A_SIMD_registers_Pos      0U                                            /*!< MVFR
1603:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_A_SIMD_registers_Msk     (0xFUL /*<< FPU_MVFR0_A_SIMD_registers_Pos*/)  /*!< MVFR
1604:Drivers/CMSIS/Include/core_cm7.h **** 
1605:Drivers/CMSIS/Include/core_cm7.h **** /* Media and FP Feature Register 1 Definitions */
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 76


1606:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FP_fused_MAC_Pos         28U                                            /*!< MVFR
1607:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FP_fused_MAC_Msk         (0xFUL << FPU_MVFR1_FP_fused_MAC_Pos)          /*!< MVFR
1608:Drivers/CMSIS/Include/core_cm7.h **** 
1609:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FP_HPFP_Pos              24U                                            /*!< MVFR
1610:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FP_HPFP_Msk              (0xFUL << FPU_MVFR1_FP_HPFP_Pos)               /*!< MVFR
1611:Drivers/CMSIS/Include/core_cm7.h **** 
1612:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_D_NaN_mode_Pos            4U                                            /*!< MVFR
1613:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_D_NaN_mode_Msk           (0xFUL << FPU_MVFR1_D_NaN_mode_Pos)            /*!< MVFR
1614:Drivers/CMSIS/Include/core_cm7.h **** 
1615:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FtZ_mode_Pos              0U                                            /*!< MVFR
1616:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FtZ_mode_Msk             (0xFUL /*<< FPU_MVFR1_FtZ_mode_Pos*/)          /*!< MVFR
1617:Drivers/CMSIS/Include/core_cm7.h **** 
1618:Drivers/CMSIS/Include/core_cm7.h **** /* Media and FP Feature Register 2 Definitions */
1619:Drivers/CMSIS/Include/core_cm7.h **** 
1620:Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_FPU */
1621:Drivers/CMSIS/Include/core_cm7.h **** 
1622:Drivers/CMSIS/Include/core_cm7.h **** 
1623:Drivers/CMSIS/Include/core_cm7.h **** /**
1624:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1625:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1626:Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Core Debug Registers
1627:Drivers/CMSIS/Include/core_cm7.h ****   @{
1628:Drivers/CMSIS/Include/core_cm7.h ****  */
1629:Drivers/CMSIS/Include/core_cm7.h **** 
1630:Drivers/CMSIS/Include/core_cm7.h **** /**
1631:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Core Debug Register (CoreDebug).
1632:Drivers/CMSIS/Include/core_cm7.h ****  */
1633:Drivers/CMSIS/Include/core_cm7.h **** typedef struct
1634:Drivers/CMSIS/Include/core_cm7.h **** {
1635:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t DHCSR;                  /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1636:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCRSR;                  /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1637:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t DCRDR;                  /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1638:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t DEMCR;                  /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1639:Drivers/CMSIS/Include/core_cm7.h **** } CoreDebug_Type;
1640:Drivers/CMSIS/Include/core_cm7.h **** 
1641:Drivers/CMSIS/Include/core_cm7.h **** /* Debug Halting Control and Status Register Definitions */
1642:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16U                                            /*!< Core
1643:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1644:Drivers/CMSIS/Include/core_cm7.h **** 
1645:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25U                                            /*!< Core
1646:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1647:Drivers/CMSIS/Include/core_cm7.h **** 
1648:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24U                                            /*!< Core
1649:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1650:Drivers/CMSIS/Include/core_cm7.h **** 
1651:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19U                                            /*!< Core
1652:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1653:Drivers/CMSIS/Include/core_cm7.h **** 
1654:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18U                                            /*!< Core
1655:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1656:Drivers/CMSIS/Include/core_cm7.h **** 
1657:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17U                                            /*!< Core
1658:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1659:Drivers/CMSIS/Include/core_cm7.h **** 
1660:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16U                                            /*!< Core
1661:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1662:Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 77


1663:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5U                                            /*!< Core
1664:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1665:Drivers/CMSIS/Include/core_cm7.h **** 
1666:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3U                                            /*!< Core
1667:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1668:Drivers/CMSIS/Include/core_cm7.h **** 
1669:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2U                                            /*!< Core
1670:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1671:Drivers/CMSIS/Include/core_cm7.h **** 
1672:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1U                                            /*!< Core
1673:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1674:Drivers/CMSIS/Include/core_cm7.h **** 
1675:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0U                                            /*!< Core
1676:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1677:Drivers/CMSIS/Include/core_cm7.h **** 
1678:Drivers/CMSIS/Include/core_cm7.h **** /* Debug Core Register Selector Register Definitions */
1679:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16U                                            /*!< Core
1680:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1681:Drivers/CMSIS/Include/core_cm7.h **** 
1682:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0U                                            /*!< Core
1683:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1684:Drivers/CMSIS/Include/core_cm7.h **** 
1685:Drivers/CMSIS/Include/core_cm7.h **** /* Debug Exception and Monitor Control Register Definitions */
1686:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24U                                            /*!< Core
1687:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1688:Drivers/CMSIS/Include/core_cm7.h **** 
1689:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19U                                            /*!< Core
1690:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1691:Drivers/CMSIS/Include/core_cm7.h **** 
1692:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18U                                            /*!< Core
1693:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1694:Drivers/CMSIS/Include/core_cm7.h **** 
1695:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17U                                            /*!< Core
1696:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1697:Drivers/CMSIS/Include/core_cm7.h **** 
1698:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16U                                            /*!< Core
1699:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1700:Drivers/CMSIS/Include/core_cm7.h **** 
1701:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10U                                            /*!< Core
1702:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1703:Drivers/CMSIS/Include/core_cm7.h **** 
1704:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9U                                            /*!< Core
1705:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1706:Drivers/CMSIS/Include/core_cm7.h **** 
1707:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8U                                            /*!< Core
1708:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1709:Drivers/CMSIS/Include/core_cm7.h **** 
1710:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7U                                            /*!< Core
1711:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1712:Drivers/CMSIS/Include/core_cm7.h **** 
1713:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6U                                            /*!< Core
1714:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1715:Drivers/CMSIS/Include/core_cm7.h **** 
1716:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5U                                            /*!< Core
1717:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1718:Drivers/CMSIS/Include/core_cm7.h **** 
1719:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4U                                            /*!< Core
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 78


1720:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1721:Drivers/CMSIS/Include/core_cm7.h **** 
1722:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0U                                            /*!< Core
1723:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
1724:Drivers/CMSIS/Include/core_cm7.h **** 
1725:Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_CoreDebug */
1726:Drivers/CMSIS/Include/core_cm7.h **** 
1727:Drivers/CMSIS/Include/core_cm7.h **** 
1728:Drivers/CMSIS/Include/core_cm7.h **** /**
1729:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup    CMSIS_core_register
1730:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
1731:Drivers/CMSIS/Include/core_cm7.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
1732:Drivers/CMSIS/Include/core_cm7.h ****   @{
1733:Drivers/CMSIS/Include/core_cm7.h ****  */
1734:Drivers/CMSIS/Include/core_cm7.h **** 
1735:Drivers/CMSIS/Include/core_cm7.h **** /**
1736:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
1737:Drivers/CMSIS/Include/core_cm7.h ****   \param[in] field  Name of the register bit field.
1738:Drivers/CMSIS/Include/core_cm7.h ****   \param[in] value  Value of the bit field. This parameter is interpreted as an uint32_t type.
1739:Drivers/CMSIS/Include/core_cm7.h ****   \return           Masked and shifted value.
1740:Drivers/CMSIS/Include/core_cm7.h **** */
1741:Drivers/CMSIS/Include/core_cm7.h **** #define _VAL2FLD(field, value)    (((uint32_t)(value) << field ## _Pos) & field ## _Msk)
1742:Drivers/CMSIS/Include/core_cm7.h **** 
1743:Drivers/CMSIS/Include/core_cm7.h **** /**
1744:Drivers/CMSIS/Include/core_cm7.h ****   \brief     Mask and shift a register value to extract a bit filed value.
1745:Drivers/CMSIS/Include/core_cm7.h ****   \param[in] field  Name of the register bit field.
1746:Drivers/CMSIS/Include/core_cm7.h ****   \param[in] value  Value of register. This parameter is interpreted as an uint32_t type.
1747:Drivers/CMSIS/Include/core_cm7.h ****   \return           Masked and shifted bit field value.
1748:Drivers/CMSIS/Include/core_cm7.h **** */
1749:Drivers/CMSIS/Include/core_cm7.h **** #define _FLD2VAL(field, value)    (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)
1750:Drivers/CMSIS/Include/core_cm7.h **** 
1751:Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_core_bitfield */
1752:Drivers/CMSIS/Include/core_cm7.h **** 
1753:Drivers/CMSIS/Include/core_cm7.h **** 
1754:Drivers/CMSIS/Include/core_cm7.h **** /**
1755:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup    CMSIS_core_register
1756:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup   CMSIS_core_base     Core Definitions
1757:Drivers/CMSIS/Include/core_cm7.h ****   \brief      Definitions for base addresses, unions, and structures.
1758:Drivers/CMSIS/Include/core_cm7.h ****   @{
1759:Drivers/CMSIS/Include/core_cm7.h ****  */
1760:Drivers/CMSIS/Include/core_cm7.h **** 
1761:Drivers/CMSIS/Include/core_cm7.h **** /* Memory mapping of Core Hardware */
1762:Drivers/CMSIS/Include/core_cm7.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1763:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address */
1764:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address */
1765:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address */
1766:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1767:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
1768:Drivers/CMSIS/Include/core_cm7.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
1769:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1770:Drivers/CMSIS/Include/core_cm7.h **** 
1771:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1772:Drivers/CMSIS/Include/core_cm7.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1773:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1774:Drivers/CMSIS/Include/core_cm7.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1775:Drivers/CMSIS/Include/core_cm7.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1776:Drivers/CMSIS/Include/core_cm7.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 79


1777:Drivers/CMSIS/Include/core_cm7.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1778:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1779:Drivers/CMSIS/Include/core_cm7.h **** 
1780:Drivers/CMSIS/Include/core_cm7.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1781:Drivers/CMSIS/Include/core_cm7.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit *
1782:Drivers/CMSIS/Include/core_cm7.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit *
1783:Drivers/CMSIS/Include/core_cm7.h **** #endif
1784:Drivers/CMSIS/Include/core_cm7.h **** 
1785:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_BASE            (SCS_BASE +  0x0F30UL)                    /*!< Floating Point Unit */
1786:Drivers/CMSIS/Include/core_cm7.h **** #define FPU                 ((FPU_Type       *)     FPU_BASE      )   /*!< Floating Point Unit */
1787:Drivers/CMSIS/Include/core_cm7.h **** 
1788:Drivers/CMSIS/Include/core_cm7.h **** /*@} */
1789:Drivers/CMSIS/Include/core_cm7.h **** 
1790:Drivers/CMSIS/Include/core_cm7.h **** 
1791:Drivers/CMSIS/Include/core_cm7.h **** 
1792:Drivers/CMSIS/Include/core_cm7.h **** /*******************************************************************************
1793:Drivers/CMSIS/Include/core_cm7.h ****  *                Hardware Abstraction Layer
1794:Drivers/CMSIS/Include/core_cm7.h ****   Core Function Interface contains:
1795:Drivers/CMSIS/Include/core_cm7.h ****   - Core NVIC Functions
1796:Drivers/CMSIS/Include/core_cm7.h ****   - Core SysTick Functions
1797:Drivers/CMSIS/Include/core_cm7.h ****   - Core Debug Functions
1798:Drivers/CMSIS/Include/core_cm7.h ****   - Core Register Access Functions
1799:Drivers/CMSIS/Include/core_cm7.h ****  ******************************************************************************/
1800:Drivers/CMSIS/Include/core_cm7.h **** /**
1801:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1802:Drivers/CMSIS/Include/core_cm7.h **** */
1803:Drivers/CMSIS/Include/core_cm7.h **** 
1804:Drivers/CMSIS/Include/core_cm7.h **** 
1805:Drivers/CMSIS/Include/core_cm7.h **** 
1806:Drivers/CMSIS/Include/core_cm7.h **** /* ##########################   NVIC functions  #################################### */
1807:Drivers/CMSIS/Include/core_cm7.h **** /**
1808:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_Core_FunctionInterface
1809:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1810:Drivers/CMSIS/Include/core_cm7.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
1811:Drivers/CMSIS/Include/core_cm7.h ****   @{
1812:Drivers/CMSIS/Include/core_cm7.h ****  */
1813:Drivers/CMSIS/Include/core_cm7.h **** 
1814:Drivers/CMSIS/Include/core_cm7.h **** #ifdef CMSIS_NVIC_VIRTUAL
1815:Drivers/CMSIS/Include/core_cm7.h ****   #ifndef CMSIS_NVIC_VIRTUAL_HEADER_FILE
1816:Drivers/CMSIS/Include/core_cm7.h ****     #define CMSIS_NVIC_VIRTUAL_HEADER_FILE "cmsis_nvic_virtual.h"
1817:Drivers/CMSIS/Include/core_cm7.h ****   #endif
1818:Drivers/CMSIS/Include/core_cm7.h ****   #include CMSIS_NVIC_VIRTUAL_HEADER_FILE
1819:Drivers/CMSIS/Include/core_cm7.h **** #else
1820:Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_SetPriorityGrouping    __NVIC_SetPriorityGrouping
1821:Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_GetPriorityGrouping    __NVIC_GetPriorityGrouping
1822:Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_EnableIRQ              __NVIC_EnableIRQ
1823:Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_GetEnableIRQ           __NVIC_GetEnableIRQ
1824:Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_DisableIRQ             __NVIC_DisableIRQ
1825:Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_GetPendingIRQ          __NVIC_GetPendingIRQ
1826:Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_SetPendingIRQ          __NVIC_SetPendingIRQ
1827:Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_ClearPendingIRQ        __NVIC_ClearPendingIRQ
1828:Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_GetActive              __NVIC_GetActive
1829:Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_SetPriority            __NVIC_SetPriority
1830:Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_GetPriority            __NVIC_GetPriority
1831:Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_SystemReset            __NVIC_SystemReset
1832:Drivers/CMSIS/Include/core_cm7.h **** #endif /* CMSIS_NVIC_VIRTUAL */
1833:Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 80


1834:Drivers/CMSIS/Include/core_cm7.h **** #ifdef CMSIS_VECTAB_VIRTUAL
1835:Drivers/CMSIS/Include/core_cm7.h ****   #ifndef CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1836:Drivers/CMSIS/Include/core_cm7.h ****     #define CMSIS_VECTAB_VIRTUAL_HEADER_FILE "cmsis_vectab_virtual.h"
1837:Drivers/CMSIS/Include/core_cm7.h ****   #endif
1838:Drivers/CMSIS/Include/core_cm7.h ****   #include CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1839:Drivers/CMSIS/Include/core_cm7.h **** #else
1840:Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_SetVector              __NVIC_SetVector
1841:Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_GetVector              __NVIC_GetVector
1842:Drivers/CMSIS/Include/core_cm7.h **** #endif  /* (CMSIS_VECTAB_VIRTUAL) */
1843:Drivers/CMSIS/Include/core_cm7.h **** 
1844:Drivers/CMSIS/Include/core_cm7.h **** #define NVIC_USER_IRQ_OFFSET          16
1845:Drivers/CMSIS/Include/core_cm7.h **** 
1846:Drivers/CMSIS/Include/core_cm7.h **** 
1847:Drivers/CMSIS/Include/core_cm7.h **** /* The following EXC_RETURN values are saved the LR on exception entry */
1848:Drivers/CMSIS/Include/core_cm7.h **** #define EXC_RETURN_HANDLER         (0xFFFFFFF1UL)     /* return to Handler mode, uses MSP after ret
1849:Drivers/CMSIS/Include/core_cm7.h **** #define EXC_RETURN_THREAD_MSP      (0xFFFFFFF9UL)     /* return to Thread mode, uses MSP after retu
1850:Drivers/CMSIS/Include/core_cm7.h **** #define EXC_RETURN_THREAD_PSP      (0xFFFFFFFDUL)     /* return to Thread mode, uses PSP after retu
1851:Drivers/CMSIS/Include/core_cm7.h **** #define EXC_RETURN_HANDLER_FPU     (0xFFFFFFE1UL)     /* return to Handler mode, uses MSP after ret
1852:Drivers/CMSIS/Include/core_cm7.h **** #define EXC_RETURN_THREAD_MSP_FPU  (0xFFFFFFE9UL)     /* return to Thread mode, uses MSP after retu
1853:Drivers/CMSIS/Include/core_cm7.h **** #define EXC_RETURN_THREAD_PSP_FPU  (0xFFFFFFEDUL)     /* return to Thread mode, uses PSP after retu
1854:Drivers/CMSIS/Include/core_cm7.h **** 
1855:Drivers/CMSIS/Include/core_cm7.h **** 
1856:Drivers/CMSIS/Include/core_cm7.h **** /**
1857:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Set Priority Grouping
1858:Drivers/CMSIS/Include/core_cm7.h ****   \details Sets the priority grouping field using the required unlock sequence.
1859:Drivers/CMSIS/Include/core_cm7.h ****            The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1860:Drivers/CMSIS/Include/core_cm7.h ****            Only values from 0..7 are used.
1861:Drivers/CMSIS/Include/core_cm7.h ****            In case of a conflict between priority grouping and available
1862:Drivers/CMSIS/Include/core_cm7.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1863:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      PriorityGroup  Priority grouping field.
1864:Drivers/CMSIS/Include/core_cm7.h ****  */
1865:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1866:Drivers/CMSIS/Include/core_cm7.h **** {
1867:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t reg_value;
1868:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
1869:Drivers/CMSIS/Include/core_cm7.h **** 
1870:Drivers/CMSIS/Include/core_cm7.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1871:Drivers/CMSIS/Include/core_cm7.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
1872:Drivers/CMSIS/Include/core_cm7.h ****   reg_value  =  (reg_value                                   |
1873:Drivers/CMSIS/Include/core_cm7.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1874:Drivers/CMSIS/Include/core_cm7.h ****                 (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key a
1875:Drivers/CMSIS/Include/core_cm7.h ****   SCB->AIRCR =  reg_value;
1876:Drivers/CMSIS/Include/core_cm7.h **** }
1877:Drivers/CMSIS/Include/core_cm7.h **** 
1878:Drivers/CMSIS/Include/core_cm7.h **** 
1879:Drivers/CMSIS/Include/core_cm7.h **** /**
1880:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Get Priority Grouping
1881:Drivers/CMSIS/Include/core_cm7.h ****   \details Reads the priority grouping field from the NVIC Interrupt Controller.
1882:Drivers/CMSIS/Include/core_cm7.h ****   \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1883:Drivers/CMSIS/Include/core_cm7.h ****  */
1884:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
1885:Drivers/CMSIS/Include/core_cm7.h **** {
1886:Drivers/CMSIS/Include/core_cm7.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
1887:Drivers/CMSIS/Include/core_cm7.h **** }
1888:Drivers/CMSIS/Include/core_cm7.h **** 
1889:Drivers/CMSIS/Include/core_cm7.h **** 
1890:Drivers/CMSIS/Include/core_cm7.h **** /**
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 81


1891:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Enable Interrupt
1892:Drivers/CMSIS/Include/core_cm7.h ****   \details Enables a device specific interrupt in the NVIC interrupt controller.
1893:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1894:Drivers/CMSIS/Include/core_cm7.h ****   \note    IRQn must not be negative.
1895:Drivers/CMSIS/Include/core_cm7.h ****  */
1896:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
1897:Drivers/CMSIS/Include/core_cm7.h **** {
1898:Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
1899:Drivers/CMSIS/Include/core_cm7.h ****   {
1900:Drivers/CMSIS/Include/core_cm7.h ****     NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1901:Drivers/CMSIS/Include/core_cm7.h ****   }
1902:Drivers/CMSIS/Include/core_cm7.h **** }
1903:Drivers/CMSIS/Include/core_cm7.h **** 
1904:Drivers/CMSIS/Include/core_cm7.h **** 
1905:Drivers/CMSIS/Include/core_cm7.h **** /**
1906:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Get Interrupt Enable status
1907:Drivers/CMSIS/Include/core_cm7.h ****   \details Returns a device specific interrupt enable status from the NVIC interrupt controller.
1908:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1909:Drivers/CMSIS/Include/core_cm7.h ****   \return             0  Interrupt is not enabled.
1910:Drivers/CMSIS/Include/core_cm7.h ****   \return             1  Interrupt is enabled.
1911:Drivers/CMSIS/Include/core_cm7.h ****   \note    IRQn must not be negative.
1912:Drivers/CMSIS/Include/core_cm7.h ****  */
1913:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetEnableIRQ(IRQn_Type IRQn)
1914:Drivers/CMSIS/Include/core_cm7.h **** {
1915:Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
1916:Drivers/CMSIS/Include/core_cm7.h ****   {
1917:Drivers/CMSIS/Include/core_cm7.h ****     return((uint32_t)(((NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1918:Drivers/CMSIS/Include/core_cm7.h ****   }
1919:Drivers/CMSIS/Include/core_cm7.h ****   else
1920:Drivers/CMSIS/Include/core_cm7.h ****   {
1921:Drivers/CMSIS/Include/core_cm7.h ****     return(0U);
1922:Drivers/CMSIS/Include/core_cm7.h ****   }
1923:Drivers/CMSIS/Include/core_cm7.h **** }
1924:Drivers/CMSIS/Include/core_cm7.h **** 
1925:Drivers/CMSIS/Include/core_cm7.h **** 
1926:Drivers/CMSIS/Include/core_cm7.h **** /**
1927:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Disable Interrupt
1928:Drivers/CMSIS/Include/core_cm7.h ****   \details Disables a device specific interrupt in the NVIC interrupt controller.
1929:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1930:Drivers/CMSIS/Include/core_cm7.h ****   \note    IRQn must not be negative.
1931:Drivers/CMSIS/Include/core_cm7.h ****  */
1932:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
1933:Drivers/CMSIS/Include/core_cm7.h **** {
1934:Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
1935:Drivers/CMSIS/Include/core_cm7.h ****   {
1936:Drivers/CMSIS/Include/core_cm7.h ****     NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1937:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
1938:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
1939:Drivers/CMSIS/Include/core_cm7.h ****   }
1940:Drivers/CMSIS/Include/core_cm7.h **** }
1941:Drivers/CMSIS/Include/core_cm7.h **** 
1942:Drivers/CMSIS/Include/core_cm7.h **** 
1943:Drivers/CMSIS/Include/core_cm7.h **** /**
1944:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Get Pending Interrupt
1945:Drivers/CMSIS/Include/core_cm7.h ****   \details Reads the NVIC pending register and returns the pending bit for the specified device spe
1946:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1947:Drivers/CMSIS/Include/core_cm7.h ****   \return             0  Interrupt status is not pending.
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 82


1948:Drivers/CMSIS/Include/core_cm7.h ****   \return             1  Interrupt status is pending.
1949:Drivers/CMSIS/Include/core_cm7.h ****   \note    IRQn must not be negative.
1950:Drivers/CMSIS/Include/core_cm7.h ****  */
1951:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetPendingIRQ(IRQn_Type IRQn)
1952:Drivers/CMSIS/Include/core_cm7.h **** {
1953:Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
1954:Drivers/CMSIS/Include/core_cm7.h ****   {
1955:Drivers/CMSIS/Include/core_cm7.h ****     return((uint32_t)(((NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1956:Drivers/CMSIS/Include/core_cm7.h ****   }
1957:Drivers/CMSIS/Include/core_cm7.h ****   else
1958:Drivers/CMSIS/Include/core_cm7.h ****   {
1959:Drivers/CMSIS/Include/core_cm7.h ****     return(0U);
1960:Drivers/CMSIS/Include/core_cm7.h ****   }
1961:Drivers/CMSIS/Include/core_cm7.h **** }
1962:Drivers/CMSIS/Include/core_cm7.h **** 
1963:Drivers/CMSIS/Include/core_cm7.h **** 
1964:Drivers/CMSIS/Include/core_cm7.h **** /**
1965:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Set Pending Interrupt
1966:Drivers/CMSIS/Include/core_cm7.h ****   \details Sets the pending bit of a device specific interrupt in the NVIC pending register.
1967:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1968:Drivers/CMSIS/Include/core_cm7.h ****   \note    IRQn must not be negative.
1969:Drivers/CMSIS/Include/core_cm7.h ****  */
1970:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_SetPendingIRQ(IRQn_Type IRQn)
1971:Drivers/CMSIS/Include/core_cm7.h **** {
1972:Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
1973:Drivers/CMSIS/Include/core_cm7.h ****   {
1974:Drivers/CMSIS/Include/core_cm7.h ****     NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1975:Drivers/CMSIS/Include/core_cm7.h ****   }
1976:Drivers/CMSIS/Include/core_cm7.h **** }
1977:Drivers/CMSIS/Include/core_cm7.h **** 
1978:Drivers/CMSIS/Include/core_cm7.h **** 
1979:Drivers/CMSIS/Include/core_cm7.h **** /**
1980:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Clear Pending Interrupt
1981:Drivers/CMSIS/Include/core_cm7.h ****   \details Clears the pending bit of a device specific interrupt in the NVIC pending register.
1982:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1983:Drivers/CMSIS/Include/core_cm7.h ****   \note    IRQn must not be negative.
1984:Drivers/CMSIS/Include/core_cm7.h ****  */
1985:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1986:Drivers/CMSIS/Include/core_cm7.h **** {
1987:Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
1988:Drivers/CMSIS/Include/core_cm7.h ****   {
1989:Drivers/CMSIS/Include/core_cm7.h ****     NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1990:Drivers/CMSIS/Include/core_cm7.h ****   }
1991:Drivers/CMSIS/Include/core_cm7.h **** }
1992:Drivers/CMSIS/Include/core_cm7.h **** 
1993:Drivers/CMSIS/Include/core_cm7.h **** 
1994:Drivers/CMSIS/Include/core_cm7.h **** /**
1995:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Get Active Interrupt
1996:Drivers/CMSIS/Include/core_cm7.h ****   \details Reads the active register in the NVIC and returns the active bit for the device specific
1997:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1998:Drivers/CMSIS/Include/core_cm7.h ****   \return             0  Interrupt status is not active.
1999:Drivers/CMSIS/Include/core_cm7.h ****   \return             1  Interrupt status is active.
2000:Drivers/CMSIS/Include/core_cm7.h ****   \note    IRQn must not be negative.
2001:Drivers/CMSIS/Include/core_cm7.h ****  */
2002:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetActive(IRQn_Type IRQn)
2003:Drivers/CMSIS/Include/core_cm7.h **** {
2004:Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 83


2005:Drivers/CMSIS/Include/core_cm7.h ****   {
2006:Drivers/CMSIS/Include/core_cm7.h ****     return((uint32_t)(((NVIC->IABR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
2007:Drivers/CMSIS/Include/core_cm7.h ****   }
2008:Drivers/CMSIS/Include/core_cm7.h ****   else
2009:Drivers/CMSIS/Include/core_cm7.h ****   {
2010:Drivers/CMSIS/Include/core_cm7.h ****     return(0U);
2011:Drivers/CMSIS/Include/core_cm7.h ****   }
2012:Drivers/CMSIS/Include/core_cm7.h **** }
2013:Drivers/CMSIS/Include/core_cm7.h **** 
2014:Drivers/CMSIS/Include/core_cm7.h **** 
2015:Drivers/CMSIS/Include/core_cm7.h **** /**
2016:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Set Interrupt Priority
2017:Drivers/CMSIS/Include/core_cm7.h ****   \details Sets the priority of a device specific interrupt or a processor exception.
2018:Drivers/CMSIS/Include/core_cm7.h ****            The interrupt number can be positive to specify a device specific interrupt,
2019:Drivers/CMSIS/Include/core_cm7.h ****            or negative to specify a processor exception.
2020:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Interrupt number.
2021:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]  priority  Priority to set.
2022:Drivers/CMSIS/Include/core_cm7.h ****   \note    The priority cannot be set for every processor exception.
2023:Drivers/CMSIS/Include/core_cm7.h ****  */
2024:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
2025:Drivers/CMSIS/Include/core_cm7.h **** {
2026:Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
2027:Drivers/CMSIS/Include/core_cm7.h ****   {
2028:Drivers/CMSIS/Include/core_cm7.h ****     NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (
2029:Drivers/CMSIS/Include/core_cm7.h ****   }
2030:Drivers/CMSIS/Include/core_cm7.h ****   else
2031:Drivers/CMSIS/Include/core_cm7.h ****   {
2032:Drivers/CMSIS/Include/core_cm7.h ****     SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (
2033:Drivers/CMSIS/Include/core_cm7.h ****   }
2034:Drivers/CMSIS/Include/core_cm7.h **** }
2035:Drivers/CMSIS/Include/core_cm7.h **** 
2036:Drivers/CMSIS/Include/core_cm7.h **** 
2037:Drivers/CMSIS/Include/core_cm7.h **** /**
2038:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Get Interrupt Priority
2039:Drivers/CMSIS/Include/core_cm7.h ****   \details Reads the priority of a device specific interrupt or a processor exception.
2040:Drivers/CMSIS/Include/core_cm7.h ****            The interrupt number can be positive to specify a device specific interrupt,
2041:Drivers/CMSIS/Include/core_cm7.h ****            or negative to specify a processor exception.
2042:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]   IRQn  Interrupt number.
2043:Drivers/CMSIS/Include/core_cm7.h ****   \return             Interrupt Priority.
2044:Drivers/CMSIS/Include/core_cm7.h ****                       Value is aligned automatically to the implemented priority bits of the microc
2045:Drivers/CMSIS/Include/core_cm7.h ****  */
2046:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetPriority(IRQn_Type IRQn)
2047:Drivers/CMSIS/Include/core_cm7.h **** {
2048:Drivers/CMSIS/Include/core_cm7.h **** 
2049:Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
2050:Drivers/CMSIS/Include/core_cm7.h ****   {
2051:Drivers/CMSIS/Include/core_cm7.h ****     return(((uint32_t)NVIC->IP[((uint32_t)IRQn)]                >> (8U - __NVIC_PRIO_BITS)));
2052:Drivers/CMSIS/Include/core_cm7.h ****   }
2053:Drivers/CMSIS/Include/core_cm7.h ****   else
2054:Drivers/CMSIS/Include/core_cm7.h ****   {
2055:Drivers/CMSIS/Include/core_cm7.h ****     return(((uint32_t)SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] >> (8U - __NVIC_PRIO_BITS)));
2056:Drivers/CMSIS/Include/core_cm7.h ****   }
2057:Drivers/CMSIS/Include/core_cm7.h **** }
2058:Drivers/CMSIS/Include/core_cm7.h **** 
2059:Drivers/CMSIS/Include/core_cm7.h **** 
2060:Drivers/CMSIS/Include/core_cm7.h **** /**
2061:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Encode Priority
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 84


2062:Drivers/CMSIS/Include/core_cm7.h ****   \details Encodes the priority for an interrupt with the given priority group,
2063:Drivers/CMSIS/Include/core_cm7.h ****            preemptive priority value, and subpriority value.
2064:Drivers/CMSIS/Include/core_cm7.h ****            In case of a conflict between priority grouping and available
2065:Drivers/CMSIS/Include/core_cm7.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
2066:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]     PriorityGroup  Used priority group.
2067:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
2068:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]       SubPriority  Subpriority value (starting from 0).
2069:Drivers/CMSIS/Include/core_cm7.h ****   \return                        Encoded priority. Value can be used in the function \ref NVIC_SetP
2070:Drivers/CMSIS/Include/core_cm7.h ****  */
2071:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uin
2072:Drivers/CMSIS/Include/core_cm7.h **** {
2073:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
2074:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t PreemptPriorityBits;
2075:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t SubPriorityBits;
2076:Drivers/CMSIS/Include/core_cm7.h **** 
2077:Drivers/CMSIS/Include/core_cm7.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
2078:Drivers/CMSIS/Include/core_cm7.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
2079:Drivers/CMSIS/Include/core_cm7.h **** 
2080:Drivers/CMSIS/Include/core_cm7.h ****   return (
2081:Drivers/CMSIS/Include/core_cm7.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
2082:Drivers/CMSIS/Include/core_cm7.h ****            ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
2083:Drivers/CMSIS/Include/core_cm7.h ****          );
2084:Drivers/CMSIS/Include/core_cm7.h **** }
2085:Drivers/CMSIS/Include/core_cm7.h **** 
2086:Drivers/CMSIS/Include/core_cm7.h **** 
2087:Drivers/CMSIS/Include/core_cm7.h **** /**
2088:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Decode Priority
2089:Drivers/CMSIS/Include/core_cm7.h ****   \details Decodes an interrupt priority value with a given priority group to
2090:Drivers/CMSIS/Include/core_cm7.h ****            preemptive priority value and subpriority value.
2091:Drivers/CMSIS/Include/core_cm7.h ****            In case of a conflict between priority grouping and available
2092:Drivers/CMSIS/Include/core_cm7.h ****            priority bits (__NVIC_PRIO_BITS) the smallest possible priority group is set.
2093:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]         Priority   Priority value, which can be retrieved with the function \ref NVIC
2094:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]     PriorityGroup  Used priority group.
2095:Drivers/CMSIS/Include/core_cm7.h ****   \param [out] pPreemptPriority  Preemptive priority value (starting from 0).
2096:Drivers/CMSIS/Include/core_cm7.h ****   \param [out]     pSubPriority  Subpriority value (starting from 0).
2097:Drivers/CMSIS/Include/core_cm7.h ****  */
2098:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void NVIC_DecodePriority (uint32_t Priority, uint32_t PriorityGroup, uint32_t* cons
2099:Drivers/CMSIS/Include/core_cm7.h **** {
2100:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
2101:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t PreemptPriorityBits;
2102:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t SubPriorityBits;
2103:Drivers/CMSIS/Include/core_cm7.h **** 
2104:Drivers/CMSIS/Include/core_cm7.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
2105:Drivers/CMSIS/Include/core_cm7.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
2106:Drivers/CMSIS/Include/core_cm7.h **** 
2107:Drivers/CMSIS/Include/core_cm7.h ****   *pPreemptPriority = (Priority >> SubPriorityBits) & (uint32_t)((1UL << (PreemptPriorityBits)) - 1
2108:Drivers/CMSIS/Include/core_cm7.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
2109:Drivers/CMSIS/Include/core_cm7.h **** }
2110:Drivers/CMSIS/Include/core_cm7.h **** 
2111:Drivers/CMSIS/Include/core_cm7.h **** 
2112:Drivers/CMSIS/Include/core_cm7.h **** /**
2113:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Set Interrupt Vector
2114:Drivers/CMSIS/Include/core_cm7.h ****   \details Sets an interrupt vector in SRAM based interrupt vector table.
2115:Drivers/CMSIS/Include/core_cm7.h ****            The interrupt number can be positive to specify a device specific interrupt,
2116:Drivers/CMSIS/Include/core_cm7.h ****            or negative to specify a processor exception.
2117:Drivers/CMSIS/Include/core_cm7.h ****            VTOR must been relocated to SRAM before.
2118:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]   IRQn      Interrupt number
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 85


2119:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]   vector    Address of interrupt handler function
2120:Drivers/CMSIS/Include/core_cm7.h ****  */
2121:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_SetVector(IRQn_Type IRQn, uint32_t vector)
2122:Drivers/CMSIS/Include/core_cm7.h **** {
2123:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t *vectors = (uint32_t *)SCB->VTOR;
2124:Drivers/CMSIS/Include/core_cm7.h ****   vectors[(int32_t)IRQn + NVIC_USER_IRQ_OFFSET] = vector;
2125:Drivers/CMSIS/Include/core_cm7.h **** }
2126:Drivers/CMSIS/Include/core_cm7.h **** 
2127:Drivers/CMSIS/Include/core_cm7.h **** 
2128:Drivers/CMSIS/Include/core_cm7.h **** /**
2129:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Get Interrupt Vector
2130:Drivers/CMSIS/Include/core_cm7.h ****   \details Reads an interrupt vector from interrupt vector table.
2131:Drivers/CMSIS/Include/core_cm7.h ****            The interrupt number can be positive to specify a device specific interrupt,
2132:Drivers/CMSIS/Include/core_cm7.h ****            or negative to specify a processor exception.
2133:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]   IRQn      Interrupt number.
2134:Drivers/CMSIS/Include/core_cm7.h ****   \return                 Address of interrupt handler function
2135:Drivers/CMSIS/Include/core_cm7.h ****  */
2136:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetVector(IRQn_Type IRQn)
2137:Drivers/CMSIS/Include/core_cm7.h **** {
2138:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t *vectors = (uint32_t *)SCB->VTOR;
2139:Drivers/CMSIS/Include/core_cm7.h ****   return vectors[(int32_t)IRQn + NVIC_USER_IRQ_OFFSET];
2140:Drivers/CMSIS/Include/core_cm7.h **** }
2141:Drivers/CMSIS/Include/core_cm7.h **** 
2142:Drivers/CMSIS/Include/core_cm7.h **** 
2143:Drivers/CMSIS/Include/core_cm7.h **** /**
2144:Drivers/CMSIS/Include/core_cm7.h ****   \brief   System Reset
2145:Drivers/CMSIS/Include/core_cm7.h ****   \details Initiates a system reset request to reset the MCU.
2146:Drivers/CMSIS/Include/core_cm7.h ****  */
2147:Drivers/CMSIS/Include/core_cm7.h **** __NO_RETURN __STATIC_INLINE void __NVIC_SystemReset(void)
2148:Drivers/CMSIS/Include/core_cm7.h **** {
2149:Drivers/CMSIS/Include/core_cm7.h ****   __DSB();                                                          /* Ensure all outstanding memor
2150:Drivers/CMSIS/Include/core_cm7.h ****                                                                        buffered write are completed
2151:Drivers/CMSIS/Include/core_cm7.h ****   SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
2152:Drivers/CMSIS/Include/core_cm7.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
2153:Drivers/CMSIS/Include/core_cm7.h ****                             SCB_AIRCR_SYSRESETREQ_Msk    );         /* Keep priority group unchange
2154:Drivers/CMSIS/Include/core_cm7.h ****   __DSB();                                                          /* Ensure completion of memory 
2155:Drivers/CMSIS/Include/core_cm7.h **** 
2156:Drivers/CMSIS/Include/core_cm7.h ****   for(;;)                                                           /* wait until reset */
2157:Drivers/CMSIS/Include/core_cm7.h ****   {
2158:Drivers/CMSIS/Include/core_cm7.h ****     __NOP();
2159:Drivers/CMSIS/Include/core_cm7.h ****   }
2160:Drivers/CMSIS/Include/core_cm7.h **** }
2161:Drivers/CMSIS/Include/core_cm7.h **** 
2162:Drivers/CMSIS/Include/core_cm7.h **** /*@} end of CMSIS_Core_NVICFunctions */
2163:Drivers/CMSIS/Include/core_cm7.h **** 
2164:Drivers/CMSIS/Include/core_cm7.h **** /* ##########################  MPU functions  #################################### */
2165:Drivers/CMSIS/Include/core_cm7.h **** 
2166:Drivers/CMSIS/Include/core_cm7.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
2167:Drivers/CMSIS/Include/core_cm7.h **** 
2168:Drivers/CMSIS/Include/core_cm7.h **** #include "mpu_armv7.h"
2169:Drivers/CMSIS/Include/core_cm7.h **** 
2170:Drivers/CMSIS/Include/core_cm7.h **** #endif
2171:Drivers/CMSIS/Include/core_cm7.h **** 
2172:Drivers/CMSIS/Include/core_cm7.h **** /* ##########################  FPU functions  #################################### */
2173:Drivers/CMSIS/Include/core_cm7.h **** /**
2174:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_Core_FunctionInterface
2175:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_Core_FpuFunctions FPU Functions
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 86


2176:Drivers/CMSIS/Include/core_cm7.h ****   \brief    Function that provides FPU type.
2177:Drivers/CMSIS/Include/core_cm7.h ****   @{
2178:Drivers/CMSIS/Include/core_cm7.h ****  */
2179:Drivers/CMSIS/Include/core_cm7.h **** 
2180:Drivers/CMSIS/Include/core_cm7.h **** /**
2181:Drivers/CMSIS/Include/core_cm7.h ****   \brief   get FPU type
2182:Drivers/CMSIS/Include/core_cm7.h ****   \details returns the FPU type
2183:Drivers/CMSIS/Include/core_cm7.h ****   \returns
2184:Drivers/CMSIS/Include/core_cm7.h ****    - \b  0: No FPU
2185:Drivers/CMSIS/Include/core_cm7.h ****    - \b  1: Single precision FPU
2186:Drivers/CMSIS/Include/core_cm7.h ****    - \b  2: Double + Single precision FPU
2187:Drivers/CMSIS/Include/core_cm7.h ****  */
2188:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t SCB_GetFPUType(void)
2189:Drivers/CMSIS/Include/core_cm7.h **** {
2190:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t mvfr0;
2191:Drivers/CMSIS/Include/core_cm7.h **** 
2192:Drivers/CMSIS/Include/core_cm7.h ****   mvfr0 = SCB->MVFR0;
2193:Drivers/CMSIS/Include/core_cm7.h ****   if      ((mvfr0 & (FPU_MVFR0_Single_precision_Msk | FPU_MVFR0_Double_precision_Msk)) == 0x220U)
2194:Drivers/CMSIS/Include/core_cm7.h ****   {
2195:Drivers/CMSIS/Include/core_cm7.h ****     return 2U;           /* Double + Single precision FPU */
2196:Drivers/CMSIS/Include/core_cm7.h ****   }
2197:Drivers/CMSIS/Include/core_cm7.h ****   else if ((mvfr0 & (FPU_MVFR0_Single_precision_Msk | FPU_MVFR0_Double_precision_Msk)) == 0x020U)
2198:Drivers/CMSIS/Include/core_cm7.h ****   {
2199:Drivers/CMSIS/Include/core_cm7.h ****     return 1U;           /* Single precision FPU */
2200:Drivers/CMSIS/Include/core_cm7.h ****   }
2201:Drivers/CMSIS/Include/core_cm7.h ****   else
2202:Drivers/CMSIS/Include/core_cm7.h ****   {
2203:Drivers/CMSIS/Include/core_cm7.h ****     return 0U;           /* No FPU */
2204:Drivers/CMSIS/Include/core_cm7.h ****   }
2205:Drivers/CMSIS/Include/core_cm7.h **** }
2206:Drivers/CMSIS/Include/core_cm7.h **** 
2207:Drivers/CMSIS/Include/core_cm7.h **** 
2208:Drivers/CMSIS/Include/core_cm7.h **** /*@} end of CMSIS_Core_FpuFunctions */
2209:Drivers/CMSIS/Include/core_cm7.h **** 
2210:Drivers/CMSIS/Include/core_cm7.h **** 
2211:Drivers/CMSIS/Include/core_cm7.h **** 
2212:Drivers/CMSIS/Include/core_cm7.h **** /* ##########################  Cache functions  #################################### */
2213:Drivers/CMSIS/Include/core_cm7.h **** /**
2214:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_Core_FunctionInterface
2215:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_Core_CacheFunctions Cache Functions
2216:Drivers/CMSIS/Include/core_cm7.h ****   \brief    Functions that configure Instruction and Data cache.
2217:Drivers/CMSIS/Include/core_cm7.h ****   @{
2218:Drivers/CMSIS/Include/core_cm7.h ****  */
2219:Drivers/CMSIS/Include/core_cm7.h **** 
2220:Drivers/CMSIS/Include/core_cm7.h **** /* Cache Size ID Register Macros */
2221:Drivers/CMSIS/Include/core_cm7.h **** #define CCSIDR_WAYS(x)         (((x) & SCB_CCSIDR_ASSOCIATIVITY_Msk) >> SCB_CCSIDR_ASSOCIATIVITY_Po
2222:Drivers/CMSIS/Include/core_cm7.h **** #define CCSIDR_SETS(x)         (((x) & SCB_CCSIDR_NUMSETS_Msk      ) >> SCB_CCSIDR_NUMSETS_Pos     
2223:Drivers/CMSIS/Include/core_cm7.h **** 
2224:Drivers/CMSIS/Include/core_cm7.h **** 
2225:Drivers/CMSIS/Include/core_cm7.h **** /**
2226:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Enable I-Cache
2227:Drivers/CMSIS/Include/core_cm7.h ****   \details Turns on I-Cache
2228:Drivers/CMSIS/Include/core_cm7.h ****   */
2229:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void SCB_EnableICache (void)
2230:Drivers/CMSIS/Include/core_cm7.h **** {
2231:Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
2232:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 87


2233:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2234:Drivers/CMSIS/Include/core_cm7.h ****     SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
2235:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2236:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2237:Drivers/CMSIS/Include/core_cm7.h ****     SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
2238:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2239:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2240:Drivers/CMSIS/Include/core_cm7.h ****   #endif
2241:Drivers/CMSIS/Include/core_cm7.h **** }
2242:Drivers/CMSIS/Include/core_cm7.h **** 
2243:Drivers/CMSIS/Include/core_cm7.h **** 
2244:Drivers/CMSIS/Include/core_cm7.h **** /**
2245:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Disable I-Cache
2246:Drivers/CMSIS/Include/core_cm7.h ****   \details Turns off I-Cache
2247:Drivers/CMSIS/Include/core_cm7.h ****   */
2248:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void SCB_DisableICache (void)
2249:Drivers/CMSIS/Include/core_cm7.h **** {
2250:Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
2251:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2252:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2253:Drivers/CMSIS/Include/core_cm7.h ****     SCB->CCR &= ~(uint32_t)SCB_CCR_IC_Msk;  /* disable I-Cache */
2254:Drivers/CMSIS/Include/core_cm7.h ****     SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
2255:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2256:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2257:Drivers/CMSIS/Include/core_cm7.h ****   #endif
2258:Drivers/CMSIS/Include/core_cm7.h **** }
2259:Drivers/CMSIS/Include/core_cm7.h **** 
2260:Drivers/CMSIS/Include/core_cm7.h **** 
2261:Drivers/CMSIS/Include/core_cm7.h **** /**
2262:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Invalidate I-Cache
2263:Drivers/CMSIS/Include/core_cm7.h ****   \details Invalidates I-Cache
2264:Drivers/CMSIS/Include/core_cm7.h ****   */
2265:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void SCB_InvalidateICache (void)
2266:Drivers/CMSIS/Include/core_cm7.h **** {
2267:Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
2268:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2269:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2270:Drivers/CMSIS/Include/core_cm7.h ****     SCB->ICIALLU = 0UL;
2271:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2272:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2273:Drivers/CMSIS/Include/core_cm7.h ****   #endif
2274:Drivers/CMSIS/Include/core_cm7.h **** }
2275:Drivers/CMSIS/Include/core_cm7.h **** 
2276:Drivers/CMSIS/Include/core_cm7.h **** 
2277:Drivers/CMSIS/Include/core_cm7.h **** /**
2278:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Enable D-Cache
2279:Drivers/CMSIS/Include/core_cm7.h ****   \details Turns on D-Cache
2280:Drivers/CMSIS/Include/core_cm7.h ****   */
2281:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void SCB_EnableDCache (void)
2282:Drivers/CMSIS/Include/core_cm7.h **** {
2283:Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
2284:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ccsidr;
2285:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t sets;
2286:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ways;
2287:Drivers/CMSIS/Include/core_cm7.h **** 
2288:Drivers/CMSIS/Include/core_cm7.h ****     SCB->CSSELR = 0U; /*(0U << 1U) | 0U;*/  /* Level 1 data cache */
2289:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 88


2290:Drivers/CMSIS/Include/core_cm7.h **** 
2291:Drivers/CMSIS/Include/core_cm7.h ****     ccsidr = SCB->CCSIDR;
2292:Drivers/CMSIS/Include/core_cm7.h **** 
2293:Drivers/CMSIS/Include/core_cm7.h ****                                             /* invalidate D-Cache */
2294:Drivers/CMSIS/Include/core_cm7.h ****     sets = (uint32_t)(CCSIDR_SETS(ccsidr));
2295:Drivers/CMSIS/Include/core_cm7.h ****     do {
2296:Drivers/CMSIS/Include/core_cm7.h ****       ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
2297:Drivers/CMSIS/Include/core_cm7.h ****       do {
2298:Drivers/CMSIS/Include/core_cm7.h ****         SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
2299:Drivers/CMSIS/Include/core_cm7.h ****                       ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
2300:Drivers/CMSIS/Include/core_cm7.h ****         #if defined ( __CC_ARM )
2301:Drivers/CMSIS/Include/core_cm7.h ****           __schedule_barrier();
2302:Drivers/CMSIS/Include/core_cm7.h ****         #endif
2303:Drivers/CMSIS/Include/core_cm7.h ****       } while (ways-- != 0U);
2304:Drivers/CMSIS/Include/core_cm7.h ****     } while(sets-- != 0U);
2305:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2306:Drivers/CMSIS/Include/core_cm7.h **** 
2307:Drivers/CMSIS/Include/core_cm7.h ****     SCB->CCR |=  (uint32_t)SCB_CCR_DC_Msk;  /* enable D-Cache */
2308:Drivers/CMSIS/Include/core_cm7.h **** 
2309:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2310:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2311:Drivers/CMSIS/Include/core_cm7.h ****   #endif
2312:Drivers/CMSIS/Include/core_cm7.h **** }
2313:Drivers/CMSIS/Include/core_cm7.h **** 
2314:Drivers/CMSIS/Include/core_cm7.h **** 
2315:Drivers/CMSIS/Include/core_cm7.h **** /**
2316:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Disable D-Cache
2317:Drivers/CMSIS/Include/core_cm7.h ****   \details Turns off D-Cache
2318:Drivers/CMSIS/Include/core_cm7.h ****   */
2319:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void SCB_DisableDCache (void)
2320:Drivers/CMSIS/Include/core_cm7.h **** {
2321:Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
2322:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ccsidr;
2323:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t sets;
2324:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ways;
2325:Drivers/CMSIS/Include/core_cm7.h **** 
2326:Drivers/CMSIS/Include/core_cm7.h ****     SCB->CSSELR = 0U; /*(0U << 1U) | 0U;*/  /* Level 1 data cache */
2327:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2328:Drivers/CMSIS/Include/core_cm7.h **** 
2329:Drivers/CMSIS/Include/core_cm7.h ****     SCB->CCR &= ~(uint32_t)SCB_CCR_DC_Msk;  /* disable D-Cache */
2330:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2331:Drivers/CMSIS/Include/core_cm7.h **** 
2332:Drivers/CMSIS/Include/core_cm7.h ****     ccsidr = SCB->CCSIDR;
2333:Drivers/CMSIS/Include/core_cm7.h **** 
2334:Drivers/CMSIS/Include/core_cm7.h ****                                             /* clean & invalidate D-Cache */
2335:Drivers/CMSIS/Include/core_cm7.h ****     sets = (uint32_t)(CCSIDR_SETS(ccsidr));
2336:Drivers/CMSIS/Include/core_cm7.h ****     do {
2337:Drivers/CMSIS/Include/core_cm7.h ****       ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
2338:Drivers/CMSIS/Include/core_cm7.h ****       do {
2339:Drivers/CMSIS/Include/core_cm7.h ****         SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
2340:Drivers/CMSIS/Include/core_cm7.h ****                        ((ways << SCB_DCCISW_WAY_Pos) & SCB_DCCISW_WAY_Msk)  );
2341:Drivers/CMSIS/Include/core_cm7.h ****         #if defined ( __CC_ARM )
2342:Drivers/CMSIS/Include/core_cm7.h ****           __schedule_barrier();
2343:Drivers/CMSIS/Include/core_cm7.h ****         #endif
2344:Drivers/CMSIS/Include/core_cm7.h ****       } while (ways-- != 0U);
2345:Drivers/CMSIS/Include/core_cm7.h ****     } while(sets-- != 0U);
2346:Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 89


2347:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2348:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2349:Drivers/CMSIS/Include/core_cm7.h ****   #endif
2350:Drivers/CMSIS/Include/core_cm7.h **** }
2351:Drivers/CMSIS/Include/core_cm7.h **** 
2352:Drivers/CMSIS/Include/core_cm7.h **** 
2353:Drivers/CMSIS/Include/core_cm7.h **** /**
2354:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Invalidate D-Cache
2355:Drivers/CMSIS/Include/core_cm7.h ****   \details Invalidates D-Cache
2356:Drivers/CMSIS/Include/core_cm7.h ****   */
2357:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void SCB_InvalidateDCache (void)
2358:Drivers/CMSIS/Include/core_cm7.h **** {
2359:Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
2360:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ccsidr;
2361:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t sets;
2362:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ways;
2363:Drivers/CMSIS/Include/core_cm7.h **** 
2364:Drivers/CMSIS/Include/core_cm7.h ****     SCB->CSSELR = 0U; /*(0U << 1U) | 0U;*/  /* Level 1 data cache */
2365:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2366:Drivers/CMSIS/Include/core_cm7.h **** 
2367:Drivers/CMSIS/Include/core_cm7.h ****     ccsidr = SCB->CCSIDR;
2368:Drivers/CMSIS/Include/core_cm7.h **** 
2369:Drivers/CMSIS/Include/core_cm7.h ****                                             /* invalidate D-Cache */
2370:Drivers/CMSIS/Include/core_cm7.h ****     sets = (uint32_t)(CCSIDR_SETS(ccsidr));
2371:Drivers/CMSIS/Include/core_cm7.h ****     do {
2372:Drivers/CMSIS/Include/core_cm7.h ****       ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
2373:Drivers/CMSIS/Include/core_cm7.h ****       do {
2374:Drivers/CMSIS/Include/core_cm7.h ****         SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
2375:Drivers/CMSIS/Include/core_cm7.h ****                       ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
2376:Drivers/CMSIS/Include/core_cm7.h ****         #if defined ( __CC_ARM )
2377:Drivers/CMSIS/Include/core_cm7.h ****           __schedule_barrier();
2378:Drivers/CMSIS/Include/core_cm7.h ****         #endif
2379:Drivers/CMSIS/Include/core_cm7.h ****       } while (ways-- != 0U);
2380:Drivers/CMSIS/Include/core_cm7.h ****     } while(sets-- != 0U);
2381:Drivers/CMSIS/Include/core_cm7.h **** 
2382:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2383:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2384:Drivers/CMSIS/Include/core_cm7.h ****   #endif
2385:Drivers/CMSIS/Include/core_cm7.h **** }
2386:Drivers/CMSIS/Include/core_cm7.h **** 
2387:Drivers/CMSIS/Include/core_cm7.h **** 
2388:Drivers/CMSIS/Include/core_cm7.h **** /**
2389:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Clean D-Cache
2390:Drivers/CMSIS/Include/core_cm7.h ****   \details Cleans D-Cache
2391:Drivers/CMSIS/Include/core_cm7.h ****   */
2392:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void SCB_CleanDCache (void)
2393:Drivers/CMSIS/Include/core_cm7.h **** {
2394:Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
2395:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ccsidr;
2396:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t sets;
2397:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ways;
2398:Drivers/CMSIS/Include/core_cm7.h **** 
2399:Drivers/CMSIS/Include/core_cm7.h ****      SCB->CSSELR = 0U; /*(0U << 1U) | 0U;*/  /* Level 1 data cache */
2400:Drivers/CMSIS/Include/core_cm7.h ****    __DSB();
2401:Drivers/CMSIS/Include/core_cm7.h **** 
2402:Drivers/CMSIS/Include/core_cm7.h ****     ccsidr = SCB->CCSIDR;
2403:Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 90


2404:Drivers/CMSIS/Include/core_cm7.h ****                                             /* clean D-Cache */
2405:Drivers/CMSIS/Include/core_cm7.h ****     sets = (uint32_t)(CCSIDR_SETS(ccsidr));
2406:Drivers/CMSIS/Include/core_cm7.h ****     do {
2407:Drivers/CMSIS/Include/core_cm7.h ****       ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
2408:Drivers/CMSIS/Include/core_cm7.h ****       do {
2409:Drivers/CMSIS/Include/core_cm7.h ****         SCB->DCCSW = (((sets << SCB_DCCSW_SET_Pos) & SCB_DCCSW_SET_Msk) |
2410:Drivers/CMSIS/Include/core_cm7.h ****                       ((ways << SCB_DCCSW_WAY_Pos) & SCB_DCCSW_WAY_Msk)  );
2411:Drivers/CMSIS/Include/core_cm7.h ****         #if defined ( __CC_ARM )
2412:Drivers/CMSIS/Include/core_cm7.h ****           __schedule_barrier();
2413:Drivers/CMSIS/Include/core_cm7.h ****         #endif
2414:Drivers/CMSIS/Include/core_cm7.h ****       } while (ways-- != 0U);
2415:Drivers/CMSIS/Include/core_cm7.h ****     } while(sets-- != 0U);
2416:Drivers/CMSIS/Include/core_cm7.h **** 
2417:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2418:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2419:Drivers/CMSIS/Include/core_cm7.h ****   #endif
2420:Drivers/CMSIS/Include/core_cm7.h **** }
2421:Drivers/CMSIS/Include/core_cm7.h **** 
2422:Drivers/CMSIS/Include/core_cm7.h **** 
2423:Drivers/CMSIS/Include/core_cm7.h **** /**
2424:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Clean & Invalidate D-Cache
2425:Drivers/CMSIS/Include/core_cm7.h ****   \details Cleans and Invalidates D-Cache
2426:Drivers/CMSIS/Include/core_cm7.h ****   */
2427:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void SCB_CleanInvalidateDCache (void)
2428:Drivers/CMSIS/Include/core_cm7.h **** {
2429:Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
2430:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ccsidr;
2431:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t sets;
2432:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ways;
2433:Drivers/CMSIS/Include/core_cm7.h **** 
2434:Drivers/CMSIS/Include/core_cm7.h ****     SCB->CSSELR = 0U; /*(0U << 1U) | 0U;*/  /* Level 1 data cache */
2435:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2436:Drivers/CMSIS/Include/core_cm7.h **** 
2437:Drivers/CMSIS/Include/core_cm7.h ****     ccsidr = SCB->CCSIDR;
2438:Drivers/CMSIS/Include/core_cm7.h **** 
2439:Drivers/CMSIS/Include/core_cm7.h ****                                             /* clean & invalidate D-Cache */
2440:Drivers/CMSIS/Include/core_cm7.h ****     sets = (uint32_t)(CCSIDR_SETS(ccsidr));
2441:Drivers/CMSIS/Include/core_cm7.h ****     do {
2442:Drivers/CMSIS/Include/core_cm7.h ****       ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
2443:Drivers/CMSIS/Include/core_cm7.h ****       do {
2444:Drivers/CMSIS/Include/core_cm7.h ****         SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
2445:Drivers/CMSIS/Include/core_cm7.h ****                        ((ways << SCB_DCCISW_WAY_Pos) & SCB_DCCISW_WAY_Msk)  );
2446:Drivers/CMSIS/Include/core_cm7.h ****         #if defined ( __CC_ARM )
2447:Drivers/CMSIS/Include/core_cm7.h ****           __schedule_barrier();
2448:Drivers/CMSIS/Include/core_cm7.h ****         #endif
2449:Drivers/CMSIS/Include/core_cm7.h ****       } while (ways-- != 0U);
2450:Drivers/CMSIS/Include/core_cm7.h ****     } while(sets-- != 0U);
2451:Drivers/CMSIS/Include/core_cm7.h **** 
2452:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2453:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2454:Drivers/CMSIS/Include/core_cm7.h ****   #endif
2455:Drivers/CMSIS/Include/core_cm7.h **** }
2456:Drivers/CMSIS/Include/core_cm7.h **** 
2457:Drivers/CMSIS/Include/core_cm7.h **** 
2458:Drivers/CMSIS/Include/core_cm7.h **** /**
2459:Drivers/CMSIS/Include/core_cm7.h ****   \brief   D-Cache Invalidate by address
2460:Drivers/CMSIS/Include/core_cm7.h ****   \details Invalidates D-Cache for the given address
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 91


2461:Drivers/CMSIS/Include/core_cm7.h ****   \param[in]   addr    address (aligned to 32-byte boundary)
2462:Drivers/CMSIS/Include/core_cm7.h ****   \param[in]   dsize   size of memory block (in number of bytes)
2463:Drivers/CMSIS/Include/core_cm7.h **** */
2464:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void SCB_InvalidateDCache_by_Addr (uint32_t *addr, int32_t dsize)
 1589              		.loc 2 2464 22 view .LVU445
 1590              	.LBB24:
2465:Drivers/CMSIS/Include/core_cm7.h **** {
2466:Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
2467:Drivers/CMSIS/Include/core_cm7.h ****      int32_t op_size = dsize;
 1591              		.loc 2 2467 6 view .LVU446
2468:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t op_addr = (uint32_t)addr;
 1592              		.loc 2 2468 5 view .LVU447
2469:Drivers/CMSIS/Include/core_cm7.h ****      int32_t linesize = 32;                /* in Cortex-M7 size of cache line is fixed to 8 words (
 1593              		.loc 2 2469 6 view .LVU448
2470:Drivers/CMSIS/Include/core_cm7.h **** 
2471:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
 1594              		.loc 2 2471 5 view .LVU449
 1595              	.LBB25:
 1596              	.LBI25:
 1597              		.file 3 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 92


  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 93


  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 143:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 144:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 150:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 151:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 94


 152:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 154:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 157:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 158:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 159:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 160:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 161:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 164:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 168:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 170:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 171:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 177:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 178:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 179:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 180:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 183:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 190:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 191:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 201:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 202:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 95


 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 210:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 212:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 213:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 215:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 216:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 217:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 218:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 221:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 223:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 224:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 225:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 226:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 227:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 229:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 230:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 233:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 235:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 239:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 240:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 241:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 243:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 244:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 247:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 248:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 249:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 252:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 253:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 254:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 255:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 256:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 257:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 258:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 259:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 261:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 264:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 265:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 96


 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 268:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 271:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 273:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 274:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 275:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 277:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 278:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 282:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 285:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 286:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 289:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 290:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 295:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 298:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 303:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 307:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 308:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 310:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 312:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 314:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 316:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 318:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 322:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 97


 323:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 324:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 325:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 327:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 328:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 330:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 331:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 334:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 339:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 343:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 344:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 348:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 350:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 354:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               SP Register value
 355:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 359:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 362:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 363:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 366:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 367:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 370:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 371:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 98


 380:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 381:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 382:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 385:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 388:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 389:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 390:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 391:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 394:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 395:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 396:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 398:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 400:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 405:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 406:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 407:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 412:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 413:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 415:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 416:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 417:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 418:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 420:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 421:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 422:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 424:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 425:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 426:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 427:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 428:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 429:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 430:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 431:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 432:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 433:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 434:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 435:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 436:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 99


 437:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 438:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 439:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 440:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 442:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 444:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 446:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 447:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 448:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 450:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 451:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 453:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 456:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 457:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 458:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 460:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 461:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 462:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 464:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 465:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 471:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 486:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 491:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 492:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 493:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 100


 494:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 495:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 498:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 499:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 500:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 501:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 502:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 503:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 504:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 506:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 507:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 508:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 509:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 511:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 513:Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 518:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 520:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 521:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 522:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 537:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 540:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 541:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 542:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 544:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 548:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 101


 551:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 552:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 554:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 557:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 558:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 560:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 564:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 568:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 572:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 573:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 574:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 575:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 577:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 580:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 582:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 583:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 584:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 585:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 586:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 592:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 596:Drivers/CMSIS/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 598:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 599:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 600:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 601:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 603:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 604:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 605:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 606:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 102


 608:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 609:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 610:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 611:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 612:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 615:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 616:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 621:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 622:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 625:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 626:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 627:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 628:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 630:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 631:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 633:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 634:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 636:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 637:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 638:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 639:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 641:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 644:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 647:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 648:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 649:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 650:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 652:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 654:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 655:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 661:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 663:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 103


 665:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 666:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 669:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 671:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 672:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 673:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 675:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 682:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 683:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 684:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 689:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 690:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 693:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 695:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 696:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 698:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 699:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 700:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 702:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 703:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 704:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 708:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 711:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 712:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 713:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 714:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 715:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 716:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 721:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 104


 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 723:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 724:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 726:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 727:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 731:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 732:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 734:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 735:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 736:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 737:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 738:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 742:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 746:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 749:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 751:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 752:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 755:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 757:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 759:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 760:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 761:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 762:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 763:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 765:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 766:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 767:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 769:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 772:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 775:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 778:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 105


 779:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 781:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(0U);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 787:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 795:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 796:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 797:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 799:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 800:Drivers/CMSIS/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 803:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 804:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)fpscr;
 806:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 809:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 814:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 817:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 818:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 820:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 826:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 827:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 828:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 829:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 830:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 834:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 835:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 106


 836:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 838:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 842:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 845:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 846:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 849:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 853:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 857:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 860:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 861:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 864:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 865:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 869:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 870:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 871:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 872:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 873:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 874:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 876:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 877:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 1598              		.loc 3 877 27 view .LVU450
 1599              	.LBB26:
 878:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 879:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 1600              		.loc 3 879 3 view .LVU451
 1601              		.syntax unified
 1602              	@ 879 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1603 0032 BFF34F8F 		dsb 0xF
 1604              	@ 0 "" 2
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1605              		.loc 3 880 1 is_stmt 0 view .LVU452
 1606              		.thumb
 1607              		.syntax unified
 1608 0036 04E0     		b	.L103
 1609              	.LVL114:
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 107


 1610              	.L104:
 1611              		.loc 3 880 1 view .LVU453
 1612              	.LBE26:
 1613              	.LBE25:
2472:Drivers/CMSIS/Include/core_cm7.h **** 
2473:Drivers/CMSIS/Include/core_cm7.h ****     while (op_size > 0) {
2474:Drivers/CMSIS/Include/core_cm7.h ****       SCB->DCIMVAC = op_addr;
 1614              		.loc 2 2474 7 is_stmt 1 view .LVU454
 1615              		.loc 2 2474 20 is_stmt 0 view .LVU455
 1616 0038 0649     		ldr	r1, .L107
 1617 003a C1F85C22 		str	r2, [r1, #604]
2475:Drivers/CMSIS/Include/core_cm7.h ****       op_addr += (uint32_t)linesize;
 1618              		.loc 2 2475 7 is_stmt 1 view .LVU456
 1619              		.loc 2 2475 15 is_stmt 0 view .LVU457
 1620 003e 2032     		adds	r2, r2, #32
 1621              	.LVL115:
2476:Drivers/CMSIS/Include/core_cm7.h ****       op_size -=           linesize;
 1622              		.loc 2 2476 7 is_stmt 1 view .LVU458
 1623              		.loc 2 2476 15 is_stmt 0 view .LVU459
 1624 0040 203B     		subs	r3, r3, #32
 1625              	.LVL116:
 1626              	.L103:
2473:Drivers/CMSIS/Include/core_cm7.h ****       SCB->DCIMVAC = op_addr;
 1627              		.loc 2 2473 11 is_stmt 1 view .LVU460
 1628 0042 002B     		cmp	r3, #0
 1629 0044 F8DC     		bgt	.L104
2477:Drivers/CMSIS/Include/core_cm7.h ****     }
2478:Drivers/CMSIS/Include/core_cm7.h **** 
2479:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
 1630              		.loc 2 2479 5 view .LVU461
 1631              	.LBB27:
 1632              	.LBI27:
 877:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1633              		.loc 3 877 27 view .LVU462
 1634              	.LBB28:
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1635              		.loc 3 879 3 view .LVU463
 1636              		.syntax unified
 1637              	@ 879 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1638 0046 BFF34F8F 		dsb 0xF
 1639              	@ 0 "" 2
 1640              		.thumb
 1641              		.syntax unified
 1642              	.LBE28:
 1643              	.LBE27:
2480:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
 1644              		.loc 2 2480 5 view .LVU464
 1645              	.LBB29:
 1646              	.LBI29:
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1647              		.loc 3 866 27 view .LVU465
 1648              	.LBB30:
 868:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1649              		.loc 3 868 3 view .LVU466
 1650              		.syntax unified
 1651              	@ 868 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1652 004a BFF36F8F 		isb 0xF
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 108


 1653              	@ 0 "" 2
 1654              	.LVL117:
 868:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1655              		.loc 3 868 3 is_stmt 0 view .LVU467
 1656              		.thumb
 1657              		.syntax unified
 1658              	.LBE30:
 1659              	.LBE29:
 1660              	.LBE24:
 1661              	.LBE23:
 747:LWIP/Target/ethernetif.c **** 
 748:LWIP/Target/ethernetif.c ****   /* USER CODE END HAL ETH RxLinkCallback */
 749:LWIP/Target/ethernetif.c **** }
 1662              		.loc 1 749 1 view .LVU468
 1663 004e 30BC     		pop	{r4, r5}
 1664              	.LCFI33:
 1665              		.cfi_restore 5
 1666              		.cfi_restore 4
 1667              		.cfi_def_cfa_offset 0
 1668              	.LVL118:
 1669              		.loc 1 749 1 view .LVU469
 1670 0050 7047     		bx	lr
 1671              	.L108:
 1672 0052 00BF     		.align	2
 1673              	.L107:
 1674 0054 00ED00E0 		.word	-536810240
 1675              		.cfi_endproc
 1676              	.LFE183:
 1678              		.section	.text.HAL_ETH_TxFreeCallback,"ax",%progbits
 1679              		.align	1
 1680              		.global	HAL_ETH_TxFreeCallback
 1681              		.syntax unified
 1682              		.thumb
 1683              		.thumb_func
 1684              		.fpu fpv5-d16
 1686              	HAL_ETH_TxFreeCallback:
 1687              	.LVL119:
 1688              	.LFB184:
 750:LWIP/Target/ethernetif.c **** 
 751:LWIP/Target/ethernetif.c **** void HAL_ETH_TxFreeCallback(uint32_t *buff)
 752:LWIP/Target/ethernetif.c **** {
 1689              		.loc 1 752 1 is_stmt 1 view -0
 1690              		.cfi_startproc
 1691              		@ args = 0, pretend = 0, frame = 0
 1692              		@ frame_needed = 0, uses_anonymous_args = 0
 1693              		.loc 1 752 1 is_stmt 0 view .LVU471
 1694 0000 08B5     		push	{r3, lr}
 1695              	.LCFI34:
 1696              		.cfi_def_cfa_offset 8
 1697              		.cfi_offset 3, -8
 1698              		.cfi_offset 14, -4
 753:LWIP/Target/ethernetif.c ****   /* USER CODE BEGIN HAL ETH TxFreeCallback */
 754:LWIP/Target/ethernetif.c **** 
 755:LWIP/Target/ethernetif.c ****   pbuf_free((struct pbuf *)buff);
 1699              		.loc 1 755 3 is_stmt 1 view .LVU472
 1700 0002 FFF7FEFF 		bl	pbuf_free
 1701              	.LVL120:
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 109


 756:LWIP/Target/ethernetif.c **** 
 757:LWIP/Target/ethernetif.c ****   /* USER CODE END HAL ETH TxFreeCallback */
 758:LWIP/Target/ethernetif.c **** }
 1702              		.loc 1 758 1 is_stmt 0 view .LVU473
 1703 0006 08BD     		pop	{r3, pc}
 1704              		.cfi_endproc
 1705              	.LFE184:
 1707              		.section	.text.Ethernetif_Input,"ax",%progbits
 1708              		.align	1
 1709              		.global	Ethernetif_Input
 1710              		.syntax unified
 1711              		.thumb
 1712              		.thumb_func
 1713              		.fpu fpv5-d16
 1715              	Ethernetif_Input:
 1716              	.LVL121:
 1717              	.LFB185:
 759:LWIP/Target/ethernetif.c **** 
 760:LWIP/Target/ethernetif.c **** /* USER CODE BEGIN 8 */
 761:LWIP/Target/ethernetif.c **** void Ethernetif_Input(struct netif *netif)
 762:LWIP/Target/ethernetif.c **** {
 1718              		.loc 1 762 1 is_stmt 1 view -0
 1719              		.cfi_startproc
 1720              		@ args = 0, pretend = 0, frame = 0
 1721              		@ frame_needed = 0, uses_anonymous_args = 0
 1722              		.loc 1 762 1 is_stmt 0 view .LVU475
 1723 0000 38B5     		push	{r3, r4, r5, lr}
 1724              	.LCFI35:
 1725              		.cfi_def_cfa_offset 16
 1726              		.cfi_offset 3, -16
 1727              		.cfi_offset 4, -12
 1728              		.cfi_offset 5, -8
 1729              		.cfi_offset 14, -4
 1730 0002 0446     		mov	r4, r0
 763:LWIP/Target/ethernetif.c ****   struct pbuf *p = NULL;
 1731              		.loc 1 763 3 is_stmt 1 view .LVU476
 1732              	.LVL122:
 764:LWIP/Target/ethernetif.c **** 
 765:LWIP/Target/ethernetif.c ****   p = low_level_input(netif);
 1733              		.loc 1 765 3 view .LVU477
 1734              		.loc 1 765 7 is_stmt 0 view .LVU478
 1735 0004 FFF7FEFF 		bl	low_level_input
 1736              	.LVL123:
 766:LWIP/Target/ethernetif.c ****   if (p != NULL)
 1737              		.loc 1 766 3 is_stmt 1 view .LVU479
 1738              		.loc 1 766 6 is_stmt 0 view .LVU480
 1739 0008 20B1     		cbz	r0, .L111
 1740 000a 0546     		mov	r5, r0
 767:LWIP/Target/ethernetif.c ****   {
 768:LWIP/Target/ethernetif.c ****     if (netif->input(p, netif) != ERR_OK)
 1741              		.loc 1 768 5 is_stmt 1 view .LVU481
 1742              		.loc 1 768 14 is_stmt 0 view .LVU482
 1743 000c 2369     		ldr	r3, [r4, #16]
 1744              		.loc 1 768 9 view .LVU483
 1745 000e 2146     		mov	r1, r4
 1746 0010 9847     		blx	r3
 1747              	.LVL124:
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 110


 1748              		.loc 1 768 8 view .LVU484
 1749 0012 00B9     		cbnz	r0, .L114
 1750              	.LVL125:
 1751              	.L111:
 769:LWIP/Target/ethernetif.c ****     {
 770:LWIP/Target/ethernetif.c ****       pbuf_free(p);
 771:LWIP/Target/ethernetif.c ****     }
 772:LWIP/Target/ethernetif.c ****   }
 773:LWIP/Target/ethernetif.c **** }
 1752              		.loc 1 773 1 view .LVU485
 1753 0014 38BD     		pop	{r3, r4, r5, pc}
 1754              	.LVL126:
 1755              	.L114:
 770:LWIP/Target/ethernetif.c ****     }
 1756              		.loc 1 770 7 is_stmt 1 view .LVU486
 1757 0016 2846     		mov	r0, r5
 1758 0018 FFF7FEFF 		bl	pbuf_free
 1759              	.LVL127:
 1760              		.loc 1 773 1 is_stmt 0 view .LVU487
 1761 001c FAE7     		b	.L111
 1762              		.cfi_endproc
 1763              	.LFE185:
 1765              		.global	LAN8742_IOCtx
 1766              		.global	LAN8742
 1767              		.global	TxConfig
 1768              		.global	heth
 1769              		.global	DMATxDscrTab
 1770              		.global	DMARxDscrTab
 1771              		.global	memp_RX_POOL
 1772              		.global	memp_memory_RX_POOL_base
 1773              		.section	.RxDecripSection,"aw"
 1774              		.align	2
 1775              		.set	.LANCHOR6,. + 0
 1778              	DMARxDscrTab:
 1779 0000 00000000 		.space	160
 1779      00000000 
 1779      00000000 
 1779      00000000 
 1779      00000000 
 1780              		.section	.TxDecripSection,"aw"
 1781              		.align	2
 1782              		.set	.LANCHOR5,. + 0
 1785              	DMATxDscrTab:
 1786 0000 00000000 		.space	160
 1786      00000000 
 1786      00000000 
 1786      00000000 
 1786      00000000 
 1787              		.section	.bss.LAN8742,"aw",%nobits
 1788              		.align	2
 1789              		.set	.LANCHOR4,. + 0
 1792              	LAN8742:
 1793 0000 00000000 		.space	32
 1793      00000000 
 1793      00000000 
 1793      00000000 
 1793      00000000 
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 111


 1794              		.section	.bss.RxAllocStatus,"aw",%nobits
 1795              		.set	.LANCHOR0,. + 0
 1798              	RxAllocStatus:
 1799 0000 00       		.space	1
 1800              		.section	.bss.TxConfig,"aw",%nobits
 1801              		.align	2
 1802              		.set	.LANCHOR2,. + 0
 1805              	TxConfig:
 1806 0000 00000000 		.space	56
 1806      00000000 
 1806      00000000 
 1806      00000000 
 1806      00000000 
 1807              		.section	.bss.heth,"aw",%nobits
 1808              		.align	2
 1809              		.set	.LANCHOR1,. + 0
 1812              	heth:
 1813 0000 00000000 		.space	176
 1813      00000000 
 1813      00000000 
 1813      00000000 
 1813      00000000 
 1814              		.section	.bss.memp_memory_RX_POOL_base,"aw",%nobits
 1815              		.align	2
 1818              	memp_memory_RX_POOL_base:
 1819 0000 00000000 		.space	18819
 1819      00000000 
 1819      00000000 
 1819      00000000 
 1819      00000000 
 1820              		.section	.bss.memp_tab_RX_POOL,"aw",%nobits
 1821              		.align	2
 1824              	memp_tab_RX_POOL:
 1825 0000 00000000 		.space	4
 1826              		.section	.data.LAN8742_IOCtx,"aw"
 1827              		.align	2
 1828              		.set	.LANCHOR7,. + 0
 1831              	LAN8742_IOCtx:
 1832 0000 00000000 		.word	ETH_PHY_IO_Init
 1833 0004 00000000 		.word	ETH_PHY_IO_DeInit
 1834 0008 00000000 		.word	ETH_PHY_IO_WriteReg
 1835 000c 00000000 		.word	ETH_PHY_IO_ReadReg
 1836 0010 00000000 		.word	ETH_PHY_IO_GetTick
 1837              		.section	.rodata.memp_RX_POOL,"a"
 1838              		.align	2
 1839              		.set	.LANCHOR3,. + 0
 1842              	memp_RX_POOL:
 1843 0000 2006     		.short	1568
 1844 0002 0C00     		.short	12
 1845 0004 00000000 		.word	memp_memory_RX_POOL_base
 1846 0008 00000000 		.word	memp_tab_RX_POOL
 1847              		.text
 1848              	.Letext0:
 1849              		.file 4 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/machine/_de
 1850              		.file 5 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/sys/_stdint
 1851              		.file 6 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f767xx.h"
 1852              		.file 7 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f7xx.h"
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 112


 1853              		.file 8 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 1854              		.file 9 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_gpio.h"
 1855              		.file 10 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_eth.h"
 1856              		.file 11 "Middlewares/Third_Party/LwIP/src/include/lwip/arch.h"
 1857              		.file 12 "Middlewares/Third_Party/LwIP/src/include/lwip/memp.h"
 1858              		.file 13 "Middlewares/Third_Party/LwIP/src/include/lwip/priv/memp_priv.h"
 1859              		.file 14 "Middlewares/Third_Party/LwIP/src/include/lwip/err.h"
 1860              		.file 15 "Middlewares/Third_Party/LwIP/src/include/lwip/pbuf.h"
 1861              		.file 16 "Middlewares/Third_Party/LwIP/src/include/lwip/ip4_addr.h"
 1862              		.file 17 "Middlewares/Third_Party/LwIP/src/include/lwip/ip_addr.h"
 1863              		.file 18 "Middlewares/Third_Party/LwIP/src/include/lwip/netif.h"
 1864              		.file 19 "Drivers/BSP/Components/lan8742/lan8742.h"
 1865              		.file 20 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
 1866              		.file 21 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/stdio.h"
 1867              		.file 22 "LWIP/Target/ethernetif.h"
 1868              		.file 23 "<built-in>"
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 113


DEFINED SYMBOLS
                            *ABS*:0000000000000000 ethernetif.c
/var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s:17     .text.ETH_PHY_IO_DeInit:0000000000000000 $t
/var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s:25     .text.ETH_PHY_IO_DeInit:0000000000000000 ETH_PHY_IO_DeInit
/var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s:41     .text.low_level_input:0000000000000000 $t
/var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s:47     .text.low_level_input:0000000000000000 low_level_input
/var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s:98     .text.low_level_input:0000000000000020 $d
/var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s:104    .text.low_level_output:0000000000000000 $t
/var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s:110    .text.low_level_output:0000000000000000 low_level_output
/var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s:260    .text.low_level_output:0000000000000094 $d
/var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s:266    .text.pbuf_free_custom:0000000000000000 $t
/var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s:273    .text.pbuf_free_custom:0000000000000000 pbuf_free_custom
/var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s:316    .text.pbuf_free_custom:000000000000001c $d
/var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s:322    .text.ETH_PHY_IO_GetTick:0000000000000000 $t
/var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s:329    .text.ETH_PHY_IO_GetTick:0000000000000000 ETH_PHY_IO_GetTick
/var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s:350    .text.ETH_PHY_IO_Init:0000000000000000 $t
/var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s:357    .text.ETH_PHY_IO_Init:0000000000000000 ETH_PHY_IO_Init
/var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s:379    .text.ETH_PHY_IO_Init:000000000000000c $d
/var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s:384    .text.ETH_PHY_IO_ReadReg:0000000000000000 $t
/var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s:391    .text.ETH_PHY_IO_ReadReg:0000000000000000 ETH_PHY_IO_ReadReg
/var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s:430    .text.ETH_PHY_IO_ReadReg:0000000000000018 $d
/var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s:435    .text.ETH_PHY_IO_WriteReg:0000000000000000 $t
/var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s:442    .text.ETH_PHY_IO_WriteReg:0000000000000000 ETH_PHY_IO_WriteReg
/var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s:481    .text.ETH_PHY_IO_WriteReg:0000000000000018 $d
/var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s:486    .text.ethernetif_input:0000000000000000 $t
/var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s:493    .text.ethernetif_input:0000000000000000 ethernetif_input
/var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s:554    .text.sys_now:0000000000000000 $t
/var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s:561    .text.sys_now:0000000000000000 sys_now
/var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s:582    .text.HAL_ETH_MspInit:0000000000000000 $t
/var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s:589    .text.HAL_ETH_MspInit:0000000000000000 HAL_ETH_MspInit
/var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s:837    .text.HAL_ETH_MspInit:00000000000000fc $d
/var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s:846    .text.HAL_ETH_MspDeInit:0000000000000000 $t
/var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s:853    .text.HAL_ETH_MspDeInit:0000000000000000 HAL_ETH_MspDeInit
/var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s:921    .text.HAL_ETH_MspDeInit:0000000000000050 $d
/var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s:930    .text.ethernet_link_check_state:0000000000000000 $t
/var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s:937    .text.ethernet_link_check_state:0000000000000000 ethernet_link_check_state
/var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s:996    .text.ethernet_link_check_state:0000000000000038 $d
/var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s:1000   .text.ethernet_link_check_state:000000000000003c $t
/var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s:1128   .text.ethernet_link_check_state:00000000000000b0 $d
/var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s:1134   .text.low_level_init:0000000000000000 $t
/var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s:1140   .text.low_level_init:0000000000000000 low_level_init
/var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s:1315   .text.low_level_init:00000000000000d0 $d
/var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s:1327   .rodata.ethernetif_init.str1.4:0000000000000000 $d
/var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s:1337   .text.ethernetif_init:0000000000000000 $t
/var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s:1344   .text.ethernetif_init:0000000000000000 ethernetif_init
/var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s:1405   .text.ethernetif_init:0000000000000034 $d
/var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s:1414   .text.HAL_ETH_RxAllocateCallback:0000000000000000 $t
/var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s:1421   .text.HAL_ETH_RxAllocateCallback:0000000000000000 HAL_ETH_RxAllocateCallback
/var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s:1496   .text.HAL_ETH_RxAllocateCallback:0000000000000040 $d
/var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s:1503   .text.HAL_ETH_RxLinkCallback:0000000000000000 $t
/var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s:1510   .text.HAL_ETH_RxLinkCallback:0000000000000000 HAL_ETH_RxLinkCallback
/var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s:1674   .text.HAL_ETH_RxLinkCallback:0000000000000054 $d
/var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s:1679   .text.HAL_ETH_TxFreeCallback:0000000000000000 $t
/var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s:1686   .text.HAL_ETH_TxFreeCallback:0000000000000000 HAL_ETH_TxFreeCallback
/var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s:1708   .text.Ethernetif_Input:0000000000000000 $t
/var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s:1715   .text.Ethernetif_Input:0000000000000000 Ethernetif_Input
/var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s:1831   .data.LAN8742_IOCtx:0000000000000000 LAN8742_IOCtx
ARM GAS  /var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s 			page 114


/var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s:1792   .bss.LAN8742:0000000000000000 LAN8742
/var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s:1805   .bss.TxConfig:0000000000000000 TxConfig
/var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s:1812   .bss.heth:0000000000000000 heth
/var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s:1785   .TxDecripSection:0000000000000000 DMATxDscrTab
/var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s:1778   .RxDecripSection:0000000000000000 DMARxDscrTab
/var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s:1842   .rodata.memp_RX_POOL:0000000000000000 memp_RX_POOL
/var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s:1818   .bss.memp_memory_RX_POOL_base:0000000000000000 memp_memory_RX_POOL_base
/var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s:1774   .RxDecripSection:0000000000000000 $d
/var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s:1781   .TxDecripSection:0000000000000000 $d
/var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s:1788   .bss.LAN8742:0000000000000000 $d
/var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s:1798   .bss.RxAllocStatus:0000000000000000 RxAllocStatus
/var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s:1799   .bss.RxAllocStatus:0000000000000000 $d
/var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s:1801   .bss.TxConfig:0000000000000000 $d
/var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s:1808   .bss.heth:0000000000000000 $d
/var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s:1815   .bss.memp_memory_RX_POOL_base:0000000000000000 $d
/var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s:1821   .bss.memp_tab_RX_POOL:0000000000000000 $d
/var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s:1824   .bss.memp_tab_RX_POOL:0000000000000000 memp_tab_RX_POOL
/var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s:1827   .data.LAN8742_IOCtx:0000000000000000 $d
/var/folders/bg/n1lwdyp56391g865_v8nrmhm0000gn/T//ccTW8sp9.s:1838   .rodata.memp_RX_POOL:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_ETH_ReadData
memset
HAL_ETH_Transmit
memp_free_pool
HAL_GetTick
HAL_ETH_SetMDIOClockRange
HAL_ETH_ReadPHYRegister
HAL_ETH_WritePHYRegister
pbuf_free
HAL_GPIO_Init
HAL_GPIO_DeInit
LAN8742_GetLinkState
HAL_ETH_Stop
netif_set_down
netif_set_link_down
HAL_ETH_GetMACConfig
HAL_ETH_SetMACConfig
HAL_ETH_Start
netif_set_up
netif_set_link_up
HAL_ETH_Init
memp_init_pool
LAN8742_RegisterBusIO
LAN8742_Init
Error_Handler
printf
etharp_output
memp_malloc_pool
pbuf_alloced_custom
